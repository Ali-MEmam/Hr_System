{"version":3,"sources":["./src/services/candidate/assessments.service.ts","./src/services/meeting-services/invitatioin-without-screening.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgB;AAET;;;AAM3C,MAAM,kBAAkB;IAU7B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QARnC,YAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;QAG9B,gCAAgC;QAChC,iBAAY,GAAE,EAAE,CAAC;IAIuB,CAAC;IAEzC,0FAA0F;IAC3F;;SAEK;IAEJ,2BAA2B;QACzB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAC1D,+DAA+D;QAC/D,kCAAkC;IACnC,CAAC;IAED,OAAO;QACN,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,8BAA8B,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACzE,+CAA+C;IAChD,CAAC;IAED,kBAAkB;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAC7D,CAAC;IAED,WAAW;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAC7D,CAAC;;oFAlCS,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;6FAEP,kBAAkB;cAH9B,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACgB;AAGT;;;AAK3C,MAAM,kCAAkC;IAG7C,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAFnC,YAAO,GAAE,qEAAW,CAAC,OAAO,CAAC;IAEW,CAAC;IAEzC,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACzD,CAAC;IAEF,6BAA6B;IAE7B,wBAAwB;QACtB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;IACpE,CAAC;IAGD,sCAAsC;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iDAAiD,CAAC,CAAC;IACzE,CAAC;IACD,sCAAsC,CAAC,YAAY;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iDAAiD,EAAE,YAAY,CAAC,CAAC;IAEzF,CAAC;IAED,yCAAyC,CAAC,EAAE;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,kDAAkD,GAAE,EAAE,CAAC,CAAC;IAElF,CAAC;IACD,2BAA2B,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,6CAA6C,GAAE,CAAC,CAAC,CAAC;IAC5E,CAAC;IACF,wBAAwB,CAAC,GAAG;QAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,4CAA4C,EAAC,GAAG,CAAC,CAAC;IACzE,CAAC;IACD,UAAU;QACT,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IACrD,CAAC;;oHApCS,kCAAkC;qHAAlC,kCAAkC,WAAlC,kCAAkC,mBAFjC,MAAM;6FAEP,kCAAkC;cAH9C,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssessmentsService {\r\n\r\n  baseUrl = environment.baseURl;\r\n\r\n\r\n  /*  not the real id_candidate */\r\n  id_candidate= 30;\r\n\r\n  \r\n\r\n  constructor(private http:HttpClient,) { }\r\n\r\n  /* post info of candidte in register to get  candidate info and id_candidate  as :  _id */\r\n /*  getCandidate(candidateInfo){\r\n    return this.http.post(this.baseUrl+'candidates/register', candidateInfo);\r\n  } */\r\n\r\n  getCandidateTestAssessments(){\r\n    return this.http.get(\"http://localhost:3000/assessments\");\r\n    \"this.baseUrl+'tests/recruiter/candidate/passed/{id_candidate}\"\r\n    //get candidates tests assessments\r\n   }\r\n\r\n   getUser(){\r\n    return this.http.get(\"http://localhost:3000/users/\" + this.id_candidate);\r\n    \"this.baseUrl+'tests/findall/candidate/passed'\"\r\n   }\r\n\r\n   getFirtContactTest(){\r\n    return this.http.get(\"http://localhost:3000/passedTests/1\");\r\n   }\r\n\r\n   getTecnical(){\r\n    return this.http.get(\"http://localhost:3000/passedTests/2\");\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvitatioinWithoutScreeningService {\r\n  baseUrl =environment.baseURl;\r\n\r\n  constructor(private http:HttpClient,) { }\r\n\r\n  getCandidates(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/candidate');\r\n   }\r\n\r\n  //  invitationWithoutSreening\r\n   \r\n  getPreselectedCandidates(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/preselectedCandidate');\r\n   }\r\n\r\n\r\n   getInvitationWithoutSreeningCandidates(): Observable<any> {\r\n     return this.http.get('http://localhost:3000/invitationWithoutSreening');\r\n    }\r\n    addInvitationWithoutSreeningCandidates(candidateObj):Observable<any> {\r\n      return this.http.post('http://localhost:3000/invitationWithoutSreening' ,candidateObj);\r\n\r\n    }\r\n    \r\n    deleteInvitationWithoutSreeningCandidates(id): Observable<any> {\r\n      return this.http.delete('http://localhost:3000/invitationWithoutSreening/'+ id);\r\n\r\n    }\r\n    deletePreSelectedCandidates(i): Observable<any> {\r\n      return this.http.delete('http://localhost:3000/preselectedCandidate/'+ i);\r\n    }\r\n   addPreselectedCandidates(obj): Observable<any> {\r\n    return this.http.post('http://localhost:3000/preselectedCandidate',obj);\r\n   }\r\n   getAllTest(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/tests');\r\n   }\r\n}\r\n"],"sourceRoot":"webpack:///"}