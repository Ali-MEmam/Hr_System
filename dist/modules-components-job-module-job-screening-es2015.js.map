{"version":3,"sources":["./src/app/business-components/job/job-screening/job-screening.component.ts","./src/app/business-components/job/job-screening/job-screening.component.html","./src/modules/components/job-module/job-screening.ts","./src/routing/jobs-routing/job-screening-routing.ts","./src/services/job/job-screening.service.ts"],"names":[],"mappings":"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","file":"modules-components-job-module-job-screening-es2015.js","sourcesContent":["\r\nimport { Component, OnInit } from '@angular/core';\r\nimport{JobScreeningService} from '../../../../services/job/job-screening.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-job-screening',\r\n  templateUrl: './job-screening.component.html',\r\n  styleUrls: ['./job-screening.component.scss']\r\n})\r\nexport class JobScreeningComponent implements OnInit {\r\n\r\n  constructor(\r\n    \r\n    private toster: ToastrService,\r\n    private jobScreeningService:JobScreeningService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.displayJobScreening()\r\n  }\r\n    /* -------------------------------------------------------------------------- */\r\n  /*                              Display All job screening                      */\r\n  /* -------------------------------------------------------------------------- */\r\n  jobScreeningData;\r\n  displayJobScreening() {\r\n    this.jobScreeningService.getAllJobScreening().subscribe(data => {\r\n      console.log(data);\r\n      this.jobScreeningData=data\r\n      console.log(this.jobScreeningData);\r\n    }\r\n    )\r\n  }\r\n  \r\n  openColapse(content){\r\n    console.log(content);\r\n    //  let displayStyle =content.style.display\r\n    if(content.style.display ==='none'){\r\n      content.style.display = 'inline-block'\r\n    } else{\r\n      content.style.display = 'none'\r\n    }\r\n    \r\n  }\r\n // remove Notes\r\n removeJobScreening(id) {\r\n  console.log(id);\r\n  this.jobScreeningService.deleteJobScreening(id).subscribe(data => {\r\n    console.log(data);\r\n    \r\n    this.toster.success(\"Note Removed Successfully\", '', {\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-full-width',\r\n      closeButton: true\r\n    })\r\n    this.displayJobScreening()\r\n  }, err => {\r\n    this.toster.error(\"There is Error Please Try Again\", '', {\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-full-width',\r\n      closeButton: true\r\n    })\r\n  })\r\n\r\n}\r\nviewDetails(id){\r\n  console.log(id);\r\n  \r\n}\r\n}\r\n","\r\n<div class=\"job-screening_with-data\" *ngIf=\"jobScreeningData\">\r\n\r\n    <table class=\"table job-screening_with-data_table container\">\r\n        <thead>\r\n            <tr>\r\n                <td>\r\n                    screening id\r\n                </td>\r\n                <td>\r\n                    screening label\r\n                </td>\r\n                <td>\r\n                    details\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor='let data of jobScreeningData ; let i =index' id=\"data.id\">\r\n                <td>\r\n                    {{data.screening_id}}\r\n                </td>\r\n                <td>\r\n                    {{data.screening_label}}\r\n                </td>\r\n                <td>\r\n                    <a routerLink=\"details/{{data.id}}\" (click)=\"viewDetails(data.id)\">view</a>\r\n                </td>\r\n                <td>\r\n                    <button class=\"btn table job-screening_with-data_table_delete-btn\" type=\"button\" (click)=\"openColapse(content)\">\r\n                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                      <div #content class=\"card card-body bg-danger table job-screening_with-data_table_delete-btn_content\" style=\"display: none;\"\r\n                      title=\"Remove Notes\"\r\n                      (click)=\"removeJobScreening(data.id)\">\r\n                        Delete\r\n                      </div>\r\n                      </button>\r\n                    \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { jobScreeningRoutingModuel } from 'routing/jobs-routing/job-screening-routing';\r\nimport { JobScreeningComponent } from 'app/business-components/job/job-screening/job-screening.component';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n    declarations: [JobScreeningComponent],\r\n    imports: [\r\n      CommonModule,\r\n      jobScreeningRoutingModuel,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      NgbModule,\r\n      ToastrModule\r\n\r\n    ],\r\n  })\r\n  export class jobScreeningModuel {}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobScreeningComponent } from 'app/business-components/job/job-screening/job-screening.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: JobScreeningComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class jobScreeningRoutingModuel {}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobScreeningService {\r\n  baseUrl =environment.baseURl;\r\n  constructor(private http:HttpClient) { }\r\n  getAllJobScreening(): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.get(this.baseUrl+'screening/');\r\n  }\r\n\r\n  deleteJobScreening(id): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.delete(this.baseUrl+'screening/'+id);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}