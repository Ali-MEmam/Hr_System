{"version":3,"sources":["./src/app/business-components/job/job-criteria/job-criteria.component.ts","./src/app/business-components/job/job-criteria/job-criteria.component.html","./src/modules/components/job-module/job-criteria-module.ts","./src/routing/jobs-routing/job-criteria-routing.ts"],"names":[],"mappings":"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","file":"modules-components-job-module-job-criteria-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NavigationMode } from 'angular-archwizard'\r\nimport { ScreeningServiceService } from 'services/screening/screening-service.service';\r\n\r\n@Component({\r\n  selector: 'app-job-criteria',\r\n  templateUrl: './job-criteria.component.html',\r\n  styleUrls: ['./job-criteria.component.scss']\r\n})\r\nexport class JobCriteriaComponent implements OnInit {\r\n\r\n\r\n  jobCriteriaForm: FormGroup;\r\n  languagesArray: Array<string> = [\r\n    \"chinese\",\r\n    \"spanish\",\r\n    \"english\",\r\n    \"hindi\",\r\n    \"french\",\r\n    \"arabic\",\r\n    \"portuguese\",\r\n    \"bengali\",\r\n    \"russian\",\r\n    \"japanese\",\r\n    \"lahnda\",\r\n    \"german\",\r\n    \"korean\",\r\n    \"turkish\",\r\n  ];\r\n  screeningObj = {}\r\n  tests = []\r\n\r\n  resultOfScreening = false\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private testService: ScreeningServiceService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.jobCriteriaForm = this.fb.group({\r\n      job: ['', Validators.required],\r\n      activityArea: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      expLevel: ['', Validators.required],\r\n      studyLevel: ['', Validators.required],\r\n      language: ['', Validators.required],\r\n      skills: ['', Validators.required],\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  onSubmitJobCriteriaForm(form) {\r\n    console.log(form.value);\r\n    \r\n    this.screeningObj[\"job\"] = form.value.job\r\n    this.screeningObj[\"activityArea\"] = form.value.activityArea\r\n    this.screeningObj[\"country\"] = form.value.country\r\n    this.screeningObj[\"city\"] = form.value.city\r\n    this.screeningObj[\"expLevel\"] = form.value.expLevel\r\n    this.screeningObj[\"studyLevel\"] = form.value.studyLevel\r\n    this.screeningObj[\"language\"] = form.value.language\r\n    this.screeningObj[\"skills\"] = form.value.skills\r\n    console.log(this.screeningObj);\r\n\r\n  }\r\n\r\n}\r\n","<!----------------------------------old job criteria-------------------------------------->\r\n\r\n\r\n<form [formGroup]=\"jobCriteriaForm\" (ngSubmit)=\"onSubmitJobCriteriaForm(jobCriteriaForm)\" class=\"editForm\">\r\n    <!-- <h4 class=\"head text-center\">Create Screening</h4> -->\r\n    <br />\r\n    <div class='row'>\r\n        <div class='col-2'></div>\r\n        <div class='col-8'>\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-12\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Job</label>\r\n                    <input formControlName=\"job\" placeholder=\"Ex: Enginer..\" type=\"text\" class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('job').hasError('required') && jobCriteriaForm.controls['job'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Activity area</label>\r\n                    <input formControlName=\"activityArea\" placeholder=\"Ex: FrontEnd...\" type=\"text\"\r\n                        class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('activityArea').hasError('required') && jobCriteriaForm.controls['activityArea'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Experience Level</label>\r\n                    <input formControlName=\"expLevel\" placeholder=\"Ex: 2 years..\" type=\"text\"\r\n                        class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('expLevel').hasError('required') && jobCriteriaForm.controls['expLevel'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Study level</label>\r\n                    <input formControlName=\"studyLevel\" placeholder=\"Ex: Bachelor's degree..\" type=\"text\"\r\n                        class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('studyLevel').hasError('required') && jobCriteriaForm.controls['studyLevel'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <fieldset class=\"\">\r\n                        <label for=\"customSelect\">Country</label>\r\n                        <select formControlName=\"country\" class=\"custom-select d-block w-100\" id=\"customSelect\">\r\n                            <option selected value=\"egypt\">Egypt</option>\r\n                            <option value=\"morroco\">Morocco</option>\r\n                            <option value=\"france\">France</option>\r\n                        </select>\r\n                    </fieldset>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <fieldset class=\"\">\r\n                        <label for=\"customSelect\">City</label>\r\n                        <select formControlName=\"city\" class=\"custom-select d-block w-100\" id=\"customSelect\">\r\n                            <option selected value=\"alexandria\">Alexandria</option>\r\n                            <option value=\"cairo\">Cairo</option>\r\n\r\n                        </select>\r\n                    </fieldset>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Language</label>\r\n                    <div class=\"pf-field\">\r\n                        <select formControlName=\"language\" type=\"text\" id=\"languages\" class=\"form-dropdown form-control\"\r\n                            name=\"languages\" placeholder=\"English\">\r\n                            <option *ngFor=\"let language of languagesArray\" [value]=\"language\"\r\n                                class=\"form-dropdown__option\" [selected]=\"selectedValue\">\r\n                                {{ language.toUpperCase() }}</option>\r\n                        </select>\r\n                        <div class=\"form-text text-muted danger\"\r\n                            *ngIf=\"jobCriteriaForm.get('language').hasError('required') && jobCriteriaForm.controls['language'].touched \">\r\n                            This\r\n                            field is required!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group col-12\">\r\n                    <label class=\"form-control-label\" for=\"email\">Skills</label>\r\n                    <textarea class=\"form-control input-md\" formControlName=\"skills\" placeholder=\"Ex: HTML, Css..\"\r\n                        type=\"text\"></textarea>\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('skills').hasError('required')&& jobCriteriaForm.controls['skills'].touched\">This\r\n                        field is required!</small>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn btnn\">Save</button>\r\n\r\n        </div>\r\n        <div class='col-2'></div>\r\n    </div>\r\n</form>\r\n\r\n<!----------------------------------old job criteria-------------------------------------->","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { jobCriteriaRoutingModuel } from 'routing/jobs-routing/job-criteria-routing';\r\nimport { JobCriteriaComponent } from 'app/business-components/job/job-criteria/job-criteria.component';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n    declarations: [JobCriteriaComponent],\r\n    imports: [\r\n      CommonModule,\r\n      jobCriteriaRoutingModuel,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      NgbModule,\r\n      ToastrModule\r\n\r\n    ],\r\n  })\r\n  export class jobCriteriaModuel {}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobCriteriaComponent } from 'app/business-components/job/job-criteria/job-criteria.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: JobCriteriaComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class jobCriteriaRoutingModuel {}"],"sourceRoot":"webpack:///"}