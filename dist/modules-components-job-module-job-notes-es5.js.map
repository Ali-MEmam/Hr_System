{"version":3,"sources":["webpack:///src/app/business-components/job/job-note-list/job-note-list.component.ts","webpack:///src/app/business-components/job/job-note-list/job-note-list.component.html","webpack:///src/modules/components/job-module/job-notes.ts","webpack:///src/routing/jobs-routing/job-notes-routing.ts","webpack:///src/services/job/job-notes.service.ts"],"names":["JobNoteListComponent","formBuilder","modalService","toster","_location","noteService","logs","addNewNote","displayNotes","addNote","group","title","required","note","content","open","size","result","then","closeResult","reason","getDismissReason","ESC","BACKDROP_CLICK","getAllNotes","subscribe","data","console","log","notesData","value","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","date","logsObj","full_name","username","type_user","description","profile","created","type_activity","addLogs","success","timeOut","positionClass","closeButton","reset","dismissAll","err","error","goback","back","style","display","id","noteName","find","x","deleteNote","selector","templateUrl","styleUrls","jobNoteListModuel","declarations","imports","routes","path","component","jobNoteListRoutingModuel","forChild","exports","JobNotesService","http","baseUrl","baseURl","get","noteObj","post","providedIn"],"mappings":"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","file":"modules-components-job-module-job-notes-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { NgbModal , ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Location } from \"@angular/common\";\r\nimport{JobNotesService} from '../../../../services/job/job-notes.service'\r\nimport { LogsService } from 'services/job/logs.service';\r\n@Component({\r\n  selector: 'app-job-note-list',\r\n  templateUrl: './job-note-list.component.html',\r\n  styleUrls: ['./job-note-list.component.scss']\r\n})\r\nexport class JobNoteListComponent implements OnInit {\r\n\r\n  addNote: FormGroup;\r\n  addNewNote = {}\r\n  closeResult: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private toster: ToastrService,\r\n    private _location: Location,\r\n    private noteService:JobNotesService,\r\n    private logs:LogsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.displayNotes()\r\n    this.addNote = this.formBuilder.group(\r\n      {\r\n        title: [\"\", Validators.required],\r\n        note: [\"\", Validators.required],\r\n        // userType: [\"candiate\"],\r\n      },\r\n\r\n    );\r\n  }\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                           modal Inviteation start                          */\r\n  /* -------------------------------------------------------------------------- */\r\n  open(content) {\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n\r\n  // This function is used in open\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                              Display All Notes                        */\r\n  /* -------------------------------------------------------------------------- */\r\n  notesData;\r\n  displayNotes() {\r\n    this.noteService.getAllNotes().subscribe(data => {\r\n      console.log(data);\r\n      console.log(this.notesData);\r\n      \r\n      this.notesData=data\r\n    }\r\n    )\r\n  }\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                           modal Inviteation end                            */\r\n  /* -------------------------------------------------------------------------- */\r\n\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                      Submit TO modal Inviteation form                      */\r\n  /* -------------------------------------------------------------------------- */\r\n  onSubmit(addNote) {\r\n    this.addNewNote = {\r\n      title: addNote.value.title,\r\n      note: addNote.value.note,\r\n    };\r\n\r\n/* add logs */\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    var date = mm + '-' + dd + '-' + yyyy;\r\n\r\n    let logsObj={\r\n      full_name:\"Mohamed Ahmed\",\r\n      username:\"Mohamed Ahmed\",\r\n      type_user:\"recruiter\",\r\n      description:`Note Added \"${addNote.value.title}\"`,\r\n      profile:\"\",\r\n      created: date,\r\n      type_activity:\"Add Note\"\r\n  }\r\n  this.logs.addLogs(logsObj).subscribe()\r\n\r\n\r\n\r\n    this.noteService.addNote(this.addNewNote).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.toster.success(\"Note added successfully\", '', {\r\n          timeOut: 3000,\r\n          positionClass: 'toast-top-full-width',\r\n          closeButton: true\r\n        })\r\n        this.displayNotes()\r\n        addNote.reset()\r\n       this.modalService.dismissAll()\r\n      },\r\n      (err) => {\r\n        this.toster.error(\"We Have Problem Please Try Again\", \"\", {\r\n          timeOut: 3000,\r\n          positionClass: \"toast-top-full-width\",\r\n          closeButton: true,\r\n        });\r\n        this.goback();\r\n      }\r\n    );\r\n  }\r\n  goback() {\r\n    this._location.back();\r\n  }\r\n\r\n  openColapse(content){\r\n    console.log(content);\r\n    //  let displayStyle =content.style.display\r\n    if(content.style.display ==='none'){\r\n      content.style.display = 'inline-block'\r\n    } else{\r\n      content.style.display = 'none'\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n  // remove Notes\r\n  removeNote(id) {\r\n    console.log(id);\r\n\r\n    /* add logs */\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    var date = mm + '-' + dd + '-' + yyyy;\r\n\r\n    let noteName = this.notesData.find(x=> x.value)\r\n    let logsObj={\r\n      full_name:\"Mohamed Ahmed\",\r\n      username:\"Mohamed Ahmed\",\r\n      type_user:\"recruiter\",\r\n      description:`Note deleted \"${noteName.title}\"`,\r\n      profile:\"\",\r\n      created: date,\r\n      type_activity:\"Delete Note\"\r\n  }\r\n  this.logs.addLogs(logsObj).subscribe()\r\n\r\n\r\n\r\n\r\n    this.noteService.deleteNote(id).subscribe(data => {\r\n      console.log(data);\r\n      \r\n      this.toster.success(\"Note Removed Successfully\", '', {\r\n        timeOut: 3000,\r\n        positionClass: 'toast-top-full-width',\r\n        closeButton: true\r\n      })\r\n      this.displayNotes()\r\n    }, err => {\r\n      this.toster.error(\"There is Error Please Try Again\", '', {\r\n        timeOut: 3000,\r\n        positionClass: 'toast-top-full-width',\r\n        closeButton: true\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n ","<div class=\"note-list_no-data\" *ngIf=\"notesData.length == 0\">\r\n    <div class=\"note-list_no-data_icon\">\r\n        <i class=\"fas fa-exclamation\"></i>\r\n    </div>\r\n    <div class=\"note-list_no-data_paragraph\">\r\n        <p>Theire is no notes right now !</p>\r\n    </div>\r\n    <div class=\"note-list_no-data_create-new\">\r\n        <button class=\"btn btn-secondary btn-block\" (click)=\"open(note)\">create note</button>\r\n    </div>\r\n</div>\r\n<div class=\"note-list_with-data\" *ngIf=\"notesData.length > 0\">\r\n    <div class=\"note-list_with-data_create-note container\" (click)=\"open(note)\">\r\n        <i class=\"fas fa-plus-circle note-list_with-data_create-note_icon\"></i>\r\n        <p class=\"note-list_with-data_create-note_paragraph\">create new</p>\r\n    </div>\r\n    <table class=\"table note-list_with-data_table container\">\r\n        <thead>\r\n            <tr>\r\n                <td>\r\n                    title\r\n                </td>\r\n                <td>\r\n                    create date\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor='let note of notesData ; let i =index' id=\"note.id\">\r\n                <td>\r\n                    {{note.title}}\r\n                </td>\r\n                <td>\r\n                    {{note.note}}\r\n                </td>\r\n                <td>\r\n                    <button class=\"btn table note-list_with-data_table_delete-btn\" type=\"button\" (click)=\"openColapse(content)\">\r\n                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                      <div #content class=\"card card-body bg-danger table note-list_with-data_table_delete-btn_content\" style=\"display: none;\"\r\n                      title=\"Remove Notes\"\r\n                      (click)=\"removeNote(note.id)\">\r\n                        Delete\r\n                      </div>\r\n                      </button>\r\n                    \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<!-----------------------------------------Start Invitation Modal------------------------------------>\r\n<div class=\"card-content\">\r\n    <div class=\"card-body\">\r\n        <ng-template #note let-c=\"close\" let-d=\"dismiss\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Add Candidate</h4>\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <section id=\"filter\" class=\"mb-3\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <form [formGroup]=\"addNote\" (ngSubmit)=\"onSubmit(addNote)\">\r\n                                <div class=\"row\">\r\n                                    <!-- ------------------------------title------------------------------- -->\r\n                                    <div class=\"col-lg-12\">\r\n                                        <span class=\"pf-title\">Title</span>\r\n                                        <div class=\"pf-field\">\r\n                                            <input type=\"text\" formControlName=\"title\" id=\"title\" autocomplete=\"off\"\r\n                                                name=\"title\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- ------------------------------note------------------------------- -->\r\n                                    <div class=\"col-lg-12\">\r\n                                        <span class=\"pf-title\">Note</span>\r\n                                        <div class=\"pf-field\">\r\n                                            <textarea type=\"text\" formControlName=\"note\" id=\"note\" autocomplete=\"off\"\r\n                                                name=\"note\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <!-- ----------------------------- Form Action ----------------------------- -->\r\n                                    <button type=\"button\" class=\"btn btn-secondary closeBtn btn-raised\"\r\n                                        (click)=\"c('Close click')\">Close</button>\r\n                                    <button type=\"submit\" class=\"btn confirmBtn btn-raised\"\r\n                                        [disabled]=\"addNote.invalid\">Confirm</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n<!-----------------------------------------End Invitation Modal------------------------------------>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { jobNoteListRoutingModuel } from 'routing/jobs-routing/job-notes-routing';\r\nimport { JobNoteListComponent } from 'app/business-components/job/job-note-list/job-note-list.component';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n    declarations: [JobNoteListComponent],\r\n    imports: [\r\n      CommonModule,\r\n      jobNoteListRoutingModuel,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      NgbModule,\r\n      ToastrModule\r\n\r\n    ],\r\n  })\r\n  export class jobNoteListModuel {}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobNoteListComponent } from 'app/business-components/job/job-note-list/job-note-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: JobNoteListComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class jobNoteListRoutingModuel {}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobNotesService {\r\n  baseUrl =environment.baseURl; \r\n  constructor(private http:HttpClient) { }\r\n  getAllNotes(): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.get(this.baseUrl+'notes/');\r\n  }\r\n  addNote(noteObj): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.post(this.baseUrl+'notes/',noteObj);\r\n  }\r\n  deleteNote(id): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.delete(this.baseUrl+'notes/'+id);\r\n  }\r\n\r\n}\r\n"]}