{"version":3,"sources":["./src/app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component.ts","./src/app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component.html","./src/modules/components/candidate-module/list-of-meeting.module.ts","./src/routing/candidate-routing/list-of-meeting-routing.module.ts","./src/services/candidate/list-of-meeting.service.ts"],"names":[],"mappings":"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","file":"modules-components-candidate-module-list-of-meeting-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ListOfMeetingService } from 'services/candidate/list-of-meeting.service';\r\n\r\n@Component({\r\n  selector: 'app-candidate-list-of-meeting',\r\n  templateUrl: './candidate-list-of-meeting.component.html',\r\n  styleUrls: ['./candidate-list-of-meeting.component.scss']\r\n})\r\nexport class CandidateListOfMeetingComponent implements OnInit {\r\n\r\n  constructor( private lisfOfMeetingService:ListOfMeetingService) { }\r\n  tests=[];\r\n  \r\n  ngOnInit(): void {\r\n    \r\n    this.lisfOfMeetingService.getAllTestForCandidate().subscribe(response=>{\r\n      console.log(response);\r\n      this.tests = response;\r\n      console.log(this.tests);\r\n    },error=>{\r\n      console.log(error +'this is error')\r\n    })\r\n    \r\n  }\r\n  chat(){\r\n    console.log(\"hoiiiiiiiiiiiii\");\r\nwindow.open(\"https://www.w3schools.com\");  }\r\n}\r\n","<div class=\"row no-gutters\">\r\n    <div class=\"col-lg-12 col-md-12 mb-5\">\r\n        <div class=\"padding-left\">\r\n            <div class=\"manage-jobs-sec\">\r\n                <div class=\"border-title\">\r\n                    <div class=\"container\">\r\n                        <h3>List Of Meetings</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"main-wrapper\">\r\n            <div class=\"container\">\r\n                <!-- display data depends on if there is data or no -->\r\n                <div *ngIf=\"tests.length > 0; then meetingList; else noMeetingList\"></div>\r\n                <!-- if there is data -->\r\n                <ng-template #meetingList>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Recruiter</td>\r\n                                    <td>Screening ID</td>\r\n                                    <td>Type of Meeting</td>\r\n                                    <td>Date</td>\r\n                                    <td>Status</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"tests.length > 0\">\r\n                                <tr *ngFor=\"let test of tests\">\r\n                                    <td>\r\n                                        <h3>\r\n                                            <span>{{ test.recrutier_name }}</span>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <a title=\"\">{{ test.screening_id }}</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <a title=\"\">{{ test.type }}</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <span>{{ test.created }}</span>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <span [ngClass]=\"test.status\">{{ test.status }}</span>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td class=\"table-list-title\" *ngIf=\"test.status === 'available'\">\r\n                                        <h3>\r\n                                            <a class=\"start-btn\" routerLink=\"meet-bot\">Start</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td class=\"table-list-title\" *ngIf=\"test.status === 'done'\">\r\n                                        <h3>\r\n                                            <a class=\"history-btn\" routerLink=\"meeting-history\">History</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </ng-template>\r\n            <!-- if there is no data to show -->\r\n            <ng-template #noMeetingList class=\"col-12\">\r\n                <p class=\"no-data-view\">there is no list of meeting yet</p>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n    <!-- </div> -->\r\n</div>\r\n<app-spinner *ngIf=\"!tests\"></app-spinner>\r\n<!-- <app-footer></app-footer> -->","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ListOfMeetingRoutingModuel } from \"../../../routing/candidate-routing/list-of-meeting-routing.module\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { ListUsersRoutingModule } from \"routing/user-managment-routing/list-users-routing.module\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { CandidateListOfMeetingComponent } from \"app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component\";\r\n\r\n@NgModule({\r\n  declarations: [CandidateListOfMeetingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ListOfMeetingRoutingModuel,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    ListUsersRoutingModule,\r\n    FlexLayoutModule,\r\n  ],\r\n})\r\nexport class ListOfMeetingModuel {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CandidateListOfMeetingComponent } from \"../../app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: CandidateListOfMeetingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListOfMeetingRoutingModuel {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListOfMeetingService {\r\n  baseUrl =environment.baseURl;\r\n\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  getAllTestForCandidate(): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.get(this.baseUrl+'tests');\r\n  }\r\n \r\n} \r\n"],"sourceRoot":"webpack:///"}