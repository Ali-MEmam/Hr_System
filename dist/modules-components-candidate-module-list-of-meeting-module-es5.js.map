{"version":3,"sources":["webpack:///src/app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component.ts","webpack:///src/app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component.html","webpack:///src/modules/components/candidate-module/list-of-meeting.module.ts","webpack:///src/routing/candidate-routing/list-of-meeting-routing.module.ts","webpack:///src/services/candidate/list-of-meeting.service.ts"],"names":["CandidateListOfMeetingComponent","lisfOfMeetingService","tests","getAllTestForCandidate","subscribe","response","console","log","error","window","open","selector","templateUrl","styleUrls","ListOfMeetingModuel","declarations","imports","routes","path","component","ListOfMeetingRoutingModuel","forChild","exports","ListOfMeetingService","http","baseUrl","baseURl","get","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBgB;;;;;;AA2CoB;;AACI;;AACI;;AAA2C;;AAAK;;AACpD;;AACJ;;;;;;AACA;;AACI;;AACI;;AAAoD;;AAAO;;AAC/D;;AACJ;;;;;;AAnCJ;;AACI;;AACI;;AACI;;AAAM;;AAAyB;;AACnC;;AACJ;;AACA;;AACI;;AACI;;AAAY;;AAAuB;;AACvC;;AACJ;;AACA;;AACI;;AACI;;AAAY;;AAAe;;AAC/B;;AACJ;;AACA;;AACI;;AACI;;AAAM;;AAAkB;;AAC5B;;AACJ;;AACA;;AACI;;AACI;;AAA8B;;AAAiB;;AACnD;;AACJ;;AACA;;AAKA;;AAKA;;AACJ;;;;;;AAlCkB;;AAAA;;AAKM;;AAAA;;AAKA;;AAAA;;AAKN;;AAAA;;AAKA;;AAAA;;AAAwB;;AAAA;;AAGT;;AAAA;;AAKA;;AAAA;;;;;;AAhCrC;;AACI;;AAsCJ;;;;;;AAtCQ;;AAAA;;;;;;AAdhB;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAS;;AACb;;AAAI;;AAAY;;AAChB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AACA;;AACJ;;AACJ;;AACA;;AAwCJ;;AACJ;;;;;;AAzCe;;AAAA;;;;;;AA6CnB;;AAAwB;;AAA+B;;;;;;AAMvE;;;;QD3EaA,+B;;;AAEX,+CAAqBC,oBAArB,EAAgE;AAAA;;AAA3C,aAAAA,oBAAA,GAAAA,oBAAA;AACrB,aAAAC,KAAA,GAAM,EAAN;AADmE;;;;mCAG3D;AAAA;;AAEN,eAAKD,oBAAL,CAA0BE,sBAA1B,GAAmDC,SAAnD,CAA6D,UAAAC,QAAQ,EAAE;AACrEC,mBAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,iBAAI,CAACH,KAAL,GAAaG,QAAb;AACAC,mBAAO,CAACC,GAAR,CAAY,KAAI,CAACL,KAAjB;AACD,WAJD,EAIE,UAAAM,KAAK,EAAE;AACPF,mBAAO,CAACC,GAAR,CAAYC,KAAK,GAAE,eAAnB;AACD,WAND;AAQD;;;+BACG;AACFF,iBAAO,CAACC,GAAR,CAAY,iBAAZ;AACJE,gBAAM,CAACC,IAAP,CAAY,2BAAZ;AAA4C;;;;;;;uBAlB/BV,+B,EAA+B,gK;AAAA,K;;;YAA/BA,+B;AAA+B,oD;AAAA,e;AAAA,a;AAAA,klB;AAAA;AAAA;ACR5C;;AACI;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAI;;AAAgB;;AACxB;;AACJ;;AAGJ;;AACJ;;AACA;;AACI;;AAEI;;AAEA;;AA0DJ;;AAGJ;;AACJ;;AAEJ;;AACA;;AAnFA;;;;;;;;AAgBqB;;AAAA,iGAA8D,UAA9D,EAA8D,KAA9D,EAA8D,UAA9D,EAA8D,KAA9D;;AAmER;;AAAA;;;;;;;;;sED3EAA,+B,EAA+B;cAL3C,uDAK2C;eALjC;AACTW,kBAAQ,EAAE,+BADD;AAETC,qBAAW,EAAE,4CAFJ;AAGTC,mBAAS,EAAE,CAAC,4CAAD;AAHF,S;AAKiC,Q;;;;;;;;;;;;;;;;;;;;;;AER5C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAqBaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBAVrB,CACP,4DADO,EAEP,oHAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,oEALO,EAMP,+GANO,EAOP,qEAPO,CAUqB;;;;0HAAnBA,mB,EAAmB;AAAA,uBAXf,sJAWe;AAXgB,kBAE5C,4DAF4C,EAG5C,oHAH4C,EAI5C,0DAJ4C,EAK5C,kEAL4C,EAM5C,oEAN4C,EAO5C,+GAP4C,EAQ5C,qEAR4C;AAWhB,O;AAHZ,K;;;;;sEAGPA,mB,EAAmB;cAZ/B,sDAY+B;eAZtB;AACRC,sBAAY,EAAE,CAAC,sJAAD,CADN;AAERC,iBAAO,EAAE,CACP,4DADO,EAEP,oHAFO,EAGP,0DAHO,EAIP,kEAJO,EAKP,oEALO,EAMP,+GANO,EAOP,qEAPO;AAFD,S;AAYsB,Q;;;;;;;;;;;;;;;;;;ACrBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,0B;;;;;YAAAA;;;;yBAAAA,0B;AAA0B,O;AAAA,gBAH5B,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAG4B,EAF3B,4DAE2B;;;;0HAA1BG,0B,EAA0B;AAAA;AAAA,kBAF3B,4DAE2B;AAAA,O;AAFf,K;;;;;sEAEXA,0B,EAA0B;cAJtC,sDAIsC;eAJ7B;AACRJ,iBAAO,EAAE,CAAC,6DAAaK,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAI6B,Q;;;;;;;;;;;;;;;;;;ACfvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaC,oB;;;AAGX,oCAAoBC,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAC,OAAA,GAAS,sEAAYC,OAArB;AAEwC;;;;iDAElB;AACpB;AACA,iBAAO,KAAKF,IAAL,CAAUG,GAAV,CAAc,KAAKF,OAAL,GAAa,OAA3B,CAAP;AACD;;;;;;;uBARUF,oB,EAAoB,uH;AAAA,K;;;aAApBA,oB;AAAoB,eAApBA,oBAAoB,K;AAAA,kBAFnB;;;;;sEAEDA,oB,EAAoB;cAHhC,wDAGgC;eAHrB;AACVK,oBAAU,EAAE;AADF,S;AAGqB,Q","file":"modules-components-candidate-module-list-of-meeting-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ListOfMeetingService } from 'services/candidate/list-of-meeting.service';\r\n\r\n@Component({\r\n  selector: 'app-candidate-list-of-meeting',\r\n  templateUrl: './candidate-list-of-meeting.component.html',\r\n  styleUrls: ['./candidate-list-of-meeting.component.scss']\r\n})\r\nexport class CandidateListOfMeetingComponent implements OnInit {\r\n\r\n  constructor( private lisfOfMeetingService:ListOfMeetingService) { }\r\n  tests=[];\r\n  \r\n  ngOnInit(): void {\r\n    \r\n    this.lisfOfMeetingService.getAllTestForCandidate().subscribe(response=>{\r\n      console.log(response);\r\n      this.tests = response;\r\n      console.log(this.tests);\r\n    },error=>{\r\n      console.log(error +'this is error')\r\n    })\r\n    \r\n  }\r\n  chat(){\r\n    console.log(\"hoiiiiiiiiiiiii\");\r\nwindow.open(\"https://www.w3schools.com\");  }\r\n}\r\n","<div class=\"row no-gutters\">\r\n    <div class=\"col-lg-12 col-md-12 mb-5\">\r\n        <div class=\"padding-left\">\r\n            <div class=\"manage-jobs-sec\">\r\n                <div class=\"border-title\">\r\n                    <div class=\"container\">\r\n                        <h3>List Of Meetings</h3>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"main-wrapper\">\r\n            <div class=\"container\">\r\n                <!-- display data depends on if there is data or no -->\r\n                <div *ngIf=\"tests.length > 0; then meetingList; else noMeetingList\"></div>\r\n                <!-- if there is data -->\r\n                <ng-template #meetingList>\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Recruiter</td>\r\n                                    <td>Screening ID</td>\r\n                                    <td>Type of Meeting</td>\r\n                                    <td>Date</td>\r\n                                    <td>Status</td>\r\n                                    <td></td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody *ngIf=\"tests.length > 0\">\r\n                                <tr *ngFor=\"let test of tests\">\r\n                                    <td>\r\n                                        <h3>\r\n                                            <span>{{ test.recrutier_name }}</span>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <a title=\"\">{{ test.screening_id }}</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <a title=\"\">{{ test.type }}</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <span>{{ test.created }}</span>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h3>\r\n                                            <span [ngClass]=\"test.status\">{{ test.status }}</span>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td class=\"table-list-title\" *ngIf=\"test.status === 'available'\">\r\n                                        <h3>\r\n                                            <a class=\"start-btn\" routerLink=\"meet-bot\">Start</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td class=\"table-list-title\" *ngIf=\"test.status === 'done'\">\r\n                                        <h3>\r\n                                            <a class=\"history-btn\" routerLink=\"meeting-history\">History</a>\r\n                                        </h3>\r\n                                    </td>\r\n                                    <td></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n            </ng-template>\r\n            <!-- if there is no data to show -->\r\n            <ng-template #noMeetingList class=\"col-12\">\r\n                <p class=\"no-data-view\">there is no list of meeting yet</p>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n    <!-- </div> -->\r\n</div>\r\n<app-spinner *ngIf=\"!tests\"></app-spinner>\r\n<!-- <app-footer></app-footer> -->","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ListOfMeetingRoutingModuel } from \"../../../routing/candidate-routing/list-of-meeting-routing.module\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { ListUsersRoutingModule } from \"routing/user-managment-routing/list-users-routing.module\";\r\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { CandidateListOfMeetingComponent } from \"app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component\";\r\n\r\n@NgModule({\r\n  declarations: [CandidateListOfMeetingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ListOfMeetingRoutingModuel,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgbModule,\r\n    ListUsersRoutingModule,\r\n    FlexLayoutModule,\r\n  ],\r\n})\r\nexport class ListOfMeetingModuel {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { CandidateListOfMeetingComponent } from \"../../app/candidate-components/candidate-list-of-meeting/candidate-list-of-meeting.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: CandidateListOfMeetingComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListOfMeetingRoutingModuel {}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListOfMeetingService {\r\n  baseUrl =environment.baseURl;\r\n\r\n  constructor(private http:HttpClient) { }\r\n  \r\n  getAllTestForCandidate(): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.get(this.baseUrl+'tests');\r\n  }\r\n \r\n} \r\n"]}