{"version":3,"sources":["./src/app/business-components/job/job-note-list/job-note-list.component.ts","./src/app/business-components/job/job-note-list/job-note-list.component.html","./src/modules/components/job-module/job-notes.ts","./src/routing/jobs-routing/job-notes-routing.ts","./src/services/job/job-notes.service.ts"],"names":[],"mappings":"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","file":"modules-components-job-module-job-notes-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\r\nimport { NgbModal , ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Location } from \"@angular/common\";\r\nimport{JobNotesService} from '../../../../services/job/job-notes.service'\r\nimport { LogsService } from 'services/job/logs.service';\r\n@Component({\r\n  selector: 'app-job-note-list',\r\n  templateUrl: './job-note-list.component.html',\r\n  styleUrls: ['./job-note-list.component.scss']\r\n})\r\nexport class JobNoteListComponent implements OnInit {\r\n\r\n  addNote: FormGroup;\r\n  addNewNote = {}\r\n  closeResult: string;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private modalService: NgbModal,\r\n    private toster: ToastrService,\r\n    private _location: Location,\r\n    private noteService:JobNotesService,\r\n    private logs:LogsService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.displayNotes()\r\n    this.addNote = this.formBuilder.group(\r\n      {\r\n        title: [\"\", Validators.required],\r\n        note: [\"\", Validators.required],\r\n        // userType: [\"candiate\"],\r\n      },\r\n\r\n    );\r\n  }\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                           modal Inviteation start                          */\r\n  /* -------------------------------------------------------------------------- */\r\n  open(content) {\r\n    this.modalService.open(content, { size: 'lg' }).result.then((result) => {\r\n      this.closeResult = `Closed with: ${result}`;\r\n    }, (reason) => {\r\n      this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n    });\r\n  }\r\n\r\n\r\n  // This function is used in open\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                              Display All Notes                        */\r\n  /* -------------------------------------------------------------------------- */\r\n  notesData;\r\n  displayNotes() {\r\n    this.noteService.getAllNotes().subscribe(data => {\r\n      console.log(data);\r\n      console.log(this.notesData);\r\n      \r\n      this.notesData=data\r\n    }\r\n    )\r\n  }\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                           modal Inviteation end                            */\r\n  /* -------------------------------------------------------------------------- */\r\n\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                      Submit TO modal Inviteation form                      */\r\n  /* -------------------------------------------------------------------------- */\r\n  onSubmit(addNote) {\r\n    this.addNewNote = {\r\n      title: addNote.value.title,\r\n      note: addNote.value.note,\r\n    };\r\n\r\n/* add logs */\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    var date = mm + '-' + dd + '-' + yyyy;\r\n\r\n    let logsObj={\r\n      full_name:\"Mohamed Ahmed\",\r\n      username:\"Mohamed Ahmed\",\r\n      type_user:\"recruiter\",\r\n      description:`Note Added \"${addNote.value.title}\"`,\r\n      profile:\"\",\r\n      created: date,\r\n      type_activity:\"Add Note\"\r\n  }\r\n  this.logs.addLogs(logsObj).subscribe()\r\n\r\n\r\n\r\n    this.noteService.addNote(this.addNewNote).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.toster.success(\"Note added successfully\", '', {\r\n          timeOut: 3000,\r\n          positionClass: 'toast-top-full-width',\r\n          closeButton: true\r\n        })\r\n        this.displayNotes()\r\n        addNote.reset()\r\n       this.modalService.dismissAll()\r\n      },\r\n      (err) => {\r\n        this.toster.error(\"We Have Problem Please Try Again\", \"\", {\r\n          timeOut: 3000,\r\n          positionClass: \"toast-top-full-width\",\r\n          closeButton: true,\r\n        });\r\n        this.goback();\r\n      }\r\n    );\r\n  }\r\n  goback() {\r\n    this._location.back();\r\n  }\r\n\r\n  openColapse(content){\r\n    console.log(content);\r\n    //  let displayStyle =content.style.display\r\n    if(content.style.display ==='none'){\r\n      content.style.display = 'inline-block'\r\n    } else{\r\n      content.style.display = 'none'\r\n    }\r\n    \r\n  }\r\n\r\n  \r\n  // remove Notes\r\n  removeNote(id) {\r\n    console.log(id);\r\n\r\n    /* add logs */\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n    var date = mm + '-' + dd + '-' + yyyy;\r\n\r\n    let noteName = this.notesData.find(x=> x.value)\r\n    let logsObj={\r\n      full_name:\"Mohamed Ahmed\",\r\n      username:\"Mohamed Ahmed\",\r\n      type_user:\"recruiter\",\r\n      description:`Note deleted \"${noteName.title}\"`,\r\n      profile:\"\",\r\n      created: date,\r\n      type_activity:\"Delete Note\"\r\n  }\r\n  this.logs.addLogs(logsObj).subscribe()\r\n\r\n\r\n\r\n\r\n    this.noteService.deleteNote(id).subscribe(data => {\r\n      console.log(data);\r\n      \r\n      this.toster.success(\"Note Removed Successfully\", '', {\r\n        timeOut: 3000,\r\n        positionClass: 'toast-top-full-width',\r\n        closeButton: true\r\n      })\r\n      this.displayNotes()\r\n    }, err => {\r\n      this.toster.error(\"There is Error Please Try Again\", '', {\r\n        timeOut: 3000,\r\n        positionClass: 'toast-top-full-width',\r\n        closeButton: true\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n}\r\n ","<div class=\"note-list_no-data\" *ngIf=\"notesData.length == 0\">\r\n    <div class=\"note-list_no-data_icon\">\r\n        <i class=\"fas fa-exclamation\"></i>\r\n    </div>\r\n    <div class=\"note-list_no-data_paragraph\">\r\n        <p>Theire is no notes right now !</p>\r\n    </div>\r\n    <div class=\"note-list_no-data_create-new\">\r\n        <button class=\"btn btn-secondary btn-block\" (click)=\"open(note)\">create note</button>\r\n    </div>\r\n</div>\r\n<div class=\"note-list_with-data\" *ngIf=\"notesData.length > 0\">\r\n    <div class=\"note-list_with-data_create-note container\" (click)=\"open(note)\">\r\n        <i class=\"fas fa-plus-circle note-list_with-data_create-note_icon\"></i>\r\n        <p class=\"note-list_with-data_create-note_paragraph\">create new</p>\r\n    </div>\r\n    <table class=\"table note-list_with-data_table container\">\r\n        <thead>\r\n            <tr>\r\n                <td>\r\n                    title\r\n                </td>\r\n                <td>\r\n                    create date\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor='let note of notesData ; let i =index' id=\"note.id\">\r\n                <td>\r\n                    {{note.title}}\r\n                </td>\r\n                <td>\r\n                    {{note.note}}\r\n                </td>\r\n                <td>\r\n                    <button class=\"btn table note-list_with-data_table_delete-btn\" type=\"button\" (click)=\"openColapse(content)\">\r\n                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                      <div #content class=\"card card-body bg-danger table note-list_with-data_table_delete-btn_content\" style=\"display: none;\"\r\n                      title=\"Remove Notes\"\r\n                      (click)=\"removeNote(note.id)\">\r\n                        Delete\r\n                      </div>\r\n                      </button>\r\n                    \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>\r\n\r\n\r\n<!-----------------------------------------Start Invitation Modal------------------------------------>\r\n<div class=\"card-content\">\r\n    <div class=\"card-body\">\r\n        <ng-template #note let-c=\"close\" let-d=\"dismiss\">\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">Add Candidate</h4>\r\n                <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"d('Cross click')\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n            </div>\r\n\r\n            <section id=\"filter\" class=\"mb-3\">\r\n                <div class=\"modal-body\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-sm-12\">\r\n                            <form [formGroup]=\"addNote\" (ngSubmit)=\"onSubmit(addNote)\">\r\n                                <div class=\"row\">\r\n                                    <!-- ------------------------------title------------------------------- -->\r\n                                    <div class=\"col-lg-12\">\r\n                                        <span class=\"pf-title\">Title</span>\r\n                                        <div class=\"pf-field\">\r\n                                            <input type=\"text\" formControlName=\"title\" id=\"title\" autocomplete=\"off\"\r\n                                                name=\"title\" />\r\n                                        </div>\r\n                                    </div>\r\n                                    <!-- ------------------------------note------------------------------- -->\r\n                                    <div class=\"col-lg-12\">\r\n                                        <span class=\"pf-title\">Note</span>\r\n                                        <div class=\"pf-field\">\r\n                                            <textarea type=\"text\" formControlName=\"note\" id=\"note\" autocomplete=\"off\"\r\n                                                name=\"note\"></textarea>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <!-- ----------------------------- Form Action ----------------------------- -->\r\n                                    <button type=\"button\" class=\"btn btn-secondary closeBtn btn-raised\"\r\n                                        (click)=\"c('Close click')\">Close</button>\r\n                                    <button type=\"submit\" class=\"btn confirmBtn btn-raised\"\r\n                                        [disabled]=\"addNote.invalid\">Confirm</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </ng-template>\r\n    </div>\r\n</div>\r\n<!-----------------------------------------End Invitation Modal------------------------------------>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { jobNoteListRoutingModuel } from 'routing/jobs-routing/job-notes-routing';\r\nimport { JobNoteListComponent } from 'app/business-components/job/job-note-list/job-note-list.component';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n    declarations: [JobNoteListComponent],\r\n    imports: [\r\n      CommonModule,\r\n      jobNoteListRoutingModuel,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      NgbModule,\r\n      ToastrModule\r\n\r\n    ],\r\n  })\r\n  export class jobNoteListModuel {}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobNoteListComponent } from 'app/business-components/job/job-note-list/job-note-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: JobNoteListComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class jobNoteListRoutingModuel {}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobNotesService {\r\n  baseUrl =environment.baseURl; \r\n  constructor(private http:HttpClient) { }\r\n  getAllNotes(): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.get(this.baseUrl+'notes/');\r\n  }\r\n  addNote(noteObj): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.post(this.baseUrl+'notes/',noteObj);\r\n  }\r\n  deleteNote(id): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.delete(this.baseUrl+'notes/'+id);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}