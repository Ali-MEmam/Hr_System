{"version":3,"sources":["webpack:///src/app/candidate-components/change-password/change-password.component.ts","webpack:///src/app/candidate-components/change-password/change-password.component.html","webpack:///src/modules/components/candidate-module/change-password.module.ts","webpack:///src/routing/candidate-routing/change-password-routing.module.ts"],"names":["ChangePasswordComponent","http","authService","formBuilder","route","changePasswordService","router","toster","_location","isLoading","isAuthenticated","changedPswd","changePassword","newPassword","value","confirmPassword","oldPassword","subscribe","data","console","log","success","timeOut","positionClass","closeButton","err","error","goback","changePasswordForm","group","required","minLength","compose","userType","validators","password","bind","validator","userSub","user","c","get","invalid","formGroup","passwordNotMatch","back","onSubmit","selector","templateUrl","styleUrls","ChangePasswordModuel","declarations","imports","routes","path","component","ChangePasswordRoutingModuel","forChild","exports"],"mappings":"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","file":"modules-components-candidate-module-change-password-module-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators, AbstractControl } from \"@angular/forms\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { AuthService } from \"services/core-services/authentication-services/auth.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ChangepasswordService } from \"services/candidate/changepassword.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { Location } from \"@angular/common\";\r\nimport { MustMatch } from '../../../services/helpers.service';\r\n\r\n@Component({\r\n  selector: \"app-change-password\",\r\n  templateUrl: \"./change-password.component.html\",\r\n  styleUrls: [\"./change-password.component.scss\"],\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  private userSub: Subscription;\r\n\r\n  changePasswordForm: FormGroup;\r\n  isLoading = false;\r\n  isAuthenticated = false;\r\n  changedPswd = {};\r\n\r\n  constructor(\r\n    public http: HttpClient,\r\n    public authService: AuthService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private changePasswordService: ChangepasswordService,\r\n    private router: Router,\r\n    private toster: ToastrService,\r\n    private _location: Location\r\n  ) {}\r\n\r\n  /* -------------------------------------------------------------------------- */\r\n  /*                               Submit TO ChangePassword                     */\r\n  /* -------------------------------------------------------------------------- */\r\n  onSubmit(changePassword) {\r\n    const newPassword = changePassword.value.newPassword;\r\n    const confirmPassword = changePassword.value.confirmPassword;\r\n    const oldPassword = changePassword.value.oldPassword;\r\n\r\n    this.changedPswd = {\r\n      newPassword,\r\n      confirmPassword,\r\n      oldPassword,\r\n    };\r\n    this.changePasswordService.changePassword(this.changedPswd).subscribe(\r\n      (data) => {\r\n        console.log(data);\r\n        this.toster.success(\"Password changed successfully\",'', {\r\n          timeOut: 3000,\r\n          positionClass: 'toast-top-full-width',\r\n          closeButton:true\r\n          }) \r\n      },\r\n      (err) => {\r\n        this.toster.error(\"We Have Problem Please Try Again\", \"\", {\r\n          timeOut: 3000,\r\n          positionClass: \"toast-top-full-width\",\r\n          closeButton: true,\r\n        });\r\n        this.goback();\r\n      }\r\n    );\r\n  }\r\n  ngOnInit(): void {\r\n    /* -------------------------- loginForm Validation -------------------------- */\r\n    this.changePasswordForm = this.formBuilder.group(\r\n      {\r\n        oldPassword: [\"\", Validators.required],\r\n        newPassword: [\"\", [Validators.required, Validators.minLength(4)]],\r\n        confirmPassword: [\"\",Validators.compose([Validators.required])],\r\n        userType: [\"candiate\"],\r\n      },{\r\n        validators: this.password.bind(this),\r\n        validator: MustMatch('newPassword', 'confirmPassword'),}\r\n    \r\n    );\r\n    this.userSub = this.authService.user.subscribe((user) => {\r\n      this.isAuthenticated = !!user;\r\n    });\r\n    if (this.isAuthenticated) {\r\n      // this.router.navigate(['pages/recruiter'], {relativeTo: this.route.parent});\r\n    }\r\n  }\r\n\r\n  /* --------------------------checkif Password match confirmPassword -------------------------- */\r\n\r\n  passwordConfirming(c: AbstractControl): { invalid: boolean } {\r\n    if (c.get('newPassword').value !== c.get('confirmPassword').value) {\r\n        return {invalid: true};\r\n    }\r\n}\r\npassword(formGroup: FormGroup) {\r\n  const { value: password } = formGroup.get(\"newPassword\");\r\n  const { value: confirmPassword } = formGroup.get(\"confirmPassword\");\r\n  return password === confirmPassword ? null : { passwordNotMatch: true };\r\n}\r\n  goback() {\r\n    this._location.back();\r\n  }\r\n}\r\n","<div class=\"resumme\">\r\n    <!-- <app-candidate-header></app-candidate-header> -->\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <!-- <app-candidate-sidebar class=\"col-lg-3\"></app-candidate-sidebar> -->\r\n\r\n\r\n            <div class=\"col-lg-12 column\">\r\n                <div class=\"padding-left\">\r\n\r\n                    <div class=\"manage-jobs-sec\">\r\n                        <div class=\"border-title\">\r\n                            <h3>Change Password</h3>\r\n                        </div>\r\n                        <div class=\"change-password\">\r\n                            <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"onSubmit(changePasswordForm)\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-lg-6\">\r\n                                        <!-- ------------------------------OldPassword ------------------------------- -->\r\n                                        <div class=\"form-group\"  [ngClass]=\"{'is-invalid': changePasswordForm.get('oldPassword').errors && changePasswordForm.get('oldPassword').touched }\">\r\n                                            <span class=\"pf-title\">Old Password</span>\r\n                                        <div class=\"pf-field\">\r\n                                            <input type=\"password\" formControlName=\"oldPassword\" id=\"opwd\"\r\n                                                autocomplete=\"off\" name=\"oldPassword\" required\r\n                                                placeholder=\"old Password\"\r\n                                                />\r\n                                        </div>\r\n                                        </div>\r\n                                        <!-- ------------------------------ NewPassword ------------------------------- -->\r\n                                        <div class=\"form-group\" [ngClass]=\"{'is-invalid': changePasswordForm.get('newPassword').errors && changePasswordForm.get('newPassword').touched }\">\r\n                                        <span class=\"pf-title\">New Password</span>\r\n                                        <div class=\"pf-field\"  [ngClass]=\"{'is-invalid': changePasswordForm.get('newPassword').errors && changePasswordForm.get('newPassword').touched }\">\r\n                                            <input type=\"password\" formControlName=\"newPassword\" id=\"npwd\"\r\n                                                autocomplete=\"off\" name=\"newPassword\"                                             placeholder=\"Confirm Password\"\r\n                                                placeholder=\"new Password\"\r\n                                                />\r\n                                        </div>\r\n                                        </div>\r\n                                        <div *ngIf=\"changePasswordForm.get('newPassword').value.length < 4 && changePasswordForm.get('newPassword').touched\"  class=\"help-block\">password should be morethan 4 character</div> \r\n                                        <!-- ------------------------------ ConfirmPassword ------------------------------- -->\r\n                                        <div class=\"form-group\" [ngClass]=\"{'is-invalid': changePasswordForm.get('confirmPassword').errors && changePasswordForm.get('confirmPassword').touched }\">\r\n                                        <span class=\"pf-title\">Confirm Password</span>\r\n                                        <div class=\"pf-field\"  [ngClass]=\"{'is-invalid': changePasswordForm.get('confirmPassword').errors && changePasswordForm.get('confirmPassword').touched }\">\r\n                                            <input     class=\"form-control\"\r\n                                            type=\"password\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                            formControlName=\"confirmPassword\"\r\n                                            id=\"confirmpwd\"\r\n                                            autocomplete=\"off\" />\r\n                                        </div>\r\n                                        </div>\r\n                                        <div *ngIf=\"changePasswordForm.get('confirmPassword').value  != changePasswordForm.get('newPassword').value \" class=\"help-block\">\r\n                                            password not match</div> \r\n                                        <!-- ----------------------------- Form Action ----------------------------- -->\r\n                                        <button class=\"btn-style saveBtn mt-3\" type=\"submit\" [disabled]=\"changePasswordForm.invalid\">Update</button>\r\n                                    </div>\r\n                                    <div class=\"col-lg-6\">\r\n                                        <i class=\"la la-key big-icon\"></i>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ChangePasswordRoutingModuel } from \"../../../routing/candidate-routing/change-password-routing.module\";\r\nimport { ChangePasswordComponent } from \"../../../app/candidate-components/change-password/change-password.component\";\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\n@NgModule({\r\n  declarations: [ChangePasswordComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ChangePasswordRoutingModuel,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n  ],\r\n})\r\nexport class ChangePasswordModuel {}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { ChangePasswordComponent } from \"../../app/candidate-components/change-password/change-password.component\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: ChangePasswordComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ChangePasswordRoutingModuel {}\r\n"]}