{"version":3,"sources":["webpack:///src/app/business-components/job/job-screening/job-screening.component.ts","webpack:///src/app/business-components/job/job-screening/job-screening.component.html","webpack:///src/modules/components/job-module/job-screening.ts","webpack:///src/routing/jobs-routing/job-screening-routing.ts","webpack:///src/services/job/job-screening.service.ts"],"names":["JobScreeningComponent","toster","jobScreeningService","displayJobScreening","getAllJobScreening","subscribe","data","console","log","jobScreeningData","content","style","display","id","deleteJobScreening","success","timeOut","positionClass","closeButton","err","error","selector","templateUrl","styleUrls","jobScreeningModuel","declarations","imports","routes","path","component","jobScreeningRoutingModuel","forChild","exports","JobScreeningService","http","baseUrl","baseURl","get","providedIn"],"mappings":"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","file":"modules-components-job-module-job-screening-es5.js","sourcesContent":["\r\nimport { Component, OnInit } from '@angular/core';\r\nimport{JobScreeningService} from '../../../../services/job/job-screening.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n@Component({\r\n  selector: 'app-job-screening',\r\n  templateUrl: './job-screening.component.html',\r\n  styleUrls: ['./job-screening.component.scss']\r\n})\r\nexport class JobScreeningComponent implements OnInit {\r\n\r\n  constructor(\r\n    \r\n    private toster: ToastrService,\r\n    private jobScreeningService:JobScreeningService,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.displayJobScreening()\r\n  }\r\n    /* -------------------------------------------------------------------------- */\r\n  /*                              Display All job screening                      */\r\n  /* -------------------------------------------------------------------------- */\r\n  jobScreeningData;\r\n  displayJobScreening() {\r\n    this.jobScreeningService.getAllJobScreening().subscribe(data => {\r\n      console.log(data);\r\n      this.jobScreeningData=data\r\n      console.log(this.jobScreeningData);\r\n    }\r\n    )\r\n  }\r\n  \r\n  openColapse(content){\r\n    console.log(content);\r\n    //  let displayStyle =content.style.display\r\n    if(content.style.display ==='none'){\r\n      content.style.display = 'inline-block'\r\n    } else{\r\n      content.style.display = 'none'\r\n    }\r\n    \r\n  }\r\n // remove Notes\r\n removeJobScreening(id) {\r\n  console.log(id);\r\n  this.jobScreeningService.deleteJobScreening(id).subscribe(data => {\r\n    console.log(data);\r\n    \r\n    this.toster.success(\"Note Removed Successfully\", '', {\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-full-width',\r\n      closeButton: true\r\n    })\r\n    this.displayJobScreening()\r\n  }, err => {\r\n    this.toster.error(\"There is Error Please Try Again\", '', {\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-full-width',\r\n      closeButton: true\r\n    })\r\n  })\r\n\r\n}\r\nviewDetails(id){\r\n  console.log(id);\r\n  \r\n}\r\n}\r\n","\r\n<div class=\"job-screening_with-data\" *ngIf=\"jobScreeningData\">\r\n\r\n    <table class=\"table job-screening_with-data_table container\">\r\n        <thead>\r\n            <tr>\r\n                <td>\r\n                    screening id\r\n                </td>\r\n                <td>\r\n                    screening label\r\n                </td>\r\n                <td>\r\n                    details\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr *ngFor='let data of jobScreeningData ; let i =index' id=\"data.id\">\r\n                <td>\r\n                    {{data.screening_id}}\r\n                </td>\r\n                <td>\r\n                    {{data.screening_label}}\r\n                </td>\r\n                <td>\r\n                    <a routerLink=\"details/{{data.id}}\" (click)=\"viewDetails(data.id)\">view</a>\r\n                </td>\r\n                <td>\r\n                    <button class=\"btn table job-screening_with-data_table_delete-btn\" type=\"button\" (click)=\"openColapse(content)\">\r\n                        <i class=\"fas fa-ellipsis-v\"></i>\r\n                      <div #content class=\"card card-body bg-danger table job-screening_with-data_table_delete-btn_content\" style=\"display: none;\"\r\n                      title=\"Remove Notes\"\r\n                      (click)=\"removeJobScreening(data.id)\">\r\n                        Delete\r\n                      </div>\r\n                      </button>\r\n                    \r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { jobScreeningRoutingModuel } from 'routing/jobs-routing/job-screening-routing';\r\nimport { JobScreeningComponent } from 'app/business-components/job/job-screening/job-screening.component';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n    declarations: [JobScreeningComponent],\r\n    imports: [\r\n      CommonModule,\r\n      jobScreeningRoutingModuel,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      NgbModule,\r\n      ToastrModule\r\n\r\n    ],\r\n  })\r\n  export class jobScreeningModuel {}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobScreeningComponent } from 'app/business-components/job/job-screening/job-screening.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: JobScreeningComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class jobScreeningRoutingModuel {}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport { Observable } from 'rxjs';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JobScreeningService {\r\n  baseUrl =environment.baseURl;\r\n  constructor(private http:HttpClient) { }\r\n  getAllJobScreening(): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.get(this.baseUrl+'screening/');\r\n  }\r\n\r\n  deleteJobScreening(id): Observable<any> {\r\n    // Real End Point => tests/find/candidate\r\n    return this.http.delete(this.baseUrl+'screening/'+id);\r\n  }\r\n}\r\n"]}