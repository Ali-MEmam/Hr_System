{"version":3,"sources":["webpack:///src/app/business-components/job/job-criteria/job-criteria.component.ts","webpack:///src/app/business-components/job/job-criteria/job-criteria.component.html","webpack:///src/modules/components/job-module/job-criteria-module.ts","webpack:///src/routing/jobs-routing/job-criteria-routing.ts"],"names":["JobCriteriaComponent","fb","http","testService","languagesArray","screeningObj","tests","resultOfScreening","jobCriteriaForm","group","job","required","activityArea","country","city","expLevel","studyLevel","language","skills","form","console","log","value","onSubmitJobCriteriaForm","selector","templateUrl","styleUrls","jobCriteriaModuel","declarations","imports","routes","path","component","jobCriteriaRoutingModuel","forChild","exports"],"mappings":"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","file":"modules-components-job-module-job-criteria-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NavigationMode } from 'angular-archwizard'\r\nimport { ScreeningServiceService } from 'services/screening/screening-service.service';\r\n\r\n@Component({\r\n  selector: 'app-job-criteria',\r\n  templateUrl: './job-criteria.component.html',\r\n  styleUrls: ['./job-criteria.component.scss']\r\n})\r\nexport class JobCriteriaComponent implements OnInit {\r\n\r\n\r\n  jobCriteriaForm: FormGroup;\r\n  languagesArray: Array<string> = [\r\n    \"chinese\",\r\n    \"spanish\",\r\n    \"english\",\r\n    \"hindi\",\r\n    \"french\",\r\n    \"arabic\",\r\n    \"portuguese\",\r\n    \"bengali\",\r\n    \"russian\",\r\n    \"japanese\",\r\n    \"lahnda\",\r\n    \"german\",\r\n    \"korean\",\r\n    \"turkish\",\r\n  ];\r\n  screeningObj = {}\r\n  tests = []\r\n\r\n  resultOfScreening = false\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private http: HttpClient,\r\n    private testService: ScreeningServiceService,) { }\r\n\r\n  ngOnInit(): void {\r\n    this.jobCriteriaForm = this.fb.group({\r\n      job: ['', Validators.required],\r\n      activityArea: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      expLevel: ['', Validators.required],\r\n      studyLevel: ['', Validators.required],\r\n      language: ['', Validators.required],\r\n      skills: ['', Validators.required],\r\n    })\r\n    \r\n  }\r\n\r\n\r\n  onSubmitJobCriteriaForm(form) {\r\n    console.log(form.value);\r\n    \r\n    this.screeningObj[\"job\"] = form.value.job\r\n    this.screeningObj[\"activityArea\"] = form.value.activityArea\r\n    this.screeningObj[\"country\"] = form.value.country\r\n    this.screeningObj[\"city\"] = form.value.city\r\n    this.screeningObj[\"expLevel\"] = form.value.expLevel\r\n    this.screeningObj[\"studyLevel\"] = form.value.studyLevel\r\n    this.screeningObj[\"language\"] = form.value.language\r\n    this.screeningObj[\"skills\"] = form.value.skills\r\n    console.log(this.screeningObj);\r\n\r\n  }\r\n\r\n}\r\n","<!----------------------------------old job criteria-------------------------------------->\r\n\r\n\r\n<form [formGroup]=\"jobCriteriaForm\" (ngSubmit)=\"onSubmitJobCriteriaForm(jobCriteriaForm)\" class=\"editForm\">\r\n    <!-- <h4 class=\"head text-center\">Create Screening</h4> -->\r\n    <br />\r\n    <div class='row'>\r\n        <div class='col-2'></div>\r\n        <div class='col-8'>\r\n            <div class=\"row\">\r\n                <div class=\"form-group col-12\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Job</label>\r\n                    <input formControlName=\"job\" placeholder=\"Ex: Enginer..\" type=\"text\" class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('job').hasError('required') && jobCriteriaForm.controls['job'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Activity area</label>\r\n                    <input formControlName=\"activityArea\" placeholder=\"Ex: FrontEnd...\" type=\"text\"\r\n                        class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('activityArea').hasError('required') && jobCriteriaForm.controls['activityArea'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Experience Level</label>\r\n                    <input formControlName=\"expLevel\" placeholder=\"Ex: 2 years..\" type=\"text\"\r\n                        class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('expLevel').hasError('required') && jobCriteriaForm.controls['expLevel'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Study level</label>\r\n                    <input formControlName=\"studyLevel\" placeholder=\"Ex: Bachelor's degree..\" type=\"text\"\r\n                        class=\"form-control input-md\">\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('studyLevel').hasError('required') && jobCriteriaForm.controls['studyLevel'].touched \">This\r\n                        field is required!</small>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <fieldset class=\"\">\r\n                        <label for=\"customSelect\">Country</label>\r\n                        <select formControlName=\"country\" class=\"custom-select d-block w-100\" id=\"customSelect\">\r\n                            <option selected value=\"egypt\">Egypt</option>\r\n                            <option value=\"morroco\">Morocco</option>\r\n                            <option value=\"france\">France</option>\r\n                        </select>\r\n                    </fieldset>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <fieldset class=\"\">\r\n                        <label for=\"customSelect\">City</label>\r\n                        <select formControlName=\"city\" class=\"custom-select d-block w-100\" id=\"customSelect\">\r\n                            <option selected value=\"alexandria\">Alexandria</option>\r\n                            <option value=\"cairo\">Cairo</option>\r\n\r\n                        </select>\r\n                    </fieldset>\r\n                </div>\r\n                <div class=\"form-group col-6\">\r\n                    <label class=\"form-control-label\" for=\"firstname\">Language</label>\r\n                    <div class=\"pf-field\">\r\n                        <select formControlName=\"language\" type=\"text\" id=\"languages\" class=\"form-dropdown form-control\"\r\n                            name=\"languages\" placeholder=\"English\">\r\n                            <option *ngFor=\"let language of languagesArray\" [value]=\"language\"\r\n                                class=\"form-dropdown__option\" [selected]=\"selectedValue\">\r\n                                {{ language.toUpperCase() }}</option>\r\n                        </select>\r\n                        <div class=\"form-text text-muted danger\"\r\n                            *ngIf=\"jobCriteriaForm.get('language').hasError('required') && jobCriteriaForm.controls['language'].touched \">\r\n                            This\r\n                            field is required!\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"form-group col-12\">\r\n                    <label class=\"form-control-label\" for=\"email\">Skills</label>\r\n                    <textarea class=\"form-control input-md\" formControlName=\"skills\" placeholder=\"Ex: HTML, Css..\"\r\n                        type=\"text\"></textarea>\r\n                    <small class=\"form-text text-muted danger\"\r\n                        *ngIf=\"jobCriteriaForm.get('skills').hasError('required')&& jobCriteriaForm.controls['skills'].touched\">This\r\n                        field is required!</small>\r\n                </div>\r\n            </div>\r\n\r\n            <button class=\"btn btnn\">Save</button>\r\n\r\n        </div>\r\n        <div class='col-2'></div>\r\n    </div>\r\n</form>\r\n\r\n<!----------------------------------old job criteria-------------------------------------->","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { jobCriteriaRoutingModuel } from 'routing/jobs-routing/job-criteria-routing';\r\nimport { JobCriteriaComponent } from 'app/business-components/job/job-criteria/job-criteria.component';\r\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n    declarations: [JobCriteriaComponent],\r\n    imports: [\r\n      CommonModule,\r\n      jobCriteriaRoutingModuel,\r\n      RouterModule,\r\n      ReactiveFormsModule,\r\n      FormsModule,\r\n      NgbModule,\r\n      ToastrModule\r\n\r\n    ],\r\n  })\r\n  export class jobCriteriaModuel {}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { JobCriteriaComponent } from 'app/business-components/job/job-criteria/job-criteria.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: JobCriteriaComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class jobCriteriaRoutingModuel {}"]}