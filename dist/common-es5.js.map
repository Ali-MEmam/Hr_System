{"version":3,"sources":["webpack:///src/services/candidate/assessments.service.ts","webpack:///src/services/meeting-services/invitatioin-without-screening.service.ts"],"names":["AssessmentsService","http","baseUrl","baseURl","id_candidate","get","providedIn","InvitatioinWithoutScreeningService","candidateObj","post","id","i","obj"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaA,kB;;;AAUX,kCAAoBC,IAApB,EAAmC;AAAA;;AAAf,aAAAA,IAAA,GAAAA,IAAA;AARpB,aAAAC,OAAA,GAAU,sEAAYC,OAAtB;AAGA;;AACA,aAAAC,YAAA,GAAc,EAAd;AAIyC;AAEzC;;AACD;;;;;;;sDAI4B;AACzB,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,mCAAd,CAAP;AACA,0EAFyB,CAGzB;AACA;;;kCAEM;AACN,iBAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAc,iCAAiC,KAAKD,YAApD,CAAP;AACA;AACA;;;6CAEiB;AACjB,iBAAO,KAAKH,IAAL,CAAUI,GAAV,CAAc,qCAAd,CAAP;AACA;;;sCAEU;AACV,iBAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAc,qCAAd,CAAP;AACA;;;;;;;uBAlCSL,kB,EAAkB,uH;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVM,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACT/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,kC;;;AAGX,kDAAoBN,IAApB,EAAmC;AAAA;;AAAf,aAAAA,IAAA,GAAAA,IAAA;AAFpB,aAAAC,OAAA,GAAS,sEAAYC,OAArB;AAEyC;;;;wCAE5B;AACX,iBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,iCAAd,CAAP;AACA,S,CAEF;;;;mDAEwB;AACtB,iBAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAc,4CAAd,CAAP;AACA;;;iEAGqC;AACpC,iBAAO,KAAKJ,IAAL,CAAUI,GAAV,CAAc,iDAAd,CAAP;AACA;;;+DACsCG,Y,EAAY;AACjD,iBAAO,KAAKP,IAAL,CAAUQ,IAAV,CAAe,iDAAf,EAAkED,YAAlE,CAAP;AAED;;;kEAEyCE,E,EAAE;AAC1C,iBAAO,KAAKT,IAAL,WAAiB,qDAAoDS,EAArE,CAAP;AAED;;;oDAC2BC,C,EAAC;AAC3B,iBAAO,KAAKV,IAAL,WAAiB,gDAA+CU,CAAhE,CAAP;AACD;;;iDACuBC,G,EAAG;AAC3B,iBAAO,KAAKX,IAAL,CAAUQ,IAAV,CAAe,4CAAf,EAA4DG,GAA5D,CAAP;AACA;;;qCACS;AACT,iBAAO,KAAKX,IAAL,CAAUI,GAAV,CAAc,6BAAd,CAAP;AACA;;;;;;;uBApCSE,kC,EAAkC,uH;AAAA,K;;;aAAlCA,kC;AAAkC,eAAlCA,kCAAkC,K;AAAA,kBAFjC;;;;;sEAEDA,kC,EAAkC;cAH9C,wDAG8C;eAHnC;AACVD,oBAAU,EAAE;AADF,S;AAGmC,Q","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssessmentsService {\r\n\r\n  baseUrl = environment.baseURl;\r\n\r\n\r\n  /*  not the real id_candidate */\r\n  id_candidate= 30;\r\n\r\n  \r\n\r\n  constructor(private http:HttpClient,) { }\r\n\r\n  /* post info of candidte in register to get  candidate info and id_candidate  as :  _id */\r\n /*  getCandidate(candidateInfo){\r\n    return this.http.post(this.baseUrl+'candidates/register', candidateInfo);\r\n  } */\r\n\r\n  getCandidateTestAssessments(){\r\n    return this.http.get(\"http://localhost:3000/assessments\");\r\n    \"this.baseUrl+'tests/recruiter/candidate/passed/{id_candidate}\"\r\n    //get candidates tests assessments\r\n   }\r\n\r\n   getUser(){\r\n    return this.http.get(\"http://localhost:3000/users/\" + this.id_candidate);\r\n    \"this.baseUrl+'tests/findall/candidate/passed'\"\r\n   }\r\n\r\n   getFirtContactTest(){\r\n    return this.http.get(\"http://localhost:3000/passedTests/1\");\r\n   }\r\n\r\n   getTecnical(){\r\n    return this.http.get(\"http://localhost:3000/passedTests/2\");\r\n   }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {environment} from '../../environments/environment';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvitatioinWithoutScreeningService {\r\n  baseUrl =environment.baseURl;\r\n\r\n  constructor(private http:HttpClient,) { }\r\n\r\n  getCandidates(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/candidate');\r\n   }\r\n\r\n  //  invitationWithoutSreening\r\n   \r\n  getPreselectedCandidates(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/preselectedCandidate');\r\n   }\r\n\r\n\r\n   getInvitationWithoutSreeningCandidates(): Observable<any> {\r\n     return this.http.get('http://localhost:3000/invitationWithoutSreening');\r\n    }\r\n    addInvitationWithoutSreeningCandidates(candidateObj):Observable<any> {\r\n      return this.http.post('http://localhost:3000/invitationWithoutSreening' ,candidateObj);\r\n\r\n    }\r\n    \r\n    deleteInvitationWithoutSreeningCandidates(id): Observable<any> {\r\n      return this.http.delete('http://localhost:3000/invitationWithoutSreening/'+ id);\r\n\r\n    }\r\n    deletePreSelectedCandidates(i): Observable<any> {\r\n      return this.http.delete('http://localhost:3000/preselectedCandidate/'+ i);\r\n    }\r\n   addPreselectedCandidates(obj): Observable<any> {\r\n    return this.http.post('http://localhost:3000/preselectedCandidate',obj);\r\n   }\r\n   getAllTest(): Observable<any> {\r\n    return this.http.get('http://localhost:3000/tests');\r\n   }\r\n}\r\n"]}