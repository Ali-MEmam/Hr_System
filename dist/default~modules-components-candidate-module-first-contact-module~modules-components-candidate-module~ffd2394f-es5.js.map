{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/a11y.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/keycodes.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/layout.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/observers.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/overlay.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/portal.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/text-field.js","webpack:///node_modules/@angular/cdk/fesm2015/cdk.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/button.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/core.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/form-field.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/input.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/paginator.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/select.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tooltip.js"],"names":["ID_DELIMINATOR","addAriaReferencedId","el","attr","id","ids","getAriaReferenceIds","some","existingId","trim","push","setAttribute","join","removeAriaReferencedId","filteredIds","filter","val","length","removeAttribute","getAttribute","match","RegisteredMessage","MESSAGES_CONTAINER_ID","CDK_DESCRIBEDBY_ID_PREFIX","CDK_DESCRIBEDBY_HOST_ATTRIBUTE","nextId","messageRegistry","Map","messagesContainer","AriaDescriber","_document","hostElement","message","_canBeDescribed","_setMessageId","set","messageElement","referenceCount","has","_createMessageElement","_isElementDescribedByMessage","_addMessageReference","_isElementNode","_removeMessageReference","registeredMessage","get","_deleteMessageElement","childNodes","_deleteMessagesContainer","describedElements","querySelectorAll","i","_removeCdkDescribedByReferenceIds","clear","createElement","textContent","_createMessagesContainer","appendChild","element","removeChild","preExistingContainer","getElementById","parentNode","style","display","body","originalReferenceIds","indexOf","referenceIds","messageId","trimmedMessage","ariaLabel","nodeType","ELEMENT_NODE","ɵfac","AriaDescriber_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","factory","token","providedIn","ListKeyManagerOption","ListKeyManager","_items","_activeItemIndex","_activeItem","_wrap","_letterKeyStream","_typeaheadSubscription","EMPTY","_vertical","_allowedModifierKeys","_skipPredicateFn","item","disabled","_pressedLetters","tabOut","change","changes","subscribe","newItems","itemArray","toArray","newIndex","predicate","shouldWrap","enabled","direction","_horizontal","keys","debounceInterval","getLabel","Error","unsubscribe","pipe","letter","inputString","items","_getItemsArray","index","toUpperCase","setActiveItem","previousIndex","updateActiveItem","next","event","keyCode","modifiers","isModifierAllowed","every","modifier","setNextItemActive","setPreviousItemActive","key","toLocaleUpperCase","String","fromCharCode","preventDefault","_setActiveItemByIndex","setFirstItemActive","_setActiveItemByDelta","setLastItemActive","activeItem","delta","_setActiveInWrapMode","_setActiveInDefaultMode","fallbackDelta","Highlightable","ActiveDescendantKeyManager","setInactiveStyles","setActiveStyles","FocusableOption","FocusKeyManager","arguments","_origin","origin","focus","InteractivityChecker","_platform","hasAttribute","hasGeometry","getComputedStyle","visibility","isBrowser","frameElement","getFrameElement","getWindow","frameType","nodeName","toLowerCase","getTabIndexValue","BLINK","WEBKIT","isVisible","tabIndexValue","TRIDENT","FIREFOX","IOS","isPotentiallyTabbableIOS","tabIndex","isPotentiallyFocusable","isDisabled","InteractivityChecker_Factory","window","_a","offsetWidth","offsetHeight","getClientRects","isNativeFormElement","isHiddenInput","isInputElement","isAnchorWithHref","isAnchorElement","hasValidTabIndex","isNaN","parseInt","inputType","node","ownerDocument","defaultView","FocusTrap","_element","_checker","_ngZone","deferAnchors","_hasAttached","startAnchorListener","focusLastTabbableElement","endAnchorListener","focusFirstTabbableElement","_enabled","attachAnchors","startAnchor","_startAnchor","endAnchor","_endAnchor","removeEventListener","runOutsideAngular","_createAnchor","addEventListener","insertBefore","nextSibling","Promise","resolve","_executeOnStable","focusInitialElement","bound","markers","console","warn","_getFirstTabbableElement","_getLastTabbableElement","redirectToElement","querySelector","isFocusable","_getRegionBoundary","root","isTabbable","children","tabbableChild","anchor","_toggleAnchorTabIndex","classList","add","isEnabled","fn","isStable","onStable","asObservable","value","FocusTrapFactory","deferCaptureElements","FocusTrapFactory_Factory","CdkTrapFocus","_elementRef","_focusTrapFactory","_previouslyFocusedElement","focusTrap","create","nativeElement","destroy","autoCapture","activeElement","focusInitialElementWhenReady","hasAttached","_autoCapture","CdkTrapFocus_Factory","ɵdir","selectors","inputs","exportAs","propDecorators","selector","ConfigurableFocusTrap","_focusTrapManager","_inertStrategy","config","defer","register","deregister","preventFocus","toggleAnchors","allowFocus","closest","Node","curr","Element","hasNativeClosest","polyfillClosest","matches","prototype","EventListenerFocusTrapInertStrategy","_listener","e","_trapFocus","target","focusTrapRoot","contains","setTimeout","ConfigurableFocusTrapConfig","FOCUS_TRAP_INERT_STRATEGY","FocusTrapInertStrategy","ManagedFocusTrap","FocusTrapManager","_focusTrapStack","ft","stack","_disable","_enable","splice","FocusTrapManager_Factory","ConfigurableFocusTrapFactory","configObject","ConfigurableFocusTrapFactory_Factory","LIVE_ANNOUNCER_ELEMENT_TOKEN","LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY","LiveAnnouncerDefaultOptions","LIVE_ANNOUNCER_DEFAULT_OPTIONS","LiveAnnouncer","elementToken","_defaultOptions","_liveElement","_createLiveElement","defaultOptions","politeness","duration","clearTimeout","_previousTimeout","elementClass","previousElements","getElementsByClassName","liveEl","LiveAnnouncer_Factory","CdkAriaLive","_liveAnnouncer","_contentObserver","_politeness","_subscription","observe","elementText","_previousAnnouncedText","announce","CdkAriaLive_Factory","TOUCH_BUFFER_MS","FocusOptions","captureEventListenerOptions","passive","capture","FocusMonitor","_windowFocused","_elementInfo","_monitoredElementCount","_documentKeydownListener","_lastTouchTarget","_setOriginForCurrentEventQueue","_documentMousedownListener","_documentTouchstartListener","_touchTimeoutId","composedPath","_windowFocusListener","_windowFocusTimeoutId","checkChildren","cachedInfo","subject","info","unlisten","_incrementMonitoredElementCount","focusListener","_onFocus","blurListener","_onBlur","elementInfo","complete","_setClasses","_decrementMonitoredElementCount","options","forEach","_info","stopMonitoring","className","shouldSet","remove","_toggleClass","_originTimeoutId","focusTarget","_lastFocusOrigin","_wasCausedByTouch","_emitOrigin","relatedTarget","run","document","FocusMonitor_Factory","CdkMonitorFocus","_focusMonitor","cdkFocusChange","_monitorSubscription","monitor","emit","CdkMonitorFocus_Factory","outputs","isFakeMousedownFromScreenReader","buttons","HighContrastMode","NONE","BLACK_ON_WHITE","WHITE_ON_BLACK","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","testElement","backgroundColor","position","documentWindow","computedColor","replace","bodyClasses","mode","getHighContrastMode","HighContrastModeDetector_Factory","A11yModule","highContrastModeDetector","_applyBodyHighContrastModeCssClasses","ɵmod","ɵinj","A11yModule_Factory","imports","ngJitMode","declarations","exports","DataSource","isDataSource","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","size","isEmpty","selected","_selected","sort","source","added","removed","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","UniqueSelectionDispatcher","_listeners","name","listener","registered","UniqueSelectionDispatcher_Factory","TreeDataNodeFlattener","MAC_ENTER","BACKSPACE","TAB","NUM_CENTER","ENTER","SHIFT","CONTROL","ALT","PAUSE","CAPS_LOCK","ESCAPE","SPACE","PAGE_UP","PAGE_DOWN","END","HOME","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","PLUS_SIGN","PRINT_SCREEN","INSERT","DELETE","ZERO","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","FF_SEMICOLON","FF_EQUALS","QUESTION_MARK","AT_SIGN","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","META","MAC_WK_CMD_LEFT","MAC_WK_CMD_RIGHT","CONTEXT_MENU","NUMPAD_ZERO","NUMPAD_ONE","NUMPAD_TWO","NUMPAD_THREE","NUMPAD_FOUR","NUMPAD_FIVE","NUMPAD_SIX","NUMPAD_SEVEN","NUMPAD_EIGHT","NUMPAD_NINE","NUMPAD_MULTIPLY","NUMPAD_PLUS","NUMPAD_MINUS","NUMPAD_PERIOD","NUMPAD_DIVIDE","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","NUM_LOCK","SCROLL_LOCK","FIRST_MEDIA","FF_MINUS","MUTE","VOLUME_DOWN","VOLUME_UP","FF_MUTE","FF_VOLUME_DOWN","LAST_MEDIA","FF_VOLUME_UP","SEMICOLON","EQUALS","COMMA","DASH","SLASH","APOSTROPHE","TILDE","OPEN_SQUARE_BRACKET","BACKSLASH","CLOSE_SQUARE_BRACKET","SINGLE_QUOTE","MAC_META","hasModifierKey","altKey","shiftKey","ctrlKey","metaKey","LayoutModule","LayoutModule_Factory","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_matchMedia","matchMedia","bind","noopMatchMedia","query","createEmptyStyleRule","MediaMatcher_Factory","head","sheet","insertRule","error","media","addListener","removeListener","BreakpointState","InternalBreakpointState","Query","BreakpointObserver","_mediaMatcher","_zone","_queries","_destroySubject","queries","splitQueries","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","breakpointStates","response","breakpoints","state","queryObservable","observer","handler","nextMql","output","BreakpointObserver_Factory","split","reduce","a1","a2","concat","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","MutationObserverFactory","callback","MutationObserver","MutationObserverFactory_Factory","ContentObserver","_mutationObserverFactory","_observedElements","_","_cleanupObserver","elementOrRef","stream","_observeElement","subscription","_unobserveElement","mutations","characterData","childList","subtree","count","disconnect","ContentObserver_Factory","CdkObserveContent","_disabled","_currentSubscription","_subscribe","_unsubscribe","debounce","_debounce","CdkObserveContent_Factory","ObserversModule","ObserversModule_Factory","providers","BlockScrollStrategy","_viewportRuler","_previousHTMLStyles","top","left","_isEnabled","_canBeEnabled","documentElement","_previousScrollPosition","getViewportScrollPosition","html","htmlStyle","bodyStyle","previousHtmlScrollBehavior","scrollBehavior","previousBodyScrollBehavior","scroll","viewport","getViewportSize","scrollHeight","height","scrollWidth","width","ScrollStrategy","getMatScrollStrategyAlreadyAttachedError","CloseScrollStrategyConfig","CloseScrollStrategy","_scrollDispatcher","_config","_scrollSubscription","_detach","disable","_overlayRef","detach","overlayRef","scrolled","threshold","_initialScrollPosition","scrollPosition","Math","abs","updatePosition","NoopScrollStrategy","isElementScrolledOutsideView","scrollContainers","containerBounds","outsideAbove","bottom","outsideBelow","outsideLeft","right","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategyConfig","RepositionScrollStrategy","throttle","scrollThrottle","autoClose","overlayRect","overlayElement","getBoundingClientRect","parentRects","ScrollStrategyOptions","noop","close","block","reposition","ScrollStrategyOptions_Factory","OverlayConfig","scrollStrategy","panelClass","hasBackdrop","backdropClass","disposeOnNavigation","configKeys","Object","OriginConnectionPosition","OverlayConnectionPosition","ConnectionPositionPair","overlay","offsetX","offsetY","originX","originY","overlayX","overlayY","ScrollingVisibility","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","validateVerticalPosition","property","validateHorizontalPosition","OverlayKeyboardDispatcher","_attachedOverlays","_keydownListener","overlays","_keydownEventSubscriptions","_keydownEvents","_isAttached","OverlayKeyboardDispatcher_Factory","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY","dispatcher","OVERLAY_KEYBOARD_DISPATCHER_PROVIDER","provide","deps","useFactory","isTestEnvironment","__karma__","jasmine","OverlayContainer","container","_containerElement","_createContainer","containerClass","oppositePlatformContainers","OverlayContainer_Factory","OVERLAY_CONTAINER_PROVIDER_FACTORY","parentContainer","OVERLAY_CONTAINER_PROVIDER","OverlayRef","_portalOutlet","_host","_pane","_keyboardDispatcher","_location","_backdropElement","_backdropClick","_attachments","_detachments","_locationChanges","_backdropClickHandler","_keydownEventsObservable","_scrollStrategy","attach","_positionStrategy","positionStrategy","portal","attachResult","parentElement","_previousHostParent","_updateStackingOrder","_updateElementSize","_updateElementDirection","enable","_togglePointerEvents","_attachBackdrop","_toggleClasses","dispose","detachBackdrop","detachmentResult","_detachContentWhenStable","isAttached","_disposeScrollStrategy","apply","strategy","sizeConfig","assign","dir","classes","getDirection","minWidth","minHeight","maxWidth","maxHeight","enablePointer","pointerEvents","showingClass","requestAnimationFrame","backdropToDetach","timeoutId","finishDetach","cssClasses","isAdd","cssClass","OverlaySizeConfig","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_overlayContainer","_lastBoundingBoxSize","_isPushed","_canPush","_growAfterOpen","_hasFlexibleDimensions","_positionLocked","_viewportMargin","_scrollables","_preferredPositions","_positionChanges","_resizeSubscription","_offsetX","_offsetY","_appliedPanelClasses","positionChanges","setOrigin","_validatePositions","_boundingBox","_isDisposed","_isInitialRender","_lastPosition","reapplyLastPosition","_clearPanelClasses","_resetOverlayElementStyles","_resetBoundingBoxStyles","_viewportRect","_getNarrowedViewportRect","_originRect","_getOriginRect","_overlayRect","originRect","viewportRect","flexibleFits","fallback","pos","originPoint","_getOriginPoint","overlayPoint","_getOverlayPoint","overlayFit","_getOverlayFit","isCompletelyWithinViewport","_applyPosition","_canFitWithFlexibleDimensions","boundingBoxRect","_calculateBoundingBoxRect","visibleArea","bestFit","bestScore","fit","score","weight","_previousPushAmount","extendStyles","alignItems","justifyContent","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","_transformOriginSelector","x","startX","_isRtl","endX","y","overlayStartX","overlayStartY","point","_getOffset","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","_subtractOverflows","visibleHeight","fitsInViewportVertically","fitsInViewportHorizontally","availableHeight","availableWidth","getPixelValue","getConfig","verticalFit","horizontalFit","start","overflowRight","max","overflowBottom","overflowTop","overflowLeft","pushX","pushY","_setTransformOrigin","_setOverlayElementStyles","_setBoundingBoxStyles","_addPanelClasses","observers","_getScrollVisibility","changeEvent","elements","xOrigin","yOrigin","transformOrigin","isRtl","smallestDistanceToViewportEdge","min","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","previousWidth","styles","_hasExactPosition","transform","hasExactPosition","hasFlexibleDimensions","_getExactOverlayY","_getExactOverlayX","transformString","_pushOverlayOnScreen","virtualKeyboardOffset","getContainerElement","documentHeight","clientHeight","horizontalStyleProperty","documentWidth","clientWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","getElementRef","isOriginClipped","isOriginOutsideView","isOverlayClipped","isOverlayOutsideView","overflows","currentValue","currentOverflow","axis","pair","HTMLElement","Point","OverlayFit","FallbackPosition","BoundingBoxRect","FlexibleFit","ConnectedPosition","destination","hasOwnProperty","input","units","parseFloat","ConnectedPositionStrategy","originPos","overlayPos","viewportRuler","platform","overlayContainer","withFlexibleDimensions","withPush","withViewportMargin","withFallbackPosition","_direction","setDirection","withScrollableContainers","withPositions","withDefaultOffsetX","withDefaultOffsetY","withLockedPosition","slice","wrapperClass","GlobalPositionStrategy","_cssPosition","_topOffset","_bottomOffset","_leftOffset","_rightOffset","_alignItems","_justifyContent","_width","_height","updateSize","parentStyles","shouldBeFlushHorizontally","shouldBeFlushVertically","marginLeft","marginTop","marginBottom","marginRight","parent","OverlayPositionBuilder","elementRef","OverlayPositionBuilder_Factory","nextUniqueId","Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_injector","_directionality","host","_createHostElement","pane","_createPaneElement","portalOutlet","_createPortalOutlet","overlayConfig","_appRef","Overlay_Factory","defaultPositionList","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY","CdkOverlayOrigin","CdkOverlayOrigin_Factory","CdkConnectedOverlay","_overlay","templateRef","viewContainerRef","scrollStrategyFactory","_dir","_hasBackdrop","_lockPosition","_flexibleDimensions","_push","_backdropSubscription","viewportMargin","open","backdropClick","positionChange","overlayKeydown","_templatePortal","_scrollStrategyFactory","_position","_updatePositionStrategy","_attachOverlay","_detachOverlay","_buildConfig","keydownEvents","_createPositionStrategy","currentPosition","withGrowAfterOpen","lockPosition","withTransformOriginOn","transformOriginSelector","flexibleConnectedTo","p","_createOverlay","CdkConnectedOverlay_Factory","features","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","OverlayModule","OverlayModule_Factory","OVERLAY_PROVIDERS","FullscreenOverlayContainer","_fullScreenEventName","_fullScreenListener","_adjustParentForFullscreenChange","_addFullscreenChangeListener","fullscreenElement","getFullscreenElement","eventName","_getEventName","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","FullscreenOverlayContainer_Factory","hasV8BreakIterator","Intl","v8BreakIterator","Platform","_platformId","EDGE","test","navigator","userAgent","chrome","CSS","ANDROID","SAFARI","Platform_Factory","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","supportsPassiveEvents","supportsPassiveEventListeners","defineProperty","normalizePassiveListenerOptions","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","getRtlScrollAxisType","scrollContainer","containerStyle","overflow","content","contentStyle","scrollLeft","shadowDomIsSupported","_supportsShadowDom","createShadowRoot","attachShadow","throwNullPortalError","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","ComponentType","Portal","_attachedHost","ComponentPortal","component","injector","componentFactoryResolver","TemplatePortal","template","context","DomPortal","PortalOutlet","BasePortalOutlet","attachDomPortal","_attachedPortal","attachComponentPortal","attachTemplatePortal","setAttachedHost","_invokeDisposeFn","_disposeFn","BasePortalHost","DomPortalOutlet","outletElement","_defaultInjector","anchorNode","createComment","replaceChild","resolver","componentFactory","resolveComponentFactory","componentRef","createComponent","setDisposeFn","attachView","hostView","detachView","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","rootNode","DomPortalHost","CdkPortal","CdkPortal_Factory","TemplatePortalDirective","TemplatePortalDirective_Factory","ɵTemplatePortalDirective_BaseFactory","useExisting","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","_getRootNode","_attachedRef","ref","CdkPortalOutlet_Factory","PortalHostDirective","PortalHostDirective_Factory","ɵPortalHostDirective_BaseFactory","PortalModule","PortalModule_Factory","PortalInjector","_parentInjector","_customTokens","notFoundValue","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","_viewport","_itemSize","_minBufferPx","_maxBufferPx","_updateTotalContentSize","_updateRenderedRange","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","end","viewportSize","dataLength","startBuffer","expandStart","ceil","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","DEFAULT_SCROLL_TIME","ScrollDispatcher","_scrolled","_globalSubscription","_scrolledCount","elementScrolled","scrollableReference","auditTimeInMs","_addGlobalListener","_removeGlobalListener","ancestors","getAncestorScrollContainers","scrollingContainers","_scrollableContainsElement","scrollableElement","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","documentRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","CdkVirtualScrollViewport","_changeDetectorRef","_detachedSubject","_renderedRangeSubject","_orientation","then","renderedRangeStream","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","checkViewportSize","_measureViewportSize","onContentScrolled","_markChangeDetectionNeeded","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","to","isHorizontal","orientation","axisDirection","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","rf","ctx","_t","first","hostAttrs","hostVars","hostBindings","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","CdkVirtualScrollViewport_Template","encapsulation","changeDetection","None","OnPush","getSize","rect","CdkVirtualForOf","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","view","j","diff","_renderedItems","_updateContext","_applyChanges","find","cdkVirtualForTrackBy","oldDs","newDs","_updateComputedContextProperties","forEachOperation","record","adjustedPreviousIndex","currentIndex","_insertViewForNewItem","$implicit","_cacheView","_detachView","move","forEachIdentityChange","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","ScrollingModule","ScrollingModule_Factory","CdkTextColumn_th_1_Template","ctx_r18","justify","headerText","CdkTextColumn_td_2_Template","data_r20","ctx_r19","dataAccessor","CanStick","mixinHasStickyInput","base","_sticky","_hasStickyChanged","hasStickyChanged","v","prevValue","CellDef","CdkCellDef","CdkCellDef_Factory","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_stickyEnd","_name","cssClassFriendlyName","CdkColumnDef_Factory","ɵCdkColumnDef_BaseFactory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","cell","headerCell","footerCell","sticky","stickyEnd","BaseCdkCell","columnDef","columnClassName","CdkHeaderCell","CdkHeaderCell_Factory","CdkFooterCell","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","CDK_ROW_TEMPLATE","BaseRowDef","_columnsDiffer","columns","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutletRowContext","CdkCellOutletMultiRowContext","CdkCellOutlet","_viewContainer","mostRecentCellOutlet","CdkCellOutlet_Factory","CdkHeaderRow","CdkHeaderRow_Factory","CdkHeaderRow_Template","directives","Default","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","_isBrowser","rows","stickyDirections","row","_removeStickyStyle","stickyStartStates","stickyEndStates","hasStickyColumns","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","_addStickyStyle","rowsToStick","stickyStates","reverse","stickyHeight","rowIndex","tableElement","tfoot","zIndex","_getCalculatedZIndex","hasDirection","dirValue","cssText","zIndexIncrements","firstRowCells","widths","nextPosition","getTableUnknownColumnError","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","RowOutlet","DataRowOutlet","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowContext","RowViewRef","RenderRow","CdkTable","role","_onDestroy","_columnDefsByName","_customColumnDefs","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","_multiTemplateDataRows","MAX_VALUE","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","trackBy","dataIndex","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","_renderUpdatedColumns","_forceRenderHeaderRows","_forceRenderFooterRows","dataSource","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_rowOutlet","_headerRowOutlet","_footerRowOutlet","_renderRows","_getAllRenderRows","prevIndex","_insertRow","_updateRowIndexContext","rowView","updateStickyColumnStyles","headerRowDef","footerRowDef","rowDef","headerRows","_getRenderedRows","thead","def","_stickyStyler","clearStickyPositioning","stickRows","resetStickyChanged","footerRows","updateStickyFooterContainer","dataRows","headerRow","_addStickyColumnStyles","footerRow","renderRows","prevCachedRenderRows","renderRowsForData","_getRenderRowsForData","WeakMap","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeQueryListAndSet","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","multiTemplateDataRows","_defaultRowDef","columnsDiffReducer","acc","getColumnsDiff","_forceRenderDataRows","_dataSource","isArray","_renderRow","updateStickyHeaderRowStyles","updateStickyFooterRowStyles","columnName","updateStickyColumns","rowOutlet","renderedRows","renderIndex","outlet","_getCellTemplates","cellTemplate","columnId","extractCellTemplate","documentFragment","createDocumentFragment","sections","tag","section","stickyCheckReducer","d","_trackByFn","_switchDataSource","CdkTable_Factory","CdkTable_ContentQueries","CdkTable_Query","CdkTable_Template","descendants","queryList","TextColumnOptions","TEXT_COLUMN_OPTIONS","CdkTextColumn","_table","_options","_syncColumnDefName","_createDefaultHeaderText","defaultDataAccessor","addColumnDef","removeColumnDef","defaultHeaderTextTransform","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","listenerOptions","AutofillMonitor","_monitoredElements","result","animationName","isAutofilled","AutofillMonitor_Factory","CdkAutofill","_autofillMonitor","cdkAutofill","CdkAutofill_Factory","CdkTextareaAutosize","_previousMinRows","_textareaElement","minRows","_cachedLineHeight","maxRows","_initialHeight","resizeToFitContent","textareaClone","cloneNode","border","padding","_setMinHeight","_setMaxHeight","force","_cacheTextareaLineHeight","textarea","_minRows","_previousValue","placeholderText","placeholder","_scrollToCaretPosition","selectionStart","selectionEnd","isStopped","setSelectionRange","_maxRows","reset","CdkTextareaAutosize_Factory","CdkTextareaAutosize_HostBindings","CdkTextareaAutosize_input_HostBindingHandler","$event","_noopInputHandler","TextFieldModule","TextFieldModule_Factory","VERSION","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","MatButtonBase","_MatButtonMixinBase","MatButton","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","_getHostElement","color","focusVia","disableRipple","attributes","attribute","MatButton_Factory","MatButton_Query","ripple","MatButton_HostBindings","attrs","MatButton_Template","_isRippleDisabled","MatAnchor","focusMonitor","animationMode","stopImmediatePropagation","MatAnchor_Factory","MatAnchor_HostBindings","MatAnchor_click_HostBindingHandler","_haltDisabledEvents","toString","MatAnchor_Template","MatButtonModule","MatButtonModule_Factory","MatOption_mat_pseudo_checkbox_0_Template","ctx_r0","_c2","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","VERSION$1","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","GranularSanityChecks","MatCommonModule","sanityChecks","_hasDoneGlobalChecks","_window","_sanityChecks","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","_isTestEnv","_checksAreEnabled","doctype","theme","computedStyle","version","full","MatCommonModule_Factory","CanDisable","mixinDisabled","CanColor","HasElementRef","mixinColor","defaultColor","_color","colorPalette","CanDisableRipple","mixinDisableRipple","_disableRipple","HasTabIndex","mixinTabIndex","defaultTabIndex","_tabIndex","CanUpdateErrorState","HasErrorState","mixinErrorState","errorState","stateChanges","oldState","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","newState","isErrorState","HasInitialized","mixinInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","MAT_DATE_LOCALE_PROVIDER","DateAdapter","_localeChanges","isDateInstance","isValid","invalid","locale","second","getYear","getMonth","getDate","firstValid","secondValid","compareDate","date","MAT_DATE_FORMATS","SUPPORTS_INTL_API","DEFAULT_MONTH_NAMES","ɵ0","DEFAULT_DATE_NAMES","DEFAULT_DAY_OF_WEEK_NAMES","ISO_8601_REGEX","valueFunction","valuesArray","NativeDateAdapter","matDateLocale","useUtcForDisplay","_clampDate","getFullYear","getDay","dtf","DateTimeFormat","month","timeZone","_stripDirectionalityCharacters","_format","Date","day","weekday","year","_createDateWithOverflow","getTime","parse","displayFormat","clone","setFullYear","toDateString","years","addCalendarMonths","months","newDate","days","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","obj","NaN","n","str","UTC","getHours","getMinutes","getSeconds","getMilliseconds","format","NativeDateAdapter_Factory","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","NativeDateModule_Factory","useClass","ɵ0$1","MatNativeDateModule","MatNativeDateModule_Factory","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ShowOnDirtyErrorStateMatcher_Factory","ErrorStateMatcher","touched","ErrorStateMatcher_Factory","HammerInput","HammerStatic","Recognizer","RecognizerStatic","HammerInstance","HammerManager","HammerOptions","MAT_HAMMER_OPTIONS","ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES","ɵ0$2","ɵ1","noopHammerInstance","on","off","GestureConfig","_hammerOptions","_commonModule","events","hammer","Hammer","mc","pan","Pan","swipe","Swipe","press","Press","slide","_createRecognizer","longpress","time","recognizeWith","recognizer","constructor","inheritances","GestureConfig_Factory","MatLine","MatLine_Factory","setLines","lines","setClass","MatLineSetter","MatLineModule","MatLineModule_Factory","RippleState","FADING_IN","VISIBLE","FADING_OUT","HIDDEN","RippleRef","_renderer","fadeOutRipple","RippleAnimationConfig","RippleTarget","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","RippleRenderer","_target","elementOrElementRef","_isPointerDown","_triggerEvents","_activeRipples","_onMousedown","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","fadeInRipple","clientX","clientY","rippleConfig","_onTouchStart","touches","changedTouches","_onPointerUp","terminateOnPointerUp","persistent","fadeOut","containerRect","_containerRect","animationConfig","animation","centered","radius","distanceToFurthestCorner","transitionDuration","enforceStyleRecalculation","rippleRef","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","rippleEl","opacity","_triggerElement","_removeTriggerEvents","delay","getPropertyValue","distX","distY","sqrt","RippleGlobalOptions","MAT_RIPPLE_GLOBAL_OPTIONS","MatRipple","globalOptions","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","fadeOutAll","setupTriggerEvents","trigger","configOrX","_trigger","MatRipple_Factory","MatRipple_HostBindings","unbounded","MatRippleModule","MatRippleModule_Factory","MatPseudoCheckbox","MatPseudoCheckbox_Factory","MatPseudoCheckbox_HostBindings","MatPseudoCheckbox_Template","MatPseudoCheckboxModule","MatPseudoCheckboxModule_Factory","MatOptgroupBase","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","MatOptgroup","_labelId","MatOptgroup_Factory","ɵMatOptgroup_BaseFactory","MatOptgroup_HostBindings","label","MatOptgroup_Template","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","MatOptionParentComponent","MAT_OPTION_PARENT_COMPONENT","MatOption","_parent","group","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","_emitSelectionChangeEvent","viewValue","_selectViaInteraction","multiple","MatOption_Factory","MatOption_HostBindings","MatOption_click_HostBindingHandler","MatOption_keydown_HostBindingHandler","_handleKeydown","_getTabIndex","_getAriaSelected","active","MatOption_Template","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","groups","groupCounter","_getOptionScrollPosition","optionHeight","currentScrollPosition","panelHeight","optionOffset","MatOptionModule","MatOptionModule_Factory","MAT_LABEL_GLOBAL_OPTIONS","LabelOptions","JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC","_c3","MatFormField_ng_container_3_Template","MatFormField_div_4_Template","MatFormField_label_9_ng_container_2_Template","ctx_r11","_control","MatFormField_label_9_3_Template","MatFormField_label_9_span_4_Template","MatFormField_label_9_Template","_r15","MatFormField_label_9_Template_label_cdkObserveContent_0_listener","ctx_r14","updateOutlineGap","ctx_r5","empty","_shouldAlwaysFloat","appearance","_hasLabel","hideRequiredMarker","required","MatFormField_div_10_Template","MatFormField_div_11_Template","ctx_r7","MatFormField_div_13_Template","ctx_r8","_subscriptAnimationState","MatFormField_div_14_div_1_Template","ctx_r17","_hintLabelId","hintLabel","MatFormField_div_14_Template","ctx_r9","_c4","_c5","MatError","MatError_Factory","MatError_HostBindings","matFormFieldAnimations","transitionMessages","MatFormFieldControl","MatFormFieldControl_Factory","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","MatHint","MatHint_Factory","MatHint_HostBindings","MatLabel","MatLabel_Factory","MatPlaceholder","MatPlaceholder_Factory","MatPrefix","MatPrefix_Factory","MatSuffix","MatSuffix_Factory","nextUniqueId$2","floatingLabelScale","outlineGapPadding","MatFormFieldBase","_MatFormFieldMixinBase","MatFormFieldDefaultOptions","MAT_FORM_FIELD_DEFAULT_OPTIONS","MatFormField","labelOptions","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_hintLabel","_labelOptions","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","_hideRequiredMarker","_connectionContainerRef","_validateControlChild","controlType","_validatePlaceholders","_syncDescribedByIds","valueChanges","_prefixChildren","_suffixChildren","_hintChildren","_processHints","_errorChildren","prop","_placeholderChild","_labelChild","_canLabelFloat","shouldLabelFloat","_shouldLabelFloat","_hasPlaceholder","_hasFloatingLabel","_label","_validateHints","startHint","endHint","hint","_getDisplayedMessages","setDescribedByIds","labelEl","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerStart","_getStartEnd","labelStart","labelWidth","child","getRootNode","_appearance","oldValue","_floatLabel","_explicitFormFieldControl","_controlNonStatic","_controlStatic","_labelChildNonStatic","_labelChildStatic","MatFormField_Factory","MatFormField_ContentQueries","MatFormField_Query","underlineRef","_inputContainerRef","MatFormField_HostBindings","_hideControlPlaceholder","autofilled","focused","_shouldForward","MatFormField_Template","MatFormField_Template_div_click_1_listener","onContainerClick","animations","MatFormFieldModule","MatFormFieldModule_Factory","MatTextareaAutosize","MatTextareaAutosize_Factory","ɵMatTextareaAutosize_BaseFactory","cdkAutosizeMinRows","cdkAutosizeMaxRows","matAutosizeMinRows","matAutosizeMaxRows","matAutosize","matTextareaAutosize","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","MatInputBase","_MatInputMixinBase","MatInput","inputValueAccessor","_uid","_isServer","_isNativeSelect","_required","_type","_readonly","_neverEmptyInputTypes","_inputValueAccessor","_previousNativeValue","updateErrorState","_dirtyCheckNativeValue","isFocused","readonly","newValue","validity","badInput","_ariaDescribedby","_id","_validateType","_isTextarea","_isNeverEmpty","_isBadInput","selectElement","firstOption","selectedIndex","MatInput_Factory","MatInput_HostBindings","MatInput_blur_HostBindingHandler","_focusChanged","MatInput_focus_HostBindingHandler","MatInput_input_HostBindingHandler","_onInput","MatInputModule","MatInputModule_Factory","MatPaginator_div_2_mat_form_field_3_mat_option_2_Template","pageSizeOption_r19","MatPaginator_div_2_mat_form_field_3_Template","_r21","MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener","ctx_r20","_changePageSize","ctx_r16","pageSize","_intl","itemsPerPageLabel","_displayedPageSizeOptions","MatPaginator_div_2_div_4_Template","MatPaginator_div_2_Template","ctx_r13","MatPaginator_button_6_Template","_r23","MatPaginator_button_6_Template_button_click_0_listener","ctx_r22","firstPage","firstPageLabel","_previousButtonsDisabled","MatPaginator_button_13_Template","_r25","MatPaginator_button_13_Template_button_click_0_listener","ctx_r24","lastPage","ctx_r15","lastPageLabel","_nextButtonsDisabled","MatPaginatorIntl","nextPageLabel","previousPageLabel","getRangeLabel","page","startIndex","endIndex","MatPaginatorIntl_Factory","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","DEFAULT_PAGE_SIZE","PageEvent","MatPaginatorDefaultOptions","MAT_PAGINATOR_DEFAULT_OPTIONS","MatPaginatorBase","_MatPaginatorBase","MatPaginator","defaults","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","_initialized","_updateDisplayedPageSizeOptions","_markInitialized","hasNextPage","previousPageIndex","pageIndex","_emitPageEvent","hasPreviousPage","getNumberOfPages","maxPageIndex","a","b","MatPaginator_Factory","MatPaginator_Template","MatPaginator_Template_button_click_7_listener","previousPage","MatPaginator_Template_button_click_10_listener","nextPage","MatPaginatorModule","MatPaginatorModule_Factory","MatSelect_span_4_Template","ctx_r3","MatSelect_span_5_span_1_Template","ctx_r6","triggerValue","MatSelect_span_5_2_Template","MatSelect_span_5_Template","ctx_r4","customTrigger","MatSelect_ng_template_8_Template","_r10","MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener","_panelDoneAnimatingStream","toState","MatSelect_ng_template_8_Template_div_keydown_1_listener","_getPanelTheme","_transformOrigin","_triggerFontSize","matSelectAnimations","transformPanelWrap","optional","transformPanel","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","MatSelectConfig","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","MatSelectBase","_MatSelectMixinBase","MatSelectTrigger","MatSelectTrigger_Factory","MatSelect","_parentFormField","_panelOpen","_scrollTop","_compareWith","o1","o2","_destroy","_onChange","_onTouched","_optionIds","_positions","_disableOptionCentering","_focused","optionSelectionChanges","option","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","disableOptionCentering","typeaheadDebounceInterval","_selectionModel","panelOpen","overlayDir","_triggerRect","_initKeyManager","_resetOptions","_initializeSelection","_keyManager","withTypeAhead","_typeaheadDebounceInterval","fontSize","withHorizontalOrientation","_calculateOverlayPosition","_highlightCorrectOption","_setSelectionByValue","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","previouslySelectedOption","onKeydown","selectedOption","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","_calculateOverlayOffsetX","panel","_value","_selectValue","_sortValues","correspondingOption","withVerticalOrientation","withAllowedModifierKeys","_scrollActiveOptionIntoView","changedOrDestroyed","_onSelect","_setOptionIds","wasSelected","_propagateChanges","sortComparator","fallbackValue","valueToEmit","activeOptionIndex","labelCount","_getItemHeight","current","itemHeight","_getItemCount","scrollContainerHeight","maxScroll","selectedOptionOffset","_getOptionIndex","scrollBuffer","_calculateOverlayScroll","_calculateOverlayOffsetY","_checkOverlayWithinViewport","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","ariaLabelledby","_getAriaLabel","paddingWidth","round","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","selectedDisplayIndex","partialItemHeight","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","_placeholder","writeValue","selectedOptions","MatSelect_Factory","MatSelect_ContentQueries","MatSelect_Query","MatSelect_HostBindings","MatSelect_keydown_HostBindingHandler","MatSelect_focus_HostBindingHandler","MatSelect_blur_HostBindingHandler","_getAriaLabelledby","_getAriaActiveDescendant","compareWith","MatSelect_Template","MatSelect_Template_div_click_0_listener","toggle","MatSelect_Template_ng_template_backdropClick_8_listener","MatSelect_Template_ng_template_attach_8_listener","_onAttached","MatSelect_Template_ng_template_detach_8_listener","_r1","MatSelectModule","MatSelectModule_Factory","MatTextColumn_th_1_Template","ctx_r10","MatTextColumn_td_2_Template","data_r12","MatTable","MatTable_Factory","ɵMatTable_BaseFactory","MatTable_Template","MatCellDef","MatCellDef_Factory","ɵMatCellDef_BaseFactory","MatHeaderCellDef","MatHeaderCellDef_Factory","ɵMatHeaderCellDef_BaseFactory","MatFooterCellDef","MatFooterCellDef_Factory","ɵMatFooterCellDef_BaseFactory","MatColumnDef","MatColumnDef_Factory","ɵMatColumnDef_BaseFactory","MatHeaderCell","MatHeaderCell_Factory","MatFooterCell","MatFooterCell_Factory","MatCell","MatCell_Factory","MatHeaderRowDef","MatHeaderRowDef_Factory","ɵMatHeaderRowDef_BaseFactory","MatFooterRowDef","MatFooterRowDef_Factory","ɵMatFooterRowDef_BaseFactory","MatRowDef","MatRowDef_Factory","ɵMatRowDef_BaseFactory","MatHeaderRow","MatHeaderRow_Factory","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Template","MatFooterRow","MatFooterRow_Factory","ɵMatFooterRow_BaseFactory","MatFooterRow_Template","MatRow","MatRow_Factory","ɵMatRow_BaseFactory","MatRow_Template","MatTextColumn","MatTextColumn_Factory","ɵMatTextColumn_BaseFactory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","sortHeaderId","numberValue","sortData","valueA","valueB","comparatorResult","filterPredicate","dataStr","currentTerm","transformedFilter","_updateChangeSubscription","sortChange","_sort","pageChange","_paginator","filteredData","_filterData","orderedData","_orderData","paginatedData","_pageData","paginator","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","matTooltipAnimations","tooltipState","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MatTooltipDefaultOptions","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","MatTooltip","_ariaDescriber","_hammerLoader","touchGestures","_message","_passiveListeners","_isTooltipVisible","stopPropagation","hide","show","_setupPointerEvents","_touchstartTimeout","_tooltipInstance","removeDescription","_showTimeoutId","_hideTimeoutId","_portal","TooltipComponent","instance","afterHidden","_setTooltipClass","_tooltipClass","_updateTooltipMessage","scrollableAncestors","_updatePosition","detachments","_getOrigin","_getOverlayPosition","main","isLtr","originPosition","_invertPosition","overlayPosition","_markForCheck","onMicrotaskEmpty","tooltipClass","_disableNativeGesturesIfNecessary","touchendListener","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","describe","MatTooltip_Factory","_breakpointObserver","_visibility","_closeOnInteraction","_onHide","_isHandset","TooltipComponent_Factory","TooltipComponent_HostBindings","TooltipComponent_click_HostBindingHandler","_handleBodyInteraction","TooltipComponent_Template","TooltipComponent_Template_div_animation_state_start_0_listener","_animationStart","TooltipComponent_Template_div_animation_state_done_0_listener","_animationDone","tmp_0_0","currVal_0","pipes","MatTooltipModule","MatTooltipModule_Factory","entryComponents"],"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","file":"default~modules-components-candidate-module-first-contact-module~modules-components-candidate-module~ffd2394f-es5.js","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Injectable, Inject, ɵɵdefineInjectable, ɵɵinject, QueryList, isDevMode, NgZone, Directive, ElementRef, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport { Subject, Subscription, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Platform, normalizePassiveListenerOptions, PlatformModule } from '@angular/cdk/platform';\nimport { ContentObserver, ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-reference.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IDs are deliminated by an empty space, as per the spec.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/observers';\nconst ID_DELIMINATOR = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction addAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    if (ids.some((/**\n     * @param {?} existingId\n     * @return {?}\n     */\n    existingId => existingId.trim() == id.trim()))) {\n        return;\n    }\n    ids.push(id.trim());\n    el.setAttribute(attr, ids.join(ID_DELIMINATOR));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @param {?} id\n * @return {?}\n */\nfunction removeAriaReferencedId(el, attr, id) {\n    /** @type {?} */\n    const ids = getAriaReferenceIds(el, attr);\n    /** @type {?} */\n    const filteredIds = ids.filter((/**\n     * @param {?} val\n     * @return {?}\n     */\n    val => val != id.trim()));\n    if (filteredIds.length) {\n        el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\n    }\n    else {\n        el.removeAttribute(attr);\n    }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n * @param {?} el\n * @param {?} attr\n * @return {?}\n */\nfunction getAriaReferenceIds(el, attr) {\n    // Get string array of all individual ids (whitespace deliminated) in the attribute value\n    return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/aria-describer/aria-describer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to register message elements and keep a count of how many registrations have\n * the same message and the reference to the message element used for the `aria-describedby`.\n * @record\n */\nfunction RegisteredMessage() { }\nif (false) {\n    /**\n     * The element containing the message.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.messageElement;\n    /**\n     * The number of elements that reference this message element via `aria-describedby`.\n     * @type {?}\n     */\n    RegisteredMessage.prototype.referenceCount;\n}\n/**\n * ID used for the body container where all messages are appended.\n * @type {?}\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @type {?}\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/**\n * Global incremental identifier for each registered message element.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Global map of all registered message elements that have been placed into the document.\n * @type {?}\n */\nconst messageRegistry = new Map();\n/**\n * Container for all registered messages.\n * @type {?}\n */\nlet messagesContainer = null;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nclass AriaDescriber {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Adds to the host element an aria-describedby reference to a hidden element that contains\n     * the message. If the same message has already been registered, then it will reuse the created\n     * message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    describe(hostElement, message) {\n        if (!this._canBeDescribed(hostElement, message)) {\n            return;\n        }\n        if (typeof message !== 'string') {\n            // We need to ensure that the element has an ID.\n            this._setMessageId(message);\n            messageRegistry.set(message, { messageElement: message, referenceCount: 0 });\n        }\n        else if (!messageRegistry.has(message)) {\n            this._createMessageElement(message);\n        }\n        if (!this._isElementDescribedByMessage(hostElement, message)) {\n            this._addMessageReference(hostElement, message);\n        }\n    }\n    /**\n     * Removes the host element's aria-describedby reference to the message element.\n     * @param {?} hostElement\n     * @param {?} message\n     * @return {?}\n     */\n    removeDescription(hostElement, message) {\n        if (!this._isElementNode(hostElement)) {\n            return;\n        }\n        if (this._isElementDescribedByMessage(hostElement, message)) {\n            this._removeMessageReference(hostElement, message);\n        }\n        // If the message is a string, it means that it's one that we created for the\n        // consumer so we can remove it safely, otherwise we should leave it in place.\n        if (typeof message === 'string') {\n            /** @type {?} */\n            const registeredMessage = messageRegistry.get(message);\n            if (registeredMessage && registeredMessage.referenceCount === 0) {\n                this._deleteMessageElement(message);\n            }\n        }\n        if (messagesContainer && messagesContainer.childNodes.length === 0) {\n            this._deleteMessagesContainer();\n        }\n    }\n    /**\n     * Unregisters all created message elements and removes the message container.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\n        for (let i = 0; i < describedElements.length; i++) {\n            this._removeCdkDescribedByReferenceIds(describedElements[i]);\n            describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n        }\n        if (messagesContainer) {\n            this._deleteMessagesContainer();\n        }\n        messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _createMessageElement(message) {\n        /** @type {?} */\n        const messageElement = this._document.createElement('div');\n        this._setMessageId(messageElement);\n        messageElement.textContent = message;\n        this._createMessagesContainer();\n        (/** @type {?} */ (messagesContainer)).appendChild(messageElement);\n        messageRegistry.set(message, { messageElement, referenceCount: 0 });\n    }\n    /**\n     * Assigns a unique ID to an element, if it doesn't have one already.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setMessageId(element) {\n        if (!element.id) {\n            element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`;\n        }\n    }\n    /**\n     * Deletes the message element from the global messages container.\n     * @private\n     * @param {?} message\n     * @return {?}\n     */\n    _deleteMessageElement(message) {\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageElement = registeredMessage && registeredMessage.messageElement;\n        if (messagesContainer && messageElement) {\n            messagesContainer.removeChild(messageElement);\n        }\n        messageRegistry.delete(message);\n    }\n    /**\n     * Creates the global container for all aria-describedby messages.\n     * @private\n     * @return {?}\n     */\n    _createMessagesContainer() {\n        if (!messagesContainer) {\n            /** @type {?} */\n            const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\n            // When going from the server to the client, we may end up in a situation where there's\n            // already a container on the page, but we don't have a reference to it. Clear the\n            // old container so we don't get duplicates. Doing this, instead of emptying the previous\n            // container, should be slightly faster.\n            if (preExistingContainer) {\n                (/** @type {?} */ (preExistingContainer.parentNode)).removeChild(preExistingContainer);\n            }\n            messagesContainer = this._document.createElement('div');\n            messagesContainer.id = MESSAGES_CONTAINER_ID;\n            messagesContainer.setAttribute('aria-hidden', 'true');\n            messagesContainer.style.display = 'none';\n            this._document.body.appendChild(messagesContainer);\n        }\n    }\n    /**\n     * Deletes the global messages container.\n     * @private\n     * @return {?}\n     */\n    _deleteMessagesContainer() {\n        if (messagesContainer && messagesContainer.parentNode) {\n            messagesContainer.parentNode.removeChild(messagesContainer);\n            messagesContainer = null;\n        }\n    }\n    /**\n     * Removes all cdk-describedby messages that are hosted through the element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _removeCdkDescribedByReferenceIds(element) {\n        // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n        /** @type {?} */\n        const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\n            .filter((/**\n         * @param {?} id\n         * @return {?}\n         */\n        id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0));\n        element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _addMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        // Add the aria-describedby reference and set the\n        // describedby_host attribute to mark the element.\n        addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\n        registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _removeMessageReference(element, message) {\n        /** @type {?} */\n        const registeredMessage = (/** @type {?} */ (messageRegistry.get(message)));\n        registeredMessage.referenceCount--;\n        removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n        element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /**\n     * Returns true if the element has been described by the provided message ID.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _isElementDescribedByMessage(element, message) {\n        /** @type {?} */\n        const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n        /** @type {?} */\n        const registeredMessage = messageRegistry.get(message);\n        /** @type {?} */\n        const messageId = registeredMessage && registeredMessage.messageElement.id;\n        return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /**\n     * Determines whether a message can be described on a particular element.\n     * @private\n     * @param {?} element\n     * @param {?} message\n     * @return {?}\n     */\n    _canBeDescribed(element, message) {\n        if (!this._isElementNode(element)) {\n            return false;\n        }\n        if (message && typeof message === 'object') {\n            // We'd have to make some assumptions about the description element's text, if the consumer\n            // passed in an element. Assume that if an element is passed in, the consumer has verified\n            // that it can be used as a description.\n            return true;\n        }\n        /** @type {?} */\n        const trimmedMessage = message == null ? '' : `${message}`.trim();\n        /** @type {?} */\n        const ariaLabel = element.getAttribute('aria-label');\n        // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n        // element, because screen readers will end up reading out the same text twice in a row.\n        return trimmedMessage ? (!ariaLabel || ariaLabel.trim() !== trimmedMessage) : false;\n    }\n    /**\n     * Checks whether a node is an Element node.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _isElementNode(element) {\n        return element.nodeType === this._document.ELEMENT_NODE;\n    }\n}\nAriaDescriber.ɵfac = function AriaDescriber_Factory(t) { return new (t || AriaDescriber)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nAriaDescriber.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ AriaDescriber.ɵprov = ɵɵdefineInjectable({ factory: function AriaDescriber_Factory() { return new AriaDescriber(ɵɵinject(DOCUMENT)); }, token: AriaDescriber, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AriaDescriber, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AriaDescriber.prototype._document;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/list-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This interface is for items that can be passed to a ListKeyManager.\n * @record\n */\nfunction ListKeyManagerOption() { }\nif (false) {\n    /**\n     * Whether the option is disabled.\n     * @type {?|undefined}\n     */\n    ListKeyManagerOption.prototype.disabled;\n    /**\n     * Gets the label for this option.\n     * @return {?}\n     */\n    ListKeyManagerOption.prototype.getLabel = function () { };\n}\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n * @template T\n */\nclass ListKeyManager {\n    /**\n     * @param {?} _items\n     */\n    constructor(_items) {\n        this._items = _items;\n        this._activeItemIndex = -1;\n        this._activeItem = null;\n        this._wrap = false;\n        this._letterKeyStream = new Subject();\n        this._typeaheadSubscription = Subscription.EMPTY;\n        this._vertical = true;\n        this._allowedModifierKeys = [];\n        /**\n         * Predicate function that can be used to check whether an item should be skipped\n         * by the key manager. By default, disabled items are skipped.\n         */\n        this._skipPredicateFn = (/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.disabled);\n        // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n        this._pressedLetters = [];\n        /**\n         * Stream that emits any time the TAB key is pressed, so components can react\n         * when focus is shifted off of the list.\n         */\n        this.tabOut = new Subject();\n        /**\n         * Stream that emits whenever the active item of the list manager changes.\n         */\n        this.change = new Subject();\n        // We allow for the items to be an array because, in some cases, the consumer may\n        // not have access to a QueryList of the items they want to manage (e.g. when the\n        // items aren't being collected via `ViewChildren` or `ContentChildren`).\n        if (_items instanceof QueryList) {\n            _items.changes.subscribe((/**\n             * @param {?} newItems\n             * @return {?}\n             */\n            (newItems) => {\n                if (this._activeItem) {\n                    /** @type {?} */\n                    const itemArray = newItems.toArray();\n                    /** @type {?} */\n                    const newIndex = itemArray.indexOf(this._activeItem);\n                    if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n                        this._activeItemIndex = newIndex;\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Sets the predicate function that determines which items should be skipped by the\n     * list key manager.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} predicate Function that determines whether the given item should be skipped.\n     * @return {THIS}\n     */\n    skipPredicate(predicate) {\n        (/** @type {?} */ (this))._skipPredicateFn = predicate;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures wrapping mode, which determines whether the active item will wrap to\n     * the other end of list when there are no more items in the given direction.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} shouldWrap Whether the list should wrap when reaching the end.\n     * @return {THIS}\n     */\n    withWrap(shouldWrap = true) {\n        (/** @type {?} */ (this))._wrap = shouldWrap;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures whether the key manager should be able to move the selection vertically.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} enabled Whether vertical selection should be enabled.\n     * @return {THIS}\n     */\n    withVerticalOrientation(enabled = true) {\n        (/** @type {?} */ (this))._vertical = enabled;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures the key manager to move the selection horizontally.\n     * Passing in `null` will disable horizontal movement.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} direction Direction in which the selection can be moved.\n     * @return {THIS}\n     */\n    withHorizontalOrientation(direction) {\n        (/** @type {?} */ (this))._horizontal = direction;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Modifier keys which are allowed to be held down and whose default actions will be prevented\n     * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} keys\n     * @return {THIS}\n     */\n    withAllowedModifierKeys(keys) {\n        (/** @type {?} */ (this))._allowedModifierKeys = keys;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Turns on typeahead mode which allows users to set the active item by typing.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} debounceInterval Time to wait after the last keystroke before setting the active item.\n     * @return {THIS}\n     */\n    withTypeAhead(debounceInterval = 200) {\n        if ((/** @type {?} */ (this))._items.length && (/** @type {?} */ (this))._items.some((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => typeof item.getLabel !== 'function'))) {\n            throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n        }\n        (/** @type {?} */ (this))._typeaheadSubscription.unsubscribe();\n        // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n        // and convert those letters back into a string. Afterwards find the first item that starts\n        // with that string and select it.\n        (/** @type {?} */ (this))._typeaheadSubscription = (/** @type {?} */ (this))._letterKeyStream.pipe(tap((/**\n         * @param {?} letter\n         * @return {?}\n         */\n        letter => (/** @type {?} */ (this))._pressedLetters.push(letter))), debounceTime(debounceInterval), filter((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.length > 0)), map((/**\n         * @return {?}\n         */\n        () => (/** @type {?} */ (this))._pressedLetters.join('')))).subscribe((/**\n         * @param {?} inputString\n         * @return {?}\n         */\n        inputString => {\n            /** @type {?} */\n            const items = (/** @type {?} */ (this))._getItemsArray();\n            // Start at 1 because we want to start searching at the item immediately\n            // following the current active item.\n            for (let i = 1; i < items.length + 1; i++) {\n                /** @type {?} */\n                const index = ((/** @type {?} */ (this))._activeItemIndex + i) % items.length;\n                /** @type {?} */\n                const item = items[index];\n                if (!(/** @type {?} */ (this))._skipPredicateFn(item) &&\n                    (/** @type {?} */ (item.getLabel))().toUpperCase().trim().indexOf(inputString) === 0) {\n                    (/** @type {?} */ (this)).setActiveItem(index);\n                    break;\n                }\n            }\n            (/** @type {?} */ (this))._pressedLetters = [];\n        }));\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        /** @type {?} */\n        const previousIndex = this._activeItemIndex;\n        this.updateActiveItem(item);\n        if (this._activeItemIndex !== previousIndex) {\n            this.change.next(this._activeItemIndex);\n        }\n    }\n    /**\n     * Sets the active item depending on the key event passed in.\n     * @param {?} event Keyboard event to be used for determining which element should be active.\n     * @return {?}\n     */\n    onKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n        /** @type {?} */\n        const isModifierAllowed = modifiers.every((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => {\n            return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n        }));\n        switch (keyCode) {\n            case TAB:\n                this.tabOut.next();\n                return;\n            case DOWN_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case UP_ARROW:\n                if (this._vertical && isModifierAllowed) {\n                    this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case RIGHT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            case LEFT_ARROW:\n                if (this._horizontal && isModifierAllowed) {\n                    this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n                    break;\n                }\n                else {\n                    return;\n                }\n            default:\n                if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n                    // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n                    // otherwise fall back to resolving alphanumeric characters via the keyCode.\n                    if (event.key && event.key.length === 1) {\n                        this._letterKeyStream.next(event.key.toLocaleUpperCase());\n                    }\n                    else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\n                        this._letterKeyStream.next(String.fromCharCode(keyCode));\n                    }\n                }\n                // Note that we return here, in order to avoid preventing\n                // the default action of non-navigational keys.\n                return;\n        }\n        this._pressedLetters = [];\n        event.preventDefault();\n    }\n    /**\n     * Index of the currently active item.\n     * @return {?}\n     */\n    get activeItemIndex() {\n        return this._activeItemIndex;\n    }\n    /**\n     * The active item.\n     * @return {?}\n     */\n    get activeItem() {\n        return this._activeItem;\n    }\n    /**\n     * Gets whether the user is currently typing into the manager using the typeahead feature.\n     * @return {?}\n     */\n    isTyping() {\n        return this._pressedLetters.length > 0;\n    }\n    /**\n     * Sets the active item to the first enabled item in the list.\n     * @return {?}\n     */\n    setFirstItemActive() {\n        this._setActiveItemByIndex(0, 1);\n    }\n    /**\n     * Sets the active item to the last enabled item in the list.\n     * @return {?}\n     */\n    setLastItemActive() {\n        this._setActiveItemByIndex(this._items.length - 1, -1);\n    }\n    /**\n     * Sets the active item to the next enabled item in the list.\n     * @return {?}\n     */\n    setNextItemActive() {\n        this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n    }\n    /**\n     * Sets the active item to a previous enabled item in the list.\n     * @return {?}\n     */\n    setPreviousItemActive() {\n        this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\n            : this._setActiveItemByDelta(-1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    updateActiveItem(item) {\n        /** @type {?} */\n        const itemArray = this._getItemsArray();\n        /** @type {?} */\n        const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n        /** @type {?} */\n        const activeItem = itemArray[index];\n        // Explicitly check for `null` and `undefined` because other falsy values are valid.\n        this._activeItem = activeItem == null ? null : activeItem;\n        this._activeItemIndex = index;\n    }\n    /**\n     * This method sets the active item, given a list of items and the delta between the\n     * currently active item and the new active item. It will calculate differently\n     * depending on whether wrap mode is turned on.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveItemByDelta(delta) {\n        this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n    }\n    /**\n     * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n     * down the list until it finds an item that is not disabled, and it will wrap if it\n     * encounters either end of the list.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInWrapMode(delta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        for (let i = 1; i <= items.length; i++) {\n            /** @type {?} */\n            const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\n            /** @type {?} */\n            const item = items[index];\n            if (!this._skipPredicateFn(item)) {\n                this.setActiveItem(index);\n                return;\n            }\n        }\n    }\n    /**\n     * Sets the active item properly given the default mode. In other words, it will\n     * continue to move down the list until it finds an item that is not disabled. If\n     * it encounters either end of the list, it will stop and not wrap.\n     * @private\n     * @param {?} delta\n     * @return {?}\n     */\n    _setActiveInDefaultMode(delta) {\n        this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n    }\n    /**\n     * Sets the active item to the first enabled item starting at the index specified. If the\n     * item is disabled, it will move in the fallbackDelta direction until it either\n     * finds an enabled item or encounters the end of the list.\n     * @private\n     * @param {?} index\n     * @param {?} fallbackDelta\n     * @return {?}\n     */\n    _setActiveItemByIndex(index, fallbackDelta) {\n        /** @type {?} */\n        const items = this._getItemsArray();\n        if (!items[index]) {\n            return;\n        }\n        while (this._skipPredicateFn(items[index])) {\n            index += fallbackDelta;\n            if (!items[index]) {\n                return;\n            }\n        }\n        this.setActiveItem(index);\n    }\n    /**\n     * Returns the items as an array.\n     * @private\n     * @return {?}\n     */\n    _getItemsArray() {\n        return this._items instanceof QueryList ? this._items.toArray() : this._items;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItemIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._activeItem;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._wrap;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._letterKeyStream;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._typeaheadSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._vertical;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._horizontal;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._allowedModifierKeys;\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._skipPredicateFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._pressedLetters;\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     * @type {?}\n     */\n    ListKeyManager.prototype.tabOut;\n    /**\n     * Stream that emits whenever the active item of the list manager changes.\n     * @type {?}\n     */\n    ListKeyManager.prototype.change;\n    /**\n     * @type {?}\n     * @private\n     */\n    ListKeyManager.prototype._items;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/activedescendant-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n * @record\n */\nfunction Highlightable() { }\nif (false) {\n    /**\n     * Applies the styles for an active item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setActiveStyles = function () { };\n    /**\n     * Applies the styles for an inactive item to this item.\n     * @return {?}\n     */\n    Highlightable.prototype.setInactiveStyles = function () { };\n}\n/**\n * @template T\n */\nclass ActiveDescendantKeyManager extends ListKeyManager {\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    setActiveItem(index) {\n        if (this.activeItem) {\n            this.activeItem.setInactiveStyles();\n        }\n        super.setActiveItem(index);\n        if (this.activeItem) {\n            this.activeItem.setActiveStyles();\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/key-manager/focus-key-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This is the interface for focusable items (used by the FocusKeyManager).\n * Each item must know how to focus itself, whether or not it is currently disabled\n * and be able to supply its label.\n * @record\n */\nfunction FocusableOption() { }\nif (false) {\n    /**\n     * Focuses the `FocusableOption`.\n     * @param {?=} origin\n     * @return {?}\n     */\n    FocusableOption.prototype.focus = function (origin) { };\n}\n/**\n * @template T\n */\nclass FocusKeyManager extends ListKeyManager {\n    constructor() {\n        super(...arguments);\n        this._origin = 'program';\n    }\n    /**\n     * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Focus origin to be used when focusing items.\n     * @return {THIS}\n     */\n    setFocusOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    setActiveItem(item) {\n        super.setActiveItem(item);\n        if (this.activeItem) {\n            this.activeItem.focus(this._origin);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusKeyManager.prototype._origin;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/interactivity-checker/interactivity-checker.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether is is focusable or\n * tabbable.\n */\nclass InteractivityChecker {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is disabled.\n     */\n    isDisabled(element) {\n        // This does not capture some cases, such as a non-form control with a disabled attribute or\n        // a form control inside of a disabled form, but should capture the most common cases.\n        return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @param {?} element\n     * @return {?} Whether the element is visible.\n     */\n    isVisible(element) {\n        return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is tabbable.\n     */\n    isTabbable(element) {\n        // Nothing is tabbable on the server 😎\n        if (!this._platform.isBrowser) {\n            return false;\n        }\n        /** @type {?} */\n        const frameElement = getFrameElement(getWindow(element));\n        if (frameElement) {\n            /** @type {?} */\n            const frameType = frameElement && frameElement.nodeName.toLowerCase();\n            // Frame elements inherit their tabindex onto all child elements.\n            if (getTabIndexValue(frameElement) === -1) {\n                return false;\n            }\n            // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\n                return false;\n            }\n            // Webkit and Blink disable tabbing to an element inside of an invisible frame.\n            if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\n                return false;\n            }\n        }\n        /** @type {?} */\n        let nodeName = element.nodeName.toLowerCase();\n        /** @type {?} */\n        let tabIndexValue = getTabIndexValue(element);\n        if (element.hasAttribute('contenteditable')) {\n            return tabIndexValue !== -1;\n        }\n        if (nodeName === 'iframe') {\n            // The frames may be tabbable depending on content, but it's not possibly to reliably\n            // investigate the content of the frames.\n            return false;\n        }\n        if (nodeName === 'audio') {\n            if (!element.hasAttribute('controls')) {\n                // By default an <audio> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK) {\n                // In Blink <audio controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'video') {\n            if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\n                // In Trident a <video> element without the controls enabled is not tabbable.\n                return false;\n            }\n            else if (this._platform.BLINK || this._platform.FIREFOX) {\n                // In Chrome and Firefox <video controls> elements are always tabbable.\n                return true;\n            }\n        }\n        if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\n            // In all Blink and WebKit based browsers <object> elements are never tabbable.\n            return false;\n        }\n        // In iOS the browser only considers some specific elements as tabbable.\n        if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n            return false;\n        }\n        return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param {?} element Element to be checked.\n     * @return {?} Whether the element is focusable.\n     */\n    isFocusable(element) {\n        // Perform checks in order of left to most expensive.\n        // Again, naive approach that does not capture many edge cases and browser quirks.\n        return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\n    }\n}\nInteractivityChecker.ɵfac = function InteractivityChecker_Factory(t) { return new (t || InteractivityChecker)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nInteractivityChecker.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ InteractivityChecker.ɵprov = ɵɵdefineInjectable({ factory: function InteractivityChecker_Factory() { return new InteractivityChecker(ɵɵinject(Platform)); }, token: InteractivityChecker, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(InteractivityChecker, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    InteractivityChecker.prototype._platform;\n}\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n * @param {?} window\n * @return {?}\n */\nfunction getFrameElement(window) {\n    try {\n        return (/** @type {?} */ (window.frameElement));\n    }\n    catch (_a) {\n        return null;\n    }\n}\n/**\n * Checks whether the specified element has any geometry / rectangles.\n * @param {?} element\n * @return {?}\n */\nfunction hasGeometry(element) {\n    // Use logic from jQuery to check for an invisible element.\n    // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n    return !!(element.offsetWidth || element.offsetHeight ||\n        (typeof element.getClientRects === 'function' && element.getClientRects().length));\n}\n/**\n * Gets whether an element's\n * @param {?} element\n * @return {?}\n */\nfunction isNativeFormElement(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    return nodeName === 'input' ||\n        nodeName === 'select' ||\n        nodeName === 'button' ||\n        nodeName === 'textarea';\n}\n/**\n * Gets whether an element is an `<input type=\"hidden\">`.\n * @param {?} element\n * @return {?}\n */\nfunction isHiddenInput(element) {\n    return isInputElement(element) && element.type == 'hidden';\n}\n/**\n * Gets whether an element is an anchor that has an href attribute.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorWithHref(element) {\n    return isAnchorElement(element) && element.hasAttribute('href');\n}\n/**\n * Gets whether an element is an input element.\n * @param {?} element\n * @return {?}\n */\nfunction isInputElement(element) {\n    return element.nodeName.toLowerCase() == 'input';\n}\n/**\n * Gets whether an element is an anchor element.\n * @param {?} element\n * @return {?}\n */\nfunction isAnchorElement(element) {\n    return element.nodeName.toLowerCase() == 'a';\n}\n/**\n * Gets whether an element has a valid tabindex.\n * @param {?} element\n * @return {?}\n */\nfunction hasValidTabIndex(element) {\n    if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n        return false;\n    }\n    /** @type {?} */\n    let tabIndex = element.getAttribute('tabindex');\n    // IE11 parses tabindex=\"\" as the value \"-32768\"\n    if (tabIndex == '-32768') {\n        return false;\n    }\n    return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n * @param {?} element\n * @return {?}\n */\nfunction getTabIndexValue(element) {\n    if (!hasValidTabIndex(element)) {\n        return null;\n    }\n    // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n    /** @type {?} */\n    const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n    return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/**\n * Checks whether the specified element is potentially tabbable on iOS\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyTabbableIOS(element) {\n    /** @type {?} */\n    let nodeName = element.nodeName.toLowerCase();\n    /** @type {?} */\n    let inputType = nodeName === 'input' && ((/** @type {?} */ (element))).type;\n    return inputType === 'text'\n        || inputType === 'password'\n        || nodeName === 'select'\n        || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n * @param {?} element\n * @return {?}\n */\nfunction isPotentiallyFocusable(element) {\n    // Inputs are potentially focusable *unless* they're type=\"hidden\".\n    if (isHiddenInput(element)) {\n        return false;\n    }\n    return isNativeFormElement(element) ||\n        isAnchorWithHref(element) ||\n        element.hasAttribute('contenteditable') ||\n        hasValidTabIndex(element);\n}\n/**\n * Gets the parent window of a DOM node with regards of being inside of an iframe.\n * @param {?} node\n * @return {?}\n */\nfunction getWindow(node) {\n    // ownerDocument is null if `node` itself *is* a document.\n    return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} deferAnchors\n     */\n    constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n        this._element = _element;\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._hasAttached = false;\n        // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n        this.startAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusLastTabbableElement());\n        this.endAnchorListener = (/**\n         * @return {?}\n         */\n        () => this.focusFirstTabbableElement());\n        this._enabled = true;\n        if (!deferAnchors) {\n            this.attachAnchors();\n        }\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(value, this._startAnchor);\n            this._toggleAnchorTabIndex(value, this._endAnchor);\n        }\n    }\n    /**\n     * Destroys the focus trap by cleaning up the anchors.\n     * @return {?}\n     */\n    destroy() {\n        /** @type {?} */\n        const startAnchor = this._startAnchor;\n        /** @type {?} */\n        const endAnchor = this._endAnchor;\n        if (startAnchor) {\n            startAnchor.removeEventListener('focus', this.startAnchorListener);\n            if (startAnchor.parentNode) {\n                startAnchor.parentNode.removeChild(startAnchor);\n            }\n        }\n        if (endAnchor) {\n            endAnchor.removeEventListener('focus', this.endAnchorListener);\n            if (endAnchor.parentNode) {\n                endAnchor.parentNode.removeChild(endAnchor);\n            }\n        }\n        this._startAnchor = this._endAnchor = null;\n    }\n    /**\n     * Inserts the anchors into the DOM. This is usually done automatically\n     * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n     * @return {?} Whether the focus trap managed to attach successfuly. This may not be the case\n     * if the target element isn't currently in the DOM.\n     */\n    attachAnchors() {\n        // If we're not on the browser, there can be no focus to trap.\n        if (this._hasAttached) {\n            return true;\n        }\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._startAnchor) {\n                this._startAnchor = this._createAnchor();\n                (/** @type {?} */ (this._startAnchor)).addEventListener('focus', this.startAnchorListener);\n            }\n            if (!this._endAnchor) {\n                this._endAnchor = this._createAnchor();\n                (/** @type {?} */ (this._endAnchor)).addEventListener('focus', this.endAnchorListener);\n            }\n        }));\n        if (this._element.parentNode) {\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._startAnchor)), this._element);\n            this._element.parentNode.insertBefore((/** @type {?} */ (this._endAnchor)), this._element.nextSibling);\n            this._hasAttached = true;\n        }\n        return this._hasAttached;\n    }\n    /**\n     * Waits for the zone to stabilize, then either focuses the first element that the\n     * user specified, or the first tabbable element.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusInitialElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusInitialElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the first tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusFirstTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusFirstTabbableElement())));\n        }));\n    }\n    /**\n     * Waits for the zone to stabilize, then focuses\n     * the last tabbable element within the focus trap region.\n     * @return {?} Returns a promise that resolves with a boolean, depending\n     * on whether focus was moved successfuly.\n     */\n    focusLastTabbableElementWhenReady() {\n        return new Promise((/**\n         * @param {?} resolve\n         * @return {?}\n         */\n        resolve => {\n            this._executeOnStable((/**\n             * @return {?}\n             */\n            () => resolve(this.focusLastTabbableElement())));\n        }));\n    }\n    /**\n     * Get the specified boundary element of the trapped region.\n     * @private\n     * @param {?} bound The boundary to get (start or end of trapped region).\n     * @return {?} The boundary element.\n     */\n    _getRegionBoundary(bound) {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        let markers = (/** @type {?} */ (this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\n            `[cdkFocusRegion${bound}], ` +\n            `[cdk-focus-${bound}]`)));\n        for (let i = 0; i < markers.length; i++) {\n            // @breaking-change 8.0.0\n            if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\n                    `attribute will be removed in 8.0.0.`, markers[i]);\n            }\n            else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\n                    `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0.`, markers[i]);\n            }\n        }\n        if (bound == 'start') {\n            return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n        }\n        return markers.length ?\n            markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n    }\n    /**\n     * Focuses the element that should be focused when the focus trap is initialized.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusInitialElement() {\n        // Contains the deprecated version of selector, for temporary backwards comparability.\n        /** @type {?} */\n        const redirectToElement = (/** @type {?} */ (this._element.querySelector(`[cdk-focus-initial], ` +\n            `[cdkFocusInitial]`)));\n        if (redirectToElement) {\n            // @breaking-change 8.0.0\n            if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n                console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\n                    `will be removed in 8.0.0`, redirectToElement);\n            }\n            // Warn the consumer if the element they've pointed to\n            // isn't focusable, when not in production mode.\n            if (isDevMode() && !this._checker.isFocusable(redirectToElement)) {\n                console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n            }\n            redirectToElement.focus();\n            return true;\n        }\n        return this.focusFirstTabbableElement();\n    }\n    /**\n     * Focuses the first tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusFirstTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('start');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Focuses the last tabbable element within the focus trap region.\n     * @return {?} Whether focus was moved successfuly.\n     */\n    focusLastTabbableElement() {\n        /** @type {?} */\n        const redirectToElement = this._getRegionBoundary('end');\n        if (redirectToElement) {\n            redirectToElement.focus();\n        }\n        return !!redirectToElement;\n    }\n    /**\n     * Checks whether the focus trap has successfuly been attached.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._hasAttached;\n    }\n    /**\n     * Get the first tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getFirstTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\n        // back to `childNodes` which includes text nodes, comments etc.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = 0; i < children.length; i++) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getFirstTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Get the last tabbable element from a DOM subtree (inclusive).\n     * @private\n     * @param {?} root\n     * @return {?}\n     */\n    _getLastTabbableElement(root) {\n        if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n            return root;\n        }\n        // Iterate in reverse DOM order.\n        /** @type {?} */\n        let children = root.children || root.childNodes;\n        for (let i = children.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\n                this._getLastTabbableElement((/** @type {?} */ (children[i]))) :\n                null;\n            if (tabbableChild) {\n                return tabbableChild;\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates an anchor element.\n     * @private\n     * @return {?}\n     */\n    _createAnchor() {\n        /** @type {?} */\n        const anchor = this._document.createElement('div');\n        this._toggleAnchorTabIndex(this._enabled, anchor);\n        anchor.classList.add('cdk-visually-hidden');\n        anchor.classList.add('cdk-focus-trap-anchor');\n        anchor.setAttribute('aria-hidden', 'true');\n        return anchor;\n    }\n    /**\n     * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n     * @private\n     * @param {?} isEnabled Whether the focus trap is enabled.\n     * @param {?} anchor Anchor on which to toggle the tabindex.\n     * @return {?}\n     */\n    _toggleAnchorTabIndex(isEnabled, anchor) {\n        // Remove the tabindex completely, rather than setting it to -1, because if the\n        // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n        isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n    }\n    /**\n     * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n     * @protected\n     * @param {?} enabled\n     * @return {?}\n     */\n    toggleAnchors(enabled) {\n        if (this._startAnchor && this._endAnchor) {\n            this._toggleAnchorTabIndex(enabled, this._startAnchor);\n            this._toggleAnchorTabIndex(enabled, this._endAnchor);\n        }\n    }\n    /**\n     * Executes a function when the zone is stable.\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _executeOnStable(fn) {\n        if (this._ngZone.isStable) {\n            fn();\n        }\n        else {\n            this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._startAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._endAnchor;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._hasAttached;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.startAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype.endAnchorListener;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FocusTrap.prototype._enabled;\n    /** @type {?} */\n    FocusTrap.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrap.prototype._checker;\n    /** @type {?} */\n    FocusTrap.prototype._ngZone;\n    /** @type {?} */\n    FocusTrap.prototype._document;\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * \\@breaking-change for 11.0.0 Remove this class.\n */\nclass FocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     */\n    constructor(_checker, _ngZone, _document) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param {?} element The element around which focus will be trapped.\n     * @param {?=} deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @return {?} The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n        return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n}\nFocusTrapFactory.ɵfac = function FocusTrapFactory_Factory(t) { return new (t || FocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ FocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapFactory_Factory() { return new FocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: FocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapFactory.prototype._ngZone;\n}\n/**\n * Directive for trapping focus within a region.\n */\nclass CdkTrapFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusTrapFactory\n     * @param {?} _document\n     */\n    constructor(_elementRef, _focusTrapFactory, _document) {\n        this._elementRef = _elementRef;\n        this._focusTrapFactory = _focusTrapFactory;\n        /**\n         * Previously focused element to restore focus to upon destroy when using autoCapture.\n         */\n        this._previouslyFocusedElement = null;\n        this._document = _document;\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n    }\n    /**\n     * Whether the focus trap is active.\n     * @return {?}\n     */\n    get enabled() { return this.focusTrap.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) { this.focusTrap.enabled = coerceBooleanProperty(value); }\n    /**\n     * Whether the directive should automatially move focus into the trapped region upon\n     * initialization and return focus to the previous activeElement upon destruction.\n     * @return {?}\n     */\n    get autoCapture() { return this._autoCapture; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set autoCapture(value) { this._autoCapture = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.focusTrap.destroy();\n        // If we stored a previously focused element when using autoCapture, return focus to that\n        // element now that the trapped region is being destroyed.\n        if (this._previouslyFocusedElement) {\n            this._previouslyFocusedElement.focus();\n            this._previouslyFocusedElement = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this.focusTrap.attachAnchors();\n        if (this.autoCapture) {\n            this._previouslyFocusedElement = (/** @type {?} */ (this._document.activeElement));\n            this.focusTrap.focusInitialElementWhenReady();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (!this.focusTrap.hasAttached()) {\n            this.focusTrap.attachAnchors();\n        }\n    }\n}\nCdkTrapFocus.ɵfac = function CdkTrapFocus_Factory(t) { return new (t || CdkTrapFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusTrapFactory), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkTrapFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTrapFocus, selectors: [[\"\", \"cdkTrapFocus\", \"\"]], inputs: { enabled: [\"cdkTrapFocus\", \"enabled\"], autoCapture: [\"cdkTrapFocusAutoCapture\", \"autoCapture\"] }, exportAs: [\"cdkTrapFocus\"] });\n/** @nocollapse */\nCdkTrapFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusTrapFactory },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkTrapFocus.propDecorators = {\n    enabled: [{ type: Input, args: ['cdkTrapFocus',] }],\n    autoCapture: [{ type: Input, args: ['cdkTrapFocusAutoCapture',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTrapFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkTrapFocus]',\n                exportAs: 'cdkTrapFocus'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusTrapFactory }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { enabled: [{\n            type: Input,\n            args: ['cdkTrapFocus']\n        }], autoCapture: [{\n            type: Input,\n            args: ['cdkTrapFocusAutoCapture']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_enabled;\n    /** @type {?} */\n    CdkTrapFocus.ngAcceptInputType_autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._document;\n    /**\n     * Underlying FocusTrap instance.\n     * @type {?}\n     */\n    CdkTrapFocus.prototype.focusTrap;\n    /**\n     * Previously focused element to restore focus to upon destroy when using autoCapture.\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._previouslyFocusedElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._autoCapture;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTrapFocus.prototype._focusTrapFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n    /**\n     * @param {?} _element\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _focusTrapManager\n     * @param {?} _inertStrategy\n     * @param {?} config\n     */\n    constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n        super(_element, _checker, _ngZone, _document, config.defer);\n        this._focusTrapManager = _focusTrapManager;\n        this._inertStrategy = _inertStrategy;\n        this._focusTrapManager.register(this);\n    }\n    /**\n     * Whether the FocusTrap is enabled.\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        this._enabled = value;\n        if (this._enabled) {\n            this._focusTrapManager.register(this);\n        }\n        else {\n            this._focusTrapManager.deregister(this);\n        }\n    }\n    /**\n     * Notifies the FocusTrapManager that this FocusTrap will be destroyed.\n     * @return {?}\n     */\n    destroy() {\n        this._focusTrapManager.deregister(this);\n        super.destroy();\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _enable() {\n        this._inertStrategy.preventFocus(this);\n        this.toggleAnchors(true);\n    }\n    /**\n     * \\@docs-private Implemented as part of ManagedFocusTrap.\n     * @return {?}\n     */\n    _disable() {\n        this._inertStrategy.allowFocus(this);\n        this.toggleAnchors(false);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._focusTrapManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrap.prototype._inertStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/polyfill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * IE 11 compatible closest implementation that is able to start from non-Element Nodes.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!(element instanceof Node)) {\n        return null;\n    }\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element)) {\n        curr = curr.parentNode;\n    }\n    return curr && (/** @type {?} */ ((hasNativeClosest ?\n        curr.closest(selector) : polyfillClosest(curr, selector))));\n}\n/**\n * Polyfill for browsers without Element.closest.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction polyfillClosest(element, selector) {\n    /** @type {?} */\n    let curr = element;\n    while (curr != null && !(curr instanceof Element && matches(curr, selector))) {\n        curr = curr.parentNode;\n    }\n    return (/** @type {?} */ ((curr || null)));\n}\n/** @type {?} */\nconst hasNativeClosest = typeof Element != 'undefined' && !!Element.prototype.closest;\n/**\n * IE 11 compatible matches implementation.\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction matches(element, selector) {\n    return element.matches ?\n        element.matches(selector) :\n        ((/** @type {?} */ (element)))['msMatchesSelector'](selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/event-listener-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n    constructor() {\n        /**\n         * Focus event handler.\n         */\n        this._listener = null;\n    }\n    /**\n     * Adds a document event listener that keeps focus inside the FocusTrap.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    preventFocus(focusTrap) {\n        // Ensure there's only one listener per document\n        if (this._listener) {\n            focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }\n        this._listener = (/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => this._trapFocus(focusTrap, e));\n        focusTrap._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            focusTrap._document.addEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        }));\n    }\n    /**\n     * Removes the event listener added in preventFocus.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    allowFocus(focusTrap) {\n        if (!this._listener) {\n            return;\n        }\n        focusTrap._document.removeEventListener('focus', (/** @type {?} */ (this._listener)), true);\n        this._listener = null;\n    }\n    /**\n     * Refocuses the first element in the FocusTrap if the focus event target was outside\n     * the FocusTrap.\n     *\n     * This is an event listener callback. The event listener is added in runOutsideAngular,\n     * so all this code runs outside Angular as well.\n     * @private\n     * @param {?} focusTrap\n     * @param {?} event\n     * @return {?}\n     */\n    _trapFocus(focusTrap, event) {\n        /** @type {?} */\n        const target = (/** @type {?} */ (event.target));\n        /** @type {?} */\n        const focusTrapRoot = focusTrap._element;\n        // Don't refocus if target was in an overlay, because the overlay might be associated\n        // with an element inside the FocusTrap, ex. mat-select.\n        if (!focusTrapRoot.contains(target) && closest(target, 'div.cdk-overlay-pane') === null) {\n            // Some legacy FocusTrap usages have logic that focuses some element on the page\n            // just before FocusTrap is destroyed. For backwards compatibility, wait\n            // to be sure FocusTrap is still enabled before refocusing.\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n                if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n                    focusTrap.focusFirstTabbableElement();\n                }\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Focus event handler.\n     * @type {?}\n     * @private\n     */\n    EventListenerFocusTrapInertStrategy.prototype._listener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Configuration for creating a ConfigurableFocusTrap.\n */\nclass ConfigurableFocusTrapConfig {\n    constructor() {\n        /**\n         * Whether to defer the creation of FocusTrap elements to be\n         * done manually by the user. Default is to create them\n         * automatically.\n         */\n        this.defer = false;\n    }\n}\nif (false) {\n    /**\n     * Whether to defer the creation of FocusTrap elements to be\n     * done manually by the user. Default is to create them\n     * automatically.\n     * @type {?}\n     */\n    ConfigurableFocusTrapConfig.prototype.defer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-inert-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the inert strategy.\n * @type {?}\n */\nconst FOCUS_TRAP_INERT_STRATEGY = new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n/**\n * A strategy that dictates how FocusTrap should prevent elements\n * outside of the FocusTrap from being focused.\n * @record\n */\nfunction FocusTrapInertStrategy() { }\nif (false) {\n    /**\n     * Makes all elements outside focusTrap unfocusable.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.preventFocus = function (focusTrap) { };\n    /**\n     * Reverts elements made unfocusable by preventFocus to their previous state.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    FocusTrapInertStrategy.prototype.allowFocus = function (focusTrap) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/focus-trap-manager.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A FocusTrap managed by FocusTrapManager.\n * Implemented by ConfigurableFocusTrap to avoid circular dependency.\n * @record\n */\nfunction ManagedFocusTrap() { }\nif (false) {\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._enable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype._disable = function () { };\n    /**\n     * @return {?}\n     */\n    ManagedFocusTrap.prototype.focusInitialElementWhenReady = function () { };\n}\n/**\n * Injectable that ensures only the most recently enabled FocusTrap is active.\n */\nclass FocusTrapManager {\n    constructor() {\n        // A stack of the FocusTraps on the page. Only the FocusTrap at the\n        // top of the stack is active.\n        this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    register(focusTrap) {\n        // Dedupe focusTraps that register multiple times.\n        this._focusTrapStack = this._focusTrapStack.filter((/**\n         * @param {?} ft\n         * @return {?}\n         */\n        (ft) => ft !== focusTrap));\n        /** @type {?} */\n        let stack = this._focusTrapStack;\n        if (stack.length) {\n            stack[stack.length - 1]._disable();\n        }\n        stack.push(focusTrap);\n        focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     * @param {?} focusTrap\n     * @return {?}\n     */\n    deregister(focusTrap) {\n        focusTrap._disable();\n        /** @type {?} */\n        const stack = this._focusTrapStack;\n        /** @type {?} */\n        const i = stack.indexOf(focusTrap);\n        if (i !== -1) {\n            stack.splice(i, 1);\n            if (stack.length) {\n                stack[stack.length - 1]._enable();\n            }\n        }\n    }\n}\nFocusTrapManager.ɵfac = function FocusTrapManager_Factory(t) { return new (t || FocusTrapManager)(); };\n/** @nocollapse */ FocusTrapManager.ɵprov = ɵɵdefineInjectable({ factory: function FocusTrapManager_Factory() { return new FocusTrapManager(); }, token: FocusTrapManager, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusTrapManager, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusTrapManager.prototype._focusTrapStack;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-trap/configurable-focus-trap-factory.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that allows easy instantiation of configurable focus traps.\n */\nclass ConfigurableFocusTrapFactory {\n    /**\n     * @param {?} _checker\n     * @param {?} _ngZone\n     * @param {?} _focusTrapManager\n     * @param {?} _document\n     * @param {?=} _inertStrategy\n     */\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n        this._checker = _checker;\n        this._ngZone = _ngZone;\n        this._focusTrapManager = _focusTrapManager;\n        this._document = _document;\n        // TODO split up the strategies into different modules, similar to DateAdapter.\n        this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    /**\n     * @param {?} element\n     * @param {?=} config\n     * @return {?}\n     */\n    create(element, config = new ConfigurableFocusTrapConfig()) {\n        /** @type {?} */\n        let configObject;\n        if (typeof config === 'boolean') {\n            configObject = new ConfigurableFocusTrapConfig();\n            configObject.defer = config;\n        }\n        else {\n            configObject = config;\n        }\n        return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n}\nConfigurableFocusTrapFactory.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) { return new (t || ConfigurableFocusTrapFactory)(ɵngcc0.ɵɵinject(InteractivityChecker), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(FocusTrapManager), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); };\n/** @nocollapse */\nConfigurableFocusTrapFactory.ctorParameters = () => [\n    { type: InteractivityChecker },\n    { type: NgZone },\n    { type: FocusTrapManager },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [FOCUS_TRAP_INERT_STRATEGY,] }] }\n];\n/** @nocollapse */ ConfigurableFocusTrapFactory.ɵprov = ɵɵdefineInjectable({ factory: function ConfigurableFocusTrapFactory_Factory() { return new ConfigurableFocusTrapFactory(ɵɵinject(InteractivityChecker), ɵɵinject(NgZone), ɵɵinject(FocusTrapManager), ɵɵinject(DOCUMENT), ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8)); }, token: ConfigurableFocusTrapFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ConfigurableFocusTrapFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: InteractivityChecker }, { type: ɵngcc0.NgZone }, { type: FocusTrapManager }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [FOCUS_TRAP_INERT_STRATEGY]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._inertStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._checker;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConfigurableFocusTrapFactory.prototype._focusTrapManager;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer-tokens.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = new InjectionToken('liveAnnouncerElement', {\n    providedIn: 'root',\n    factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n    return null;\n}\n/**\n * Object that can be used to configure the default options for the LiveAnnouncer.\n * @record\n */\nfunction LiveAnnouncerDefaultOptions() { }\nif (false) {\n    /**\n     * Default politeness for the announcements.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.politeness;\n    /**\n     * Default duration for the announcement messages.\n     * @type {?|undefined}\n     */\n    LiveAnnouncerDefaultOptions.prototype.duration;\n}\n/**\n * Injection token that can be used to configure the default options for the LiveAnnouncer.\n * @type {?}\n */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/live-announcer/live-announcer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass LiveAnnouncer {\n    /**\n     * @param {?} elementToken\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?=} _defaultOptions\n     */\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        // We inject the live element and document as `any` because the constructor signature cannot\n        // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n        // a class decorator causes TypeScript to preserve the constructor signature types.\n        this._document = _document;\n        this._liveElement = elementToken || this._createLiveElement();\n    }\n    /**\n     * @param {?} message\n     * @param {...?} args\n     * @return {?}\n     */\n    announce(message, ...args) {\n        /** @type {?} */\n        const defaultOptions = this._defaultOptions;\n        /** @type {?} */\n        let politeness;\n        /** @type {?} */\n        let duration;\n        if (args.length === 1 && typeof args[0] === 'number') {\n            duration = args[0];\n        }\n        else {\n            [politeness, duration] = args;\n        }\n        this.clear();\n        clearTimeout(this._previousTimeout);\n        if (!politeness) {\n            politeness =\n                (defaultOptions && defaultOptions.politeness) ? defaultOptions.politeness : 'polite';\n        }\n        if (duration == null && defaultOptions) {\n            duration = defaultOptions.duration;\n        }\n        // TODO: ensure changing the politeness works on all environments we support.\n        this._liveElement.setAttribute('aria-live', politeness);\n        // This 100ms timeout is necessary for some browser + screen-reader combinations:\n        // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n        // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n        //   second time without clearing and then using a non-zero delay.\n        // (using JAWS 17 at time of this writing).\n        return this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return new Promise((/**\n             * @param {?} resolve\n             * @return {?}\n             */\n            resolve => {\n                clearTimeout(this._previousTimeout);\n                this._previousTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._liveElement.textContent = message;\n                    resolve();\n                    if (typeof duration === 'number') {\n                        this._previousTimeout = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => this.clear()), duration);\n                    }\n                }), 100);\n            }));\n        }));\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     * @return {?}\n     */\n    clear() {\n        if (this._liveElement) {\n            this._liveElement.textContent = '';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        clearTimeout(this._previousTimeout);\n        if (this._liveElement && this._liveElement.parentNode) {\n            this._liveElement.parentNode.removeChild(this._liveElement);\n            this._liveElement = (/** @type {?} */ (null));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLiveElement() {\n        /** @type {?} */\n        const elementClass = 'cdk-live-announcer-element';\n        /** @type {?} */\n        const previousElements = this._document.getElementsByClassName(elementClass);\n        /** @type {?} */\n        const liveEl = this._document.createElement('div');\n        // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n        for (let i = 0; i < previousElements.length; i++) {\n            (/** @type {?} */ (previousElements[i].parentNode)).removeChild(previousElements[i]);\n        }\n        liveEl.classList.add(elementClass);\n        liveEl.classList.add('cdk-visually-hidden');\n        liveEl.setAttribute('aria-atomic', 'true');\n        liveEl.setAttribute('aria-live', 'polite');\n        this._document.body.appendChild(liveEl);\n        return liveEl;\n    }\n}\nLiveAnnouncer.ɵfac = function LiveAnnouncer_Factory(t) { return new (t || LiveAnnouncer)(ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); };\n/** @nocollapse */\nLiveAnnouncer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_ELEMENT_TOKEN,] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS,] }] }\n];\n/** @nocollapse */ LiveAnnouncer.ɵprov = ɵɵdefineInjectable({ factory: function LiveAnnouncer_Factory() { return new LiveAnnouncer(ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), ɵɵinject(NgZone), ɵɵinject(DOCUMENT), ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8)); }, token: LiveAnnouncer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LiveAnnouncer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_ELEMENT_TOKEN]\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [LIVE_ANNOUNCER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._liveElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._previousTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    LiveAnnouncer.prototype._defaultOptions;\n}\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nclass CdkAriaLive {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _liveAnnouncer\n     * @param {?} _contentObserver\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n        this._elementRef = _elementRef;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._contentObserver = _contentObserver;\n        this._ngZone = _ngZone;\n        this._politeness = 'off';\n    }\n    /**\n     * The aria-live politeness level to use when announcing messages.\n     * @return {?}\n     */\n    get politeness() { return this._politeness; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set politeness(value) {\n        this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\n        if (this._politeness === 'off') {\n            if (this._subscription) {\n                this._subscription.unsubscribe();\n                this._subscription = null;\n            }\n        }\n        else if (!this._subscription) {\n            this._subscription = this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                return this._contentObserver\n                    .observe(this._elementRef)\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n                    /** @type {?} */\n                    const elementText = this._elementRef.nativeElement.textContent;\n                    // The `MutationObserver` fires also for attribute\n                    // changes which we don't want to announce.\n                    if (elementText !== this._previousAnnouncedText) {\n                        this._liveAnnouncer.announce(elementText, this._politeness);\n                        this._previousAnnouncedText = elementText;\n                    }\n                }));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n    }\n}\nCdkAriaLive.ɵfac = function CdkAriaLive_Factory(t) { return new (t || CdkAriaLive)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkAriaLive.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAriaLive, selectors: [[\"\", \"cdkAriaLive\", \"\"]], inputs: { politeness: [\"cdkAriaLive\", \"politeness\"] }, exportAs: [\"cdkAriaLive\"] });\n/** @nocollapse */\nCdkAriaLive.ctorParameters = () => [\n    { type: ElementRef },\n    { type: LiveAnnouncer },\n    { type: ContentObserver },\n    { type: NgZone }\n];\nCdkAriaLive.propDecorators = {\n    politeness: [{ type: Input, args: ['cdkAriaLive',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAriaLive, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAriaLive]',\n                exportAs: 'cdkAriaLive'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: LiveAnnouncer }, { type: ɵngcc2.ContentObserver }, { type: ɵngcc0.NgZone }]; }, { politeness: [{\n            type: Input,\n            args: ['cdkAriaLive']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._politeness;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._previousAnnouncedText;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._subscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._liveAnnouncer;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAriaLive.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/focus-monitor/focus-monitor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n// that a value of around 650ms seems appropriate.\n/** @type {?} */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Corresponds to the options that can be passed to the native `focus` event.\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\n * @record\n */\nfunction FocusOptions() { }\nif (false) {\n    /**\n     * Whether the browser should scroll to the element when it is focused.\n     * @type {?|undefined}\n     */\n    FocusOptions.prototype.preventScroll;\n}\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n * @type {?}\n */\nconst captureEventListenerOptions = normalizePassiveListenerOptions({\n    passive: true,\n    capture: true\n});\n/**\n * Monitors mouse and keyboard events to determine the cause of focus events.\n */\nclass FocusMonitor {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * The focus origin that the next focus event is a result of.\n         */\n        this._origin = null;\n        /**\n         * Whether the window has just been focused.\n         */\n        this._windowFocused = false;\n        /**\n         * Map of elements being monitored to their info.\n         */\n        this._elementInfo = new Map();\n        /**\n         * The number of elements currently being monitored.\n         */\n        this._monitoredElementCount = 0;\n        /**\n         * Event listener for `keydown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentKeydownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On keydown record the origin and clear any touch event that may be in progress.\n            this._lastTouchTarget = null;\n            this._setOriginForCurrentEventQueue('keyboard');\n        });\n        /**\n         * Event listener for `mousedown` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentMousedownListener = (/**\n         * @return {?}\n         */\n        () => {\n            // On mousedown record the origin only if there is not touch\n            // target, since a mousedown can happen as a result of a touch event.\n            if (!this._lastTouchTarget) {\n                this._setOriginForCurrentEventQueue('mouse');\n            }\n        });\n        /**\n         * Event listener for `touchstart` events on the document.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._documentTouchstartListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // When the touchstart event fires the focus event is not yet in the event queue. This means\n            // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\n            // see if a focus happens.\n            if (this._touchTimeoutId != null) {\n                clearTimeout(this._touchTimeoutId);\n            }\n            // Since this listener is bound on the `document` level, any events coming from the shadow DOM\n            // will have their `target` set to the shadow root. If available, use `composedPath` to\n            // figure out the event target.\n            this._lastTouchTarget = event.composedPath ? event.composedPath()[0] : event.target;\n            this._touchTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._lastTouchTarget = null), TOUCH_BUFFER_MS);\n        });\n        /**\n         * Event listener for `focus` events on the window.\n         * Needs to be an arrow function in order to preserve the context when it gets bound.\n         */\n        this._windowFocusListener = (/**\n         * @return {?}\n         */\n        () => {\n            // Make a note of when the window regains focus, so we can\n            // restore the origin info for the focused element.\n            this._windowFocused = true;\n            this._windowFocusTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._windowFocused = false));\n        });\n    }\n    /**\n     * @param {?} element\n     * @param {?=} checkChildren\n     * @return {?}\n     */\n    monitor(element, checkChildren = false) {\n        // Do nothing if we're not on the browser platform.\n        if (!this._platform.isBrowser) {\n            return of(null);\n        }\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        // Check if we're already monitoring this element.\n        if (this._elementInfo.has(nativeElement)) {\n            /** @type {?} */\n            let cachedInfo = this._elementInfo.get(nativeElement);\n            (/** @type {?} */ (cachedInfo)).checkChildren = checkChildren;\n            return (/** @type {?} */ (cachedInfo)).subject.asObservable();\n        }\n        // Create monitored element info.\n        /** @type {?} */\n        let info = {\n            unlisten: (/**\n             * @return {?}\n             */\n            () => { }),\n            checkChildren: checkChildren,\n            subject: new Subject()\n        };\n        this._elementInfo.set(nativeElement, info);\n        this._incrementMonitoredElementCount();\n        // Start listening. We need to listen in capture phase since focus events don't bubble.\n        /** @type {?} */\n        let focusListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onFocus(event, nativeElement));\n        /** @type {?} */\n        let blurListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._onBlur(event, nativeElement));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.addEventListener('focus', focusListener, true);\n            nativeElement.addEventListener('blur', blurListener, true);\n        }));\n        // Create an unlisten function for later.\n        info.unlisten = (/**\n         * @return {?}\n         */\n        () => {\n            nativeElement.removeEventListener('focus', focusListener, true);\n            nativeElement.removeEventListener('blur', blurListener, true);\n        });\n        return info.subject.asObservable();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    stopMonitoring(element) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(nativeElement);\n        if (elementInfo) {\n            elementInfo.unlisten();\n            elementInfo.subject.complete();\n            this._setClasses(nativeElement);\n            this._elementInfo.delete(nativeElement);\n            this._decrementMonitoredElementCount();\n        }\n    }\n    /**\n     * @param {?} element\n     * @param {?} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focusVia(element, origin, options) {\n        /** @type {?} */\n        const nativeElement = coerceElement(element);\n        this._setOriginForCurrentEventQueue(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n            // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\n            ((/** @type {?} */ (nativeElement))).focus(options);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._elementInfo.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n    /**\n     * @private\n     * @param {?} element\n     * @param {?} className\n     * @param {?} shouldSet\n     * @return {?}\n     */\n    _toggleClass(element, className, shouldSet) {\n        if (shouldSet) {\n            element.classList.add(className);\n        }\n        else {\n            element.classList.remove(className);\n        }\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @private\n     * @param {?} element The element to update the classes on.\n     * @param {?=} origin The focus origin.\n     * @return {?}\n     */\n    _setClasses(element, origin) {\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (elementInfo) {\n            this._toggleClass(element, 'cdk-focused', !!origin);\n            this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\n            this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\n            this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\n            this._toggleClass(element, 'cdk-program-focused', origin === 'program');\n        }\n    }\n    /**\n     * Sets the origin and schedules an async function to clear it at the end of the event queue.\n     * @private\n     * @param {?} origin The origin to set.\n     * @return {?}\n     */\n    _setOriginForCurrentEventQueue(origin) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._origin = origin;\n            // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\n            // tick after the interaction event fired. To ensure the focus origin is always correct,\n            // the focus origin will be determined at the beginning of the next tick.\n            this._originTimeoutId = setTimeout((/**\n             * @return {?}\n             */\n            () => this._origin = null), 1);\n        }));\n    }\n    /**\n     * Checks whether the given focus event was caused by a touchstart event.\n     * @private\n     * @param {?} event The focus event to check.\n     * @return {?} Whether the event was caused by a touch.\n     */\n    _wasCausedByTouch(event) {\n        // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\n        // Consider the following dom structure:\n        //\n        // <div #parent tabindex=\"0\" cdkFocusClasses>\n        //   <div #child (click)=\"#parent.focus()\"></div>\n        // </div>\n        //\n        // If the user touches the #child element and the #parent is programmatically focused as a\n        // result, this code will still consider it to have been caused by the touch event and will\n        // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\n        // relatively small edge-case that can be worked around by using\n        // focusVia(parentEl, 'program') to focus the parent element.\n        //\n        // If we decide that we absolutely must handle this case correctly, we can do so by listening\n        // for the first focus event after the touchstart, and then the first blur event after that\n        // focus event. When that blur event fires we know that whatever follows is not a result of the\n        // touchstart.\n        /** @type {?} */\n        let focusTarget = event.target;\n        return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\n            (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @private\n     * @param {?} event The focus event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onFocus(event, element) {\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n        // focus event affecting the monitored element. If we want to use the origin of the first event\n        // instead we should check for the cdk-focused class here and return if the element already has\n        // it. (This only matters for elements that have includesChildren = true).\n        // If we are not counting child-element-focus as focused, make sure that the event target is the\n        // monitored element itself.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\n            return;\n        }\n        // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\n        // 1) The window has just regained focus, in which case we want to restore the focused state of\n        //    the element from before the window blurred.\n        // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\n        // 3) The element was programmatically focused, in which case we should mark the origin as\n        //    'program'.\n        /** @type {?} */\n        let origin = this._origin;\n        if (!origin) {\n            if (this._windowFocused && this._lastFocusOrigin) {\n                origin = this._lastFocusOrigin;\n            }\n            else if (this._wasCausedByTouch(event)) {\n                origin = 'touch';\n            }\n            else {\n                origin = 'program';\n            }\n        }\n        this._setClasses(element, origin);\n        this._emitOrigin(elementInfo.subject, origin);\n        this._lastFocusOrigin = origin;\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param {?} event The blur event.\n     * @param {?} element The monitored element.\n     * @return {?}\n     */\n    _onBlur(event, element) {\n        // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n        // order to focus another child of the monitored element.\n        /** @type {?} */\n        const elementInfo = this._elementInfo.get(element);\n        if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\n            element.contains(event.relatedTarget))) {\n            return;\n        }\n        this._setClasses(element);\n        this._emitOrigin(elementInfo.subject, null);\n    }\n    /**\n     * @private\n     * @param {?} subject\n     * @param {?} origin\n     * @return {?}\n     */\n    _emitOrigin(subject, origin) {\n        this._ngZone.run((/**\n         * @return {?}\n         */\n        () => subject.next(origin)));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _incrementMonitoredElementCount() {\n        // Register global listeners when first element is monitored.\n        if (++this._monitoredElementCount == 1 && this._platform.isBrowser) {\n            // Note: we listen to events in the capture phase so we\n            // can detect them even if the user stops propagation.\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                document.addEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n                document.addEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n                document.addEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n                window.addEventListener('focus', this._windowFocusListener);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _decrementMonitoredElementCount() {\n        // Unregister global listeners when last element is unmonitored.\n        if (!--this._monitoredElementCount) {\n            document.removeEventListener('keydown', this._documentKeydownListener, captureEventListenerOptions);\n            document.removeEventListener('mousedown', this._documentMousedownListener, captureEventListenerOptions);\n            document.removeEventListener('touchstart', this._documentTouchstartListener, captureEventListenerOptions);\n            window.removeEventListener('focus', this._windowFocusListener);\n            // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n            clearTimeout(this._windowFocusTimeoutId);\n            clearTimeout(this._touchTimeoutId);\n            clearTimeout(this._originTimeoutId);\n        }\n    }\n}\nFocusMonitor.ɵfac = function FocusMonitor_Factory(t) { return new (t || FocusMonitor)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nFocusMonitor.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ FocusMonitor.ɵprov = ɵɵdefineInjectable({ factory: function FocusMonitor_Factory() { return new FocusMonitor(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: FocusMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The focus origin that the next focus event is a result of.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._origin;\n    /**\n     * The FocusOrigin of the last focus event tracked by the FocusMonitor.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastFocusOrigin;\n    /**\n     * Whether the window has just been focused.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocused;\n    /**\n     * The target of the last touch event.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._lastTouchTarget;\n    /**\n     * The timeout id of the touch timeout, used to cancel timeout later.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._touchTimeoutId;\n    /**\n     * The timeout id of the window focus timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusTimeoutId;\n    /**\n     * The timeout id of the origin clearing timeout.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._originTimeoutId;\n    /**\n     * Map of elements being monitored to their info.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._elementInfo;\n    /**\n     * The number of elements currently being monitored.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._monitoredElementCount;\n    /**\n     * Event listener for `keydown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentKeydownListener;\n    /**\n     * Event listener for `mousedown` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentMousedownListener;\n    /**\n     * Event listener for `touchstart` events on the document.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._documentTouchstartListener;\n    /**\n     * Event listener for `focus` events on the window.\n     * Needs to be an arrow function in order to preserve the context when it gets bound.\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._windowFocusListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    FocusMonitor.prototype._platform;\n}\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nclass CdkMonitorFocus {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _focusMonitor\n     */\n    constructor(_elementRef, _focusMonitor) {\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this.cdkFocusChange = new EventEmitter();\n        this._monitorSubscription = this._focusMonitor.monitor(this._elementRef, this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => this.cdkFocusChange.emit(origin)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._monitorSubscription.unsubscribe();\n    }\n}\nCdkMonitorFocus.ɵfac = function CdkMonitorFocus_Factory(t) { return new (t || CdkMonitorFocus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(FocusMonitor)); };\nCdkMonitorFocus.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkMonitorFocus, selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]], outputs: { cdkFocusChange: \"cdkFocusChange\" } });\n/** @nocollapse */\nCdkMonitorFocus.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor }\n];\nCdkMonitorFocus.propDecorators = {\n    cdkFocusChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkMonitorFocus, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: FocusMonitor }]; }, { cdkFocusChange: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._monitorSubscription;\n    /** @type {?} */\n    CdkMonitorFocus.prototype.cdkFocusChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkMonitorFocus.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/fake-mousedown.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Screenreaders will often fire fake mousedown events when a focusable element\n * is activated using the keyboard. We can typically distinguish between these faked\n * mousedown events and real mousedown events using the \"buttons\" property. While\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\n * the left mouse button), faked mousedowns will usually set the property value to 0.\n * @param {?} event\n * @return {?}\n */\nfunction isFakeMousedownFromScreenReader(event) {\n    return event.buttons === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/high-contrast-mode/high-contrast-mode-detector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HighContrastMode = {\n    NONE: 0,\n    BLACK_ON_WHITE: 1,\n    WHITE_ON_BLACK: 2,\n};\n/**\n * CSS class applied to the document body when in black-on-white high-contrast mode.\n * @type {?}\n */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/**\n * CSS class applied to the document body when in white-on-black high-contrast mode.\n * @type {?}\n */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/**\n * CSS class applied to the document body when in high-contrast mode.\n * @type {?}\n */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-constrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nclass HighContrastModeDetector {\n    /**\n     * @param {?} _platform\n     * @param {?} document\n     */\n    constructor(_platform, document) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * Gets the current high-constrast-mode for the page.\n     * @return {?}\n     */\n    getHighContrastMode() {\n        if (!this._platform.isBrowser) {\n            return 0 /* NONE */;\n        }\n        // Create a test element with an arbitrary background-color that is neither black nor\n        // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n        // appending the test element to the DOM does not affect layout by absolutely positioning it\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.style.backgroundColor = 'rgb(1,2,3)';\n        testElement.style.position = 'absolute';\n        this._document.body.appendChild(testElement);\n        // Get the computed style for the background color, collapsing spaces to normalize between\n        // browsers. Once we get this color, we no longer need the test element. Access the `window`\n        // via the document so we can fake it in tests.\n        /** @type {?} */\n        const documentWindow = (/** @type {?} */ (this._document.defaultView));\n        /** @type {?} */\n        const computedColor = (documentWindow.getComputedStyle(testElement).backgroundColor || '').replace(/ /g, '');\n        this._document.body.removeChild(testElement);\n        switch (computedColor) {\n            case 'rgb(0,0,0)': return 2 /* WHITE_ON_BLACK */;\n            case 'rgb(255,255,255)': return 1 /* BLACK_ON_WHITE */;\n        }\n        return 0 /* NONE */;\n    }\n    /**\n     * Applies CSS classes indicating high-contrast mode to document body (browser-only).\n     * @return {?}\n     */\n    _applyBodyHighContrastModeCssClasses() {\n        if (this._platform.isBrowser && this._document.body) {\n            /** @type {?} */\n            const bodyClasses = this._document.body.classList;\n            // IE11 doesn't support `classList` operations with multiple arguments\n            bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n            bodyClasses.remove(BLACK_ON_WHITE_CSS_CLASS);\n            bodyClasses.remove(WHITE_ON_BLACK_CSS_CLASS);\n            /** @type {?} */\n            const mode = this.getHighContrastMode();\n            if (mode === 1 /* BLACK_ON_WHITE */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(BLACK_ON_WHITE_CSS_CLASS);\n            }\n            else if (mode === 2 /* WHITE_ON_BLACK */) {\n                bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS);\n                bodyClasses.add(WHITE_ON_BLACK_CSS_CLASS);\n            }\n        }\n    }\n}\nHighContrastModeDetector.ɵfac = function HighContrastModeDetector_Factory(t) { return new (t || HighContrastModeDetector)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nHighContrastModeDetector.ctorParameters = () => [\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ HighContrastModeDetector.ɵprov = ɵɵdefineInjectable({ factory: function HighContrastModeDetector_Factory() { return new HighContrastModeDetector(ɵɵinject(Platform), ɵɵinject(DOCUMENT)); }, token: HighContrastModeDetector, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighContrastModeDetector, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    HighContrastModeDetector.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/a11y-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass A11yModule {\n    /**\n     * @param {?} highContrastModeDetector\n     */\n    constructor(highContrastModeDetector) {\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n}\nA11yModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: A11yModule });\nA11yModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function A11yModule_Factory(t) { return new (t || A11yModule)(ɵngcc0.ɵɵinject(HighContrastModeDetector)); }, imports: [[PlatformModule, ObserversModule]] });\n/** @nocollapse */\nA11yModule.ctorParameters = () => [\n    { type: HighContrastModeDetector }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(A11yModule, { declarations: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; }, imports: function () { return [PlatformModule, ObserversModule]; }, exports: function () { return [CdkAriaLive,\n        CdkTrapFocus,\n        CdkMonitorFocus]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(A11yModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule, ObserversModule],\n                declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\n                exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus]\n            }]\n    }], function () { return [{ type: HighContrastModeDetector }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/a11y/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusTrap, FocusTrapFactory, HighContrastModeDetector, InteractivityChecker, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, TOUCH_BUFFER_MS, isFakeMousedownFromScreenReader, FocusTrapManager as ɵangular_material_src_cdk_a11y_a11y_a, ConfigurableFocusTrapConfig as ɵangular_material_src_cdk_a11y_a11y_b };\n\n//# sourceMappingURL=a11y.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/keycodes.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAC_ENTER = 3;\n/** @type {?} */\nconst BACKSPACE = 8;\n/** @type {?} */\nconst TAB = 9;\n/** @type {?} */\nconst NUM_CENTER = 12;\n/** @type {?} */\nconst ENTER = 13;\n/** @type {?} */\nconst SHIFT = 16;\n/** @type {?} */\nconst CONTROL = 17;\n/** @type {?} */\nconst ALT = 18;\n/** @type {?} */\nconst PAUSE = 19;\n/** @type {?} */\nconst CAPS_LOCK = 20;\n/** @type {?} */\nconst ESCAPE = 27;\n/** @type {?} */\nconst SPACE = 32;\n/** @type {?} */\nconst PAGE_UP = 33;\n/** @type {?} */\nconst PAGE_DOWN = 34;\n/** @type {?} */\nconst END = 35;\n/** @type {?} */\nconst HOME = 36;\n/** @type {?} */\nconst LEFT_ARROW = 37;\n/** @type {?} */\nconst UP_ARROW = 38;\n/** @type {?} */\nconst RIGHT_ARROW = 39;\n/** @type {?} */\nconst DOWN_ARROW = 40;\n/** @type {?} */\nconst PLUS_SIGN = 43;\n/** @type {?} */\nconst PRINT_SCREEN = 44;\n/** @type {?} */\nconst INSERT = 45;\n/** @type {?} */\nconst DELETE = 46;\n/** @type {?} */\nconst ZERO = 48;\n/** @type {?} */\nconst ONE = 49;\n/** @type {?} */\nconst TWO = 50;\n/** @type {?} */\nconst THREE = 51;\n/** @type {?} */\nconst FOUR = 52;\n/** @type {?} */\nconst FIVE = 53;\n/** @type {?} */\nconst SIX = 54;\n/** @type {?} */\nconst SEVEN = 55;\n/** @type {?} */\nconst EIGHT = 56;\n/** @type {?} */\nconst NINE = 57;\n/** @type {?} */\nconst FF_SEMICOLON = 59;\n// Firefox (Gecko) fires this for semicolon instead of 186\n/** @type {?} */\nconst FF_EQUALS = 61;\n// Firefox (Gecko) fires this for equals instead of 187\n/** @type {?} */\nconst QUESTION_MARK = 63;\n/** @type {?} */\nconst AT_SIGN = 64;\n/** @type {?} */\nconst A = 65;\n/** @type {?} */\nconst B = 66;\n/** @type {?} */\nconst C = 67;\n/** @type {?} */\nconst D = 68;\n/** @type {?} */\nconst E = 69;\n/** @type {?} */\nconst F = 70;\n/** @type {?} */\nconst G = 71;\n/** @type {?} */\nconst H = 72;\n/** @type {?} */\nconst I = 73;\n/** @type {?} */\nconst J = 74;\n/** @type {?} */\nconst K = 75;\n/** @type {?} */\nconst L = 76;\n/** @type {?} */\nconst M = 77;\n/** @type {?} */\nconst N = 78;\n/** @type {?} */\nconst O = 79;\n/** @type {?} */\nconst P = 80;\n/** @type {?} */\nconst Q = 81;\n/** @type {?} */\nconst R = 82;\n/** @type {?} */\nconst S = 83;\n/** @type {?} */\nconst T = 84;\n/** @type {?} */\nconst U = 85;\n/** @type {?} */\nconst V = 86;\n/** @type {?} */\nconst W = 87;\n/** @type {?} */\nconst X = 88;\n/** @type {?} */\nconst Y = 89;\n/** @type {?} */\nconst Z = 90;\n/** @type {?} */\nconst META = 91;\n// WIN_KEY_LEFT\n/** @type {?} */\nconst MAC_WK_CMD_LEFT = 91;\n/** @type {?} */\nconst MAC_WK_CMD_RIGHT = 93;\n/** @type {?} */\nconst CONTEXT_MENU = 93;\n/** @type {?} */\nconst NUMPAD_ZERO = 96;\n/** @type {?} */\nconst NUMPAD_ONE = 97;\n/** @type {?} */\nconst NUMPAD_TWO = 98;\n/** @type {?} */\nconst NUMPAD_THREE = 99;\n/** @type {?} */\nconst NUMPAD_FOUR = 100;\n/** @type {?} */\nconst NUMPAD_FIVE = 101;\n/** @type {?} */\nconst NUMPAD_SIX = 102;\n/** @type {?} */\nconst NUMPAD_SEVEN = 103;\n/** @type {?} */\nconst NUMPAD_EIGHT = 104;\n/** @type {?} */\nconst NUMPAD_NINE = 105;\n/** @type {?} */\nconst NUMPAD_MULTIPLY = 106;\n/** @type {?} */\nconst NUMPAD_PLUS = 107;\n/** @type {?} */\nconst NUMPAD_MINUS = 109;\n/** @type {?} */\nconst NUMPAD_PERIOD = 110;\n/** @type {?} */\nconst NUMPAD_DIVIDE = 111;\n/** @type {?} */\nconst F1 = 112;\n/** @type {?} */\nconst F2 = 113;\n/** @type {?} */\nconst F3 = 114;\n/** @type {?} */\nconst F4 = 115;\n/** @type {?} */\nconst F5 = 116;\n/** @type {?} */\nconst F6 = 117;\n/** @type {?} */\nconst F7 = 118;\n/** @type {?} */\nconst F8 = 119;\n/** @type {?} */\nconst F9 = 120;\n/** @type {?} */\nconst F10 = 121;\n/** @type {?} */\nconst F11 = 122;\n/** @type {?} */\nconst F12 = 123;\n/** @type {?} */\nconst NUM_LOCK = 144;\n/** @type {?} */\nconst SCROLL_LOCK = 145;\n/** @type {?} */\nconst FIRST_MEDIA = 166;\n/** @type {?} */\nconst FF_MINUS = 173;\n/** @type {?} */\nconst MUTE = 173;\n// Firefox (Gecko) fires 181 for MUTE\n/** @type {?} */\nconst VOLUME_DOWN = 174;\n// Firefox (Gecko) fires 182 for VOLUME_DOWN\n/** @type {?} */\nconst VOLUME_UP = 175;\n// Firefox (Gecko) fires 183 for VOLUME_UP\n/** @type {?} */\nconst FF_MUTE = 181;\n/** @type {?} */\nconst FF_VOLUME_DOWN = 182;\n/** @type {?} */\nconst LAST_MEDIA = 183;\n/** @type {?} */\nconst FF_VOLUME_UP = 183;\n/** @type {?} */\nconst SEMICOLON = 186;\n// Firefox (Gecko) fires 59 for SEMICOLON\n/** @type {?} */\nconst EQUALS = 187;\n// Firefox (Gecko) fires 61 for EQUALS\n/** @type {?} */\nconst COMMA = 188;\n/** @type {?} */\nconst DASH = 189;\n// Firefox (Gecko) fires 173 for DASH/MINUS\n/** @type {?} */\nconst SLASH = 191;\n/** @type {?} */\nconst APOSTROPHE = 192;\n/** @type {?} */\nconst TILDE = 192;\n/** @type {?} */\nconst OPEN_SQUARE_BRACKET = 219;\n/** @type {?} */\nconst BACKSLASH = 220;\n/** @type {?} */\nconst CLOSE_SQUARE_BRACKET = 221;\n/** @type {?} */\nconst SINGLE_QUOTE = 222;\n/** @type {?} */\nconst MAC_META = 224;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/modifiers.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Checks whether a modifier key is pressed.\n * @param {?} event Event to be checked.\n * @param {...?} modifiers\n * @return {?}\n */\nfunction hasModifierKey(event, ...modifiers) {\n    if (modifiers.length) {\n        return modifiers.some((/**\n         * @param {?} modifier\n         * @return {?}\n         */\n        modifier => event[modifier]));\n    }\n    return event.altKey || event.shiftKey || event.ctrlKey || event.metaKey;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/keycodes/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A, ALT, APOSTROPHE, AT_SIGN, B, BACKSLASH, BACKSPACE, C, CAPS_LOCK, CLOSE_SQUARE_BRACKET, COMMA, CONTEXT_MENU, CONTROL, D, DASH, DELETE, DOWN_ARROW, E, EIGHT, END, ENTER, EQUALS, ESCAPE, F, F1, F10, F11, F12, F2, F3, F4, F5, F6, F7, F8, F9, FF_EQUALS, FF_MINUS, FF_MUTE, FF_SEMICOLON, FF_VOLUME_DOWN, FF_VOLUME_UP, FIRST_MEDIA, FIVE, FOUR, G, H, HOME, I, INSERT, J, K, L, LAST_MEDIA, LEFT_ARROW, M, MAC_ENTER, MAC_META, MAC_WK_CMD_LEFT, MAC_WK_CMD_RIGHT, META, MUTE, N, NINE, NUMPAD_DIVIDE, NUMPAD_EIGHT, NUMPAD_FIVE, NUMPAD_FOUR, NUMPAD_MINUS, NUMPAD_MULTIPLY, NUMPAD_NINE, NUMPAD_ONE, NUMPAD_PERIOD, NUMPAD_PLUS, NUMPAD_SEVEN, NUMPAD_SIX, NUMPAD_THREE, NUMPAD_TWO, NUMPAD_ZERO, NUM_CENTER, NUM_LOCK, O, ONE, OPEN_SQUARE_BRACKET, P, PAGE_DOWN, PAGE_UP, PAUSE, PLUS_SIGN, PRINT_SCREEN, Q, QUESTION_MARK, R, RIGHT_ARROW, S, SCROLL_LOCK, SEMICOLON, SEVEN, SHIFT, SINGLE_QUOTE, SIX, SLASH, SPACE, T, TAB, THREE, TILDE, TWO, U, UP_ARROW, V, VOLUME_DOWN, VOLUME_UP, W, X, Y, Z, ZERO, hasModifierKey };\n\n//# sourceMappingURL=keycodes.js.map","import { NgModule, Injectable, ɵɵdefineInjectable, ɵɵinject, NgZone } from '@angular/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { coerceArray } from '@angular/cdk/coercion';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/layout-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/media-matcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Global registry for all dynamically-created, injected media queries.\n * @type {?}\n */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/**\n * Style tag that holds all of the dynamically-created media queries.\n * @type {?}\n */\nlet mediaQueryStyleNode;\n/**\n * A utility for calling matchMedia queries.\n */\nclass MediaMatcher {\n    /**\n     * @param {?} _platform\n     */\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     * @param {?} query\n     * @return {?}\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/** @nocollapse */ MediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * The internal matchMedia method to return back a MediaQueryList like object.\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._matchMedia;\n    /**\n     * @type {?}\n     * @private\n     */\n    MediaMatcher.prototype._platform;\n}\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n * @param {?} query\n * @return {?}\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            (/** @type {?} */ (document.head)).appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            ((/** @type {?} */ (mediaQueryStyleNode.sheet)))\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/**\n * No-op matchMedia replacement for non-browser platforms.\n * @param {?} query\n * @return {?}\n */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return (/** @type {?} */ ({\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: (/**\n         * @return {?}\n         */\n        () => { }),\n        removeListener: (/**\n         * @return {?}\n         */\n        () => { })\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints-observer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction BreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    BreakpointState.prototype.matches;\n    /**\n     * A key boolean pair for each query provided to the observe method,\n     * with its current matched state.\n     * @type {?}\n     */\n    BreakpointState.prototype.breakpoints;\n}\n/**\n * The current state of a layout breakpoint.\n * @record\n */\nfunction InternalBreakpointState() { }\nif (false) {\n    /**\n     * Whether the breakpoint is currently matching.\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.matches;\n    /**\n     * The media query being to be matched\n     * @type {?}\n     */\n    InternalBreakpointState.prototype.query;\n}\n/**\n * @record\n */\nfunction Query() { }\nif (false) {\n    /** @type {?} */\n    Query.prototype.observable;\n    /** @type {?} */\n    Query.prototype.mql;\n}\n/**\n * Utility for checking the matching state of \\@media queries.\n */\nclass BreakpointObserver {\n    /**\n     * @param {?} _mediaMatcher\n     * @param {?} _zone\n     */\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**\n         * A map of all media queries currently being listened for.\n         */\n        this._queries = new Map();\n        /**\n         * A subject for all other observables to takeUntil based on.\n         */\n        this._destroySubject = new Subject();\n    }\n    /**\n     * Completes the active subject, signalling to all other observables to complete.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param {?} value One or more media queries to check.\n     * @return {?} Whether any of the media queries match.\n     */\n    isMatched(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        return queries.some((/**\n         * @param {?} mediaQuery\n         * @return {?}\n         */\n        mediaQuery => this._registerQuery(mediaQuery).mql.matches));\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param {?} value One or more media queries to check.\n     * @return {?} A stream of matches for the given queries.\n     */\n    observe(value) {\n        /** @type {?} */\n        const queries = splitQueries(coerceArray(value));\n        /** @type {?} */\n        const observables = queries.map((/**\n         * @param {?} query\n         * @return {?}\n         */\n        query => this._registerQuery(query).observable));\n        /** @type {?} */\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map((/**\n         * @param {?} breakpointStates\n         * @return {?}\n         */\n        (breakpointStates) => {\n            /** @type {?} */\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach((/**\n             * @param {?} state\n             * @return {?}\n             */\n            (state) => {\n                response.matches = response.matches || state.matches;\n                response.breakpoints[state.query] = state.matches;\n            }));\n            return response;\n        })));\n    }\n    /**\n     * Registers a specific query to be listened for.\n     * @private\n     * @param {?} query\n     * @return {?}\n     */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return (/** @type {?} */ (this._queries.get(query)));\n        }\n        /** @type {?} */\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        /** @type {?} */\n        const queryObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            /** @type {?} */\n            const handler = (/**\n             * @param {?} e\n             * @return {?}\n             */\n            (e) => this._zone.run((/**\n             * @return {?}\n             */\n            () => observer.next(e))));\n            mql.addListener(handler);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                mql.removeListener(handler);\n            });\n        })).pipe(startWith(mql), map((/**\n         * @param {?} nextMql\n         * @return {?}\n         */\n        (nextMql) => ({ query, matches: nextMql.matches }))), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        /** @type {?} */\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/** @nocollapse */ BreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * A map of all media queries currently being listened for.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._queries;\n    /**\n     * A subject for all other observables to takeUntil based on.\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._destroySubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._mediaMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    BreakpointObserver.prototype._zone;\n}\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n * @param {?} queries\n * @return {?}\n */\nfunction splitQueries(queries) {\n    return queries.map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    (query) => query.split(',')))\n        .reduce((/**\n     * @param {?} a1\n     * @param {?} a2\n     * @return {?}\n     */\n    (a1, a2) => a1.concat(a2)))\n        .map((/**\n     * @param {?} query\n     * @return {?}\n     */\n    query => query.trim()));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/breakpoints.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @type {?}\n */\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/layout/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","import { coerceElement, coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Injectable, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, NgZone, Output, Input, NgModule } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/observe-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nclass MutationObserverFactory {\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    create(callback) {\n        return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n    }\n}\nMutationObserverFactory.ɵfac = function MutationObserverFactory_Factory(t) { return new (t || MutationObserverFactory)(); };\n/** @nocollapse */ MutationObserverFactory.ɵprov = ɵɵdefineInjectable({ factory: function MutationObserverFactory_Factory() { return new MutationObserverFactory(); }, token: MutationObserverFactory, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MutationObserverFactory, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n/**\n * An injectable service that allows watching elements for changes to their content.\n */\nclass ContentObserver {\n    /**\n     * @param {?} _mutationObserverFactory\n     */\n    constructor(_mutationObserverFactory) {\n        this._mutationObserverFactory = _mutationObserverFactory;\n        /**\n         * Keeps track of the existing MutationObservers so they can be reused.\n         */\n        this._observedElements = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._observedElements.forEach((/**\n         * @param {?} _\n         * @param {?} element\n         * @return {?}\n         */\n        (_, element) => this._cleanupObserver(element)));\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    observe(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const stream = this._observeElement(element);\n            /** @type {?} */\n            const subscription = stream.subscribe(observer);\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._unobserveElement(element);\n            });\n        }));\n    }\n    /**\n     * Observes the given element by using the existing MutationObserver if available, or creating a\n     * new one if not.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _observeElement(element) {\n        if (!this._observedElements.has(element)) {\n            /** @type {?} */\n            const stream = new Subject();\n            /** @type {?} */\n            const observer = this._mutationObserverFactory.create((/**\n             * @param {?} mutations\n             * @return {?}\n             */\n            mutations => stream.next(mutations)));\n            if (observer) {\n                observer.observe(element, {\n                    characterData: true,\n                    childList: true,\n                    subtree: true\n                });\n            }\n            this._observedElements.set(element, { observer, stream, count: 1 });\n        }\n        else {\n            (/** @type {?} */ (this._observedElements.get(element))).count++;\n        }\n        return (/** @type {?} */ (this._observedElements.get(element))).stream;\n    }\n    /**\n     * Un-observes the given element and cleans up the underlying MutationObserver if nobody else is\n     * observing this element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _unobserveElement(element) {\n        if (this._observedElements.has(element)) {\n            (/** @type {?} */ (this._observedElements.get(element))).count--;\n            if (!(/** @type {?} */ (this._observedElements.get(element))).count) {\n                this._cleanupObserver(element);\n            }\n        }\n    }\n    /**\n     * Clean up the underlying MutationObserver for the specified element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cleanupObserver(element) {\n        if (this._observedElements.has(element)) {\n            const { observer, stream } = (/** @type {?} */ (this._observedElements.get(element)));\n            if (observer) {\n                observer.disconnect();\n            }\n            stream.complete();\n            this._observedElements.delete(element);\n        }\n    }\n}\nContentObserver.ɵfac = function ContentObserver_Factory(t) { return new (t || ContentObserver)(ɵngcc0.ɵɵinject(MutationObserverFactory)); };\n/** @nocollapse */\nContentObserver.ctorParameters = () => [\n    { type: MutationObserverFactory }\n];\n/** @nocollapse */ ContentObserver.ɵprov = ɵɵdefineInjectable({ factory: function ContentObserver_Factory() { return new ContentObserver(ɵɵinject(MutationObserverFactory)); }, token: ContentObserver, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ContentObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MutationObserverFactory }]; }, null); })();\nif (false) {\n    /**\n     * Keeps track of the existing MutationObservers so they can be reused.\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._observedElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    ContentObserver.prototype._mutationObserverFactory;\n}\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\nclass CdkObserveContent {\n    /**\n     * @param {?} _contentObserver\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     */\n    constructor(_contentObserver, _elementRef, _ngZone) {\n        this._contentObserver = _contentObserver;\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        /**\n         * Event emitted for each change in the element's content.\n         */\n        this.event = new EventEmitter();\n        this._disabled = false;\n        this._currentSubscription = null;\n    }\n    /**\n     * Whether observing content is disabled. This option can be used\n     * to disconnect the underlying MutationObserver until it is needed.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._disabled ? this._unsubscribe() : this._subscribe();\n    }\n    /**\n     * Debounce interval for emitting the changes.\n     * @return {?}\n     */\n    get debounce() { return this._debounce; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set debounce(value) {\n        this._debounce = coerceNumberProperty(value);\n        this._subscribe();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        if (!this._currentSubscription && !this.disabled) {\n            this._subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._unsubscribe();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribe() {\n        this._unsubscribe();\n        /** @type {?} */\n        const stream = this._contentObserver.observe(this._elementRef);\n        // TODO(mmalerba): We shouldn't be emitting on this @Output() outside the zone.\n        // Consider brining it back inside the zone next time we're making breaking changes.\n        // Bringing it back inside can cause things like infinite change detection loops and changed\n        // after checked errors if people's code isn't handling it properly.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._currentSubscription =\n                (this.debounce ? stream.pipe(debounceTime(this.debounce)) : stream).subscribe(this.event);\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribe() {\n        if (this._currentSubscription) {\n            this._currentSubscription.unsubscribe();\n        }\n    }\n}\nCdkObserveContent.ɵfac = function CdkObserveContent_Factory(t) { return new (t || CdkObserveContent)(ɵngcc0.ɵɵdirectiveInject(ContentObserver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkObserveContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkObserveContent, selectors: [[\"\", \"cdkObserveContent\", \"\"]], inputs: { disabled: [\"cdkObserveContentDisabled\", \"disabled\"], debounce: \"debounce\" }, outputs: { event: \"cdkObserveContent\" }, exportAs: [\"cdkObserveContent\"] });\n/** @nocollapse */\nCdkObserveContent.ctorParameters = () => [\n    { type: ContentObserver },\n    { type: ElementRef },\n    { type: NgZone }\n];\nCdkObserveContent.propDecorators = {\n    event: [{ type: Output, args: ['cdkObserveContent',] }],\n    disabled: [{ type: Input, args: ['cdkObserveContentDisabled',] }],\n    debounce: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkObserveContent, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkObserveContent]',\n                exportAs: 'cdkObserveContent'\n            }]\n    }], function () { return [{ type: ContentObserver }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, { event: [{\n            type: Output,\n            args: ['cdkObserveContent']\n        }], disabled: [{\n            type: Input,\n            args: ['cdkObserveContentDisabled']\n        }], debounce: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_disabled;\n    /** @type {?} */\n    CdkObserveContent.ngAcceptInputType_debounce;\n    /**\n     * Event emitted for each change in the element's content.\n     * @type {?}\n     */\n    CdkObserveContent.prototype.event;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._debounce;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._currentSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._contentObserver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkObserveContent.prototype._ngZone;\n}\nclass ObserversModule {\n}\nObserversModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ObserversModule });\nObserversModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ObserversModule_Factory(t) { return new (t || ObserversModule)(); }, providers: [MutationObserverFactory] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ObserversModule, { declarations: [CdkObserveContent], exports: [CdkObserveContent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ObserversModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkObserveContent],\n                declarations: [CdkObserveContent],\n                providers: [MutationObserverFactory]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/observers/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkObserveContent, ContentObserver, MutationObserverFactory, ObserversModule };\n\n//# sourceMappingURL=observers.js.map","import { ScrollDispatcher, ViewportRuler, ScrollingModule } from '@angular/cdk/scrolling';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/common';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport { DOCUMENT, Location } from '@angular/common';\nimport { Injectable, NgZone, Inject, ɵɵdefineInjectable, ɵɵinject, Optional, SkipSelf, ElementRef, ApplicationRef, ComponentFactoryResolver, Injector, InjectionToken, Directive, EventEmitter, TemplateRef, ViewContainerRef, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Platform } from '@angular/cdk/platform';\nimport { Subject, Subscription, Observable, merge } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/block-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} document\n     */\n    constructor(_viewportRuler, document) {\n        this._viewportRuler = _viewportRuler;\n        this._previousHTMLStyles = { top: '', left: '' };\n        this._isEnabled = false;\n        this._document = document;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @return {?}\n     */\n    attach() { }\n    /**\n     * Blocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    enable() {\n        if (this._canBeEnabled()) {\n            /** @type {?} */\n            const root = (/** @type {?} */ (this._document.documentElement));\n            this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n            // Cache the previous inline styles in case the user had set them.\n            this._previousHTMLStyles.left = root.style.left || '';\n            this._previousHTMLStyles.top = root.style.top || '';\n            // Note: we're using the `html` node, instead of the `body`, because the `body` may\n            // have the user agent margin, whereas the `html` is guaranteed not to have one.\n            root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n            root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n            root.classList.add('cdk-global-scrollblock');\n            this._isEnabled = true;\n        }\n    }\n    /**\n     * Unblocks page-level scroll while the attached overlay is open.\n     * @return {?}\n     */\n    disable() {\n        if (this._isEnabled) {\n            /** @type {?} */\n            const html = (/** @type {?} */ (this._document.documentElement));\n            /** @type {?} */\n            const body = (/** @type {?} */ (this._document.body));\n            /** @type {?} */\n            const htmlStyle = (/** @type {?} */ (html.style));\n            /** @type {?} */\n            const bodyStyle = (/** @type {?} */ (body.style));\n            /** @type {?} */\n            const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n            /** @type {?} */\n            const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n            this._isEnabled = false;\n            htmlStyle.left = this._previousHTMLStyles.left;\n            htmlStyle.top = this._previousHTMLStyles.top;\n            html.classList.remove('cdk-global-scrollblock');\n            // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n            // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n            htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n            window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n            htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n            bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _canBeEnabled() {\n        // Since the scroll strategies can't be singletons, we have to use a global CSS class\n        // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n        // scrolling multiple times.\n        /** @type {?} */\n        const html = (/** @type {?} */ (this._document.documentElement));\n        if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n            return false;\n        }\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const viewport = this._viewportRuler.getViewportSize();\n        return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousHTMLStyles;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._previousScrollPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._isEnabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    BlockScrollStrategy.prototype._viewportRuler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes a strategy that will be used by an overlay to handle scroll events while it is open.\n * @record\n */\nfunction ScrollStrategy() { }\nif (false) {\n    /**\n     * Enable this scroll strategy (called when the attached overlay is attached to a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.enable;\n    /**\n     * Disable this scroll strategy (called when the attached overlay is detached from a portal).\n     * @type {?}\n     */\n    ScrollStrategy.prototype.disable;\n    /**\n     * Attaches this `ScrollStrategy` to an overlay.\n     * @type {?}\n     */\n    ScrollStrategy.prototype.attach;\n    /**\n     * Detaches the scroll strategy from the current overlay.\n     * @type {?|undefined}\n     */\n    ScrollStrategy.prototype.detach;\n}\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n * @return {?}\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n    return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/close-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the CloseScrollStrategy.\n * @record\n */\nfunction CloseScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Amount of pixels the user has to scroll before the overlay is closed.\n     * @type {?|undefined}\n     */\n    CloseScrollStrategyConfig.prototype.threshold;\n}\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _ngZone\n     * @param {?} _viewportRuler\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._config = _config;\n        this._scrollSubscription = null;\n        /**\n         * Detaches the overlay ref and disables the scroll strategy.\n         */\n        this._detach = (/**\n         * @return {?}\n         */\n        () => {\n            this.disable();\n            if (this._overlayRef.hasAttached()) {\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this._overlayRef.detach()));\n            }\n        });\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables the closing of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (this._scrollSubscription) {\n            return;\n        }\n        /** @type {?} */\n        const stream = this._scrollDispatcher.scrolled(0);\n        if (this._config && this._config.threshold && this._config.threshold > 1) {\n            this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n            this._scrollSubscription = stream.subscribe((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n                if (Math.abs(scrollPosition - this._initialScrollPosition) > (/** @type {?} */ ((/** @type {?} */ (this._config)).threshold))) {\n                    this._detach();\n                }\n                else {\n                    this._overlayRef.updatePosition();\n                }\n            }));\n        }\n        else {\n            this._scrollSubscription = stream.subscribe(this._detach);\n        }\n    }\n    /**\n     * Disables the closing the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._initialScrollPosition;\n    /**\n     * Detaches the overlay ref and disables the scroll strategy.\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._detach;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    CloseScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/noop-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Scroll strategy that doesn't do anything.\n */\nclass NoopScrollStrategy {\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    enable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    disable() { }\n    /**\n     * Does nothing, as this scroll strategy is a no-op.\n     * @return {?}\n     */\n    attach() { }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/scroll-clip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO(jelbourn): move this to live with the rest of the scrolling code\n// TODO(jelbourn): someday replace this with IntersectionObservers\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is scrolled out of view\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} containerBounds\n     * @return {?}\n     */\n    containerBounds => {\n        /** @type {?} */\n        const outsideAbove = element.bottom < containerBounds.top;\n        /** @type {?} */\n        const outsideBelow = element.top > containerBounds.bottom;\n        /** @type {?} */\n        const outsideLeft = element.right < containerBounds.left;\n        /** @type {?} */\n        const outsideRight = element.left > containerBounds.right;\n        return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n    }));\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * \\@docs-private\n * @param {?} element Dimensions of the element (from getBoundingClientRect)\n * @param {?} scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @return {?} Whether the element is clipped\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n    return scrollContainers.some((/**\n     * @param {?} scrollContainerRect\n     * @return {?}\n     */\n    scrollContainerRect => {\n        /** @type {?} */\n        const clippedAbove = element.top < scrollContainerRect.top;\n        /** @type {?} */\n        const clippedBelow = element.bottom > scrollContainerRect.bottom;\n        /** @type {?} */\n        const clippedLeft = element.left < scrollContainerRect.left;\n        /** @type {?} */\n        const clippedRight = element.right > scrollContainerRect.right;\n        return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/reposition-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config options for the RepositionScrollStrategy.\n * @record\n */\nfunction RepositionScrollStrategyConfig() { }\nif (false) {\n    /**\n     * Time in milliseconds to throttle the scroll events.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.scrollThrottle;\n    /**\n     * Whether to close the overlay once the user has scrolled away completely.\n     * @type {?|undefined}\n     */\n    RepositionScrollStrategyConfig.prototype.autoClose;\n}\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?=} _config\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        this._config = _config;\n        this._scrollSubscription = null;\n    }\n    /**\n     * Attaches this scroll strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef) {\n            throw getMatScrollStrategyAlreadyAttachedError();\n        }\n        this._overlayRef = overlayRef;\n    }\n    /**\n     * Enables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    enable() {\n        if (!this._scrollSubscription) {\n            /** @type {?} */\n            const throttle = this._config ? this._config.scrollThrottle : 0;\n            this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._overlayRef.updatePosition();\n                // TODO(crisbeto): make `close` on by default once all components can handle it.\n                if (this._config && this._config.autoClose) {\n                    /** @type {?} */\n                    const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n                    const { width, height } = this._viewportRuler.getViewportSize();\n                    // TODO(crisbeto): include all ancestor scroll containers here once\n                    // we have a way of exposing the trigger element to the scroll strategy.\n                    /** @type {?} */\n                    const parentRects = [{ width, height, bottom: height, right: width, top: 0, left: 0 }];\n                    if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n                        this.disable();\n                        this._ngZone.run((/**\n                         * @return {?}\n                         */\n                        () => this._overlayRef.detach()));\n                    }\n                }\n            }));\n        }\n    }\n    /**\n     * Disables repositioning of the attached overlay on scroll.\n     * @return {?}\n     */\n    disable() {\n        if (this._scrollSubscription) {\n            this._scrollSubscription.unsubscribe();\n            this._scrollSubscription = null;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.disable();\n        this._overlayRef = (/** @type {?} */ (null));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    RepositionScrollStrategy.prototype._config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/scroll-strategy-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nclass ScrollStrategyOptions {\n    /**\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewportRuler\n     * @param {?} _ngZone\n     * @param {?} document\n     */\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewportRuler = _viewportRuler;\n        this._ngZone = _ngZone;\n        /**\n         * Do nothing on scroll.\n         */\n        this.noop = (/**\n         * @return {?}\n         */\n        () => new NoopScrollStrategy());\n        /**\n         * Close the overlay as soon as the user scrolls.\n         * @param config Configuration to be used inside the scroll strategy.\n         */\n        this.close = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config));\n        /**\n         * Block scrolling.\n         */\n        this.block = (/**\n         * @return {?}\n         */\n        () => new BlockScrollStrategy(this._viewportRuler, this._document));\n        /**\n         * Update the overlay's position on scroll.\n         * @param config Configuration to be used inside the scroll strategy.\n         * Allows debouncing the reposition calls.\n         */\n        this.reposition = (/**\n         * @param {?=} config\n         * @return {?}\n         */\n        (config) => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config));\n        this._document = document;\n    }\n}\nScrollStrategyOptions.ɵfac = function ScrollStrategyOptions_Factory(t) { return new (t || ScrollStrategyOptions)(ɵngcc0.ɵɵinject(ɵngcc1.ScrollDispatcher), ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nScrollStrategyOptions.ctorParameters = () => [\n    { type: ScrollDispatcher },\n    { type: ViewportRuler },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollStrategyOptions.ɵprov = ɵɵdefineInjectable({ factory: function ScrollStrategyOptions_Factory() { return new ScrollStrategyOptions(ɵɵinject(ScrollDispatcher), ɵɵinject(ViewportRuler), ɵɵinject(NgZone), ɵɵinject(DOCUMENT)); }, token: ScrollStrategyOptions, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollStrategyOptions, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ScrollDispatcher }, { type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._document;\n    /**\n     * Do nothing on scroll.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.noop;\n    /**\n     * Close the overlay as soon as the user scrolls.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.close;\n    /**\n     * Block scrolling.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.block;\n    /**\n     * Update the overlay's position on scroll.\n     * \\@param config Configuration to be used inside the scroll strategy.\n     * Allows debouncing the reposition calls.\n     * @type {?}\n     */\n    ScrollStrategyOptions.prototype.reposition;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollStrategyOptions.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/scroll/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Initial configuration used when creating an overlay.\n */\nclass OverlayConfig {\n    /**\n     * @param {?=} config\n     */\n    constructor(config) {\n        /**\n         * Strategy to be used when handling scroll events while the overlay is open.\n         */\n        this.scrollStrategy = new NoopScrollStrategy();\n        /**\n         * Custom class to add to the overlay pane.\n         */\n        this.panelClass = '';\n        /**\n         * Whether the overlay has a backdrop.\n         */\n        this.hasBackdrop = false;\n        /**\n         * Custom class to add to the backdrop\n         */\n        this.backdropClass = 'cdk-overlay-dark-backdrop';\n        /**\n         * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n         * Note that this usually doesn't include clicking on links (unless the user is using\n         * the `HashLocationStrategy`).\n         */\n        this.disposeOnNavigation = false;\n        if (config) {\n            // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n            // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n            // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n            /** @type {?} */\n            const configKeys = (/** @type {?} */ (Object.keys(config)));\n            for (const key of configKeys) {\n                if (config[key] !== undefined) {\n                    // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n                    // as \"I don't know *which* key this is, so the only valid value is the intersection\n                    // of all the posible values.\" In this case, that happens to be `undefined`. TypeScript\n                    // is not smart enough to see that the right-hand-side is actually an access of the same\n                    // exact type with the same exact key, meaning that the value type must be identical.\n                    // So we use `any` to work around this.\n                    this[key] = (/** @type {?} */ (config[key]));\n                }\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * Strategy with which to position the overlay.\n     * @type {?}\n     */\n    OverlayConfig.prototype.positionStrategy;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    OverlayConfig.prototype.scrollStrategy;\n    /**\n     * Custom class to add to the overlay pane.\n     * @type {?}\n     */\n    OverlayConfig.prototype.panelClass;\n    /**\n     * Whether the overlay has a backdrop.\n     * @type {?}\n     */\n    OverlayConfig.prototype.hasBackdrop;\n    /**\n     * Custom class to add to the backdrop\n     * @type {?}\n     */\n    OverlayConfig.prototype.backdropClass;\n    /**\n     * The width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.width;\n    /**\n     * The height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.height;\n    /**\n     * The min-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minWidth;\n    /**\n     * The min-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.minHeight;\n    /**\n     * The max-width of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxWidth;\n    /**\n     * The max-height of the overlay panel. If a number is provided, pixel units are assumed.\n     * @type {?}\n     */\n    OverlayConfig.prototype.maxHeight;\n    /**\n     * Direction of the text in the overlay panel. If a `Directionality` instance\n     * is passed in, the overlay will handle changes to its value automatically.\n     * @type {?}\n     */\n    OverlayConfig.prototype.direction;\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     * @type {?}\n     */\n    OverlayConfig.prototype.disposeOnNavigation;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A connection point on the origin element.\n * @record\n */\nfunction OriginConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originX;\n    /** @type {?} */\n    OriginConnectionPosition.prototype.originY;\n}\n/**\n * A connection point on the overlay element.\n * @record\n */\nfunction OverlayConnectionPosition() { }\nif (false) {\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayX;\n    /** @type {?} */\n    OverlayConnectionPosition.prototype.overlayY;\n}\n/**\n * The points of the origin element and the overlay element to connect.\n */\nclass ConnectionPositionPair {\n    /**\n     * @param {?} origin\n     * @param {?} overlay\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @param {?=} panelClass\n     */\n    constructor(origin, overlay, offsetX, offsetY, panelClass) {\n        this.offsetX = offsetX;\n        this.offsetY = offsetY;\n        this.panelClass = panelClass;\n        this.originX = origin.originX;\n        this.originY = origin.originY;\n        this.overlayX = overlay.overlayX;\n        this.overlayY = overlay.overlayY;\n    }\n}\nif (false) {\n    /**\n     * X-axis attachment point for connected overlay origin. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originX;\n    /**\n     * Y-axis attachment point for connected overlay origin. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.originY;\n    /**\n     * X-axis attachment point for connected overlay. Can be 'start', 'end', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayX;\n    /**\n     * Y-axis attachment point for connected overlay. Can be 'top', 'bottom', or 'center'.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.overlayY;\n    /**\n     * Offset along the X axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetX;\n    /**\n     * Offset along the Y axis.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.offsetY;\n    /**\n     * Class(es) to be applied to the panel while this position is active.\n     * @type {?}\n     */\n    ConnectionPositionPair.prototype.panelClass;\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n * \\@docs-private\n */\nclass ScrollingVisibility {\n}\nif (false) {\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOriginOutsideView;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayClipped;\n    /** @type {?} */\n    ScrollingVisibility.prototype.isOverlayOutsideView;\n}\n/**\n * The change event emitted by the strategy when a fallback position is used.\n */\nclass ConnectedOverlayPositionChange {\n    /**\n     * @param {?} connectionPair\n     * @param {?} scrollableViewProperties\n     */\n    constructor(connectionPair, scrollableViewProperties) {\n        this.connectionPair = connectionPair;\n        this.scrollableViewProperties = scrollableViewProperties;\n    }\n}\n/** @nocollapse */\nConnectedOverlayPositionChange.ctorParameters = () => [\n    { type: ConnectionPositionPair },\n    { type: ScrollingVisibility, decorators: [{ type: Optional }] }\n];\nif (false) {\n    /**\n     * The position used as a result of this change.\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.connectionPair;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedOverlayPositionChange.prototype.scrollableViewProperties;\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateVerticalPosition(property, value) {\n    if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"top\", \"bottom\" or \"center\".`);\n    }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * \\@docs-private\n * @param {?} property Name of the property being validated.\n * @param {?} value Value of the property being validated.\n * @return {?}\n */\nfunction validateHorizontalPosition(property, value) {\n    if (value !== 'start' && value !== 'end' && value !== 'center') {\n        throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` +\n            `Expected \"start\", \"end\" or \"center\".`);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/keyboard/overlay-keyboard-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nclass OverlayKeyboardDispatcher {\n    /**\n     * @param {?} document\n     */\n    constructor(document) {\n        /**\n         * Currently attached overlays in the order they were attached.\n         */\n        this._attachedOverlays = [];\n        /**\n         * Keyboard event listener that will be attached to the body.\n         */\n        this._keydownListener = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            const overlays = this._attachedOverlays;\n            for (let i = overlays.length - 1; i > -1; i--) {\n                // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n                // We want to target the most recent overlay, rather than trying to match where the event came\n                // from, because some components might open an overlay, but keep focus on a trigger element\n                // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n                // because we don't want overlays that don't handle keyboard events to block the ones below\n                // them that do.\n                if (overlays[i]._keydownEventSubscriptions > 0) {\n                    overlays[i]._keydownEvents.next(event);\n                    break;\n                }\n            }\n        });\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._detach();\n    }\n    /**\n     * Add a new overlay to the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    add(overlayRef) {\n        // Ensure that we don't get the same overlay multiple times.\n        this.remove(overlayRef);\n        // Lazily start dispatcher once first overlay is added\n        if (!this._isAttached) {\n            this._document.body.addEventListener('keydown', this._keydownListener);\n            this._isAttached = true;\n        }\n        this._attachedOverlays.push(overlayRef);\n    }\n    /**\n     * Remove an overlay from the list of attached overlay refs.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    remove(overlayRef) {\n        /** @type {?} */\n        const index = this._attachedOverlays.indexOf(overlayRef);\n        if (index > -1) {\n            this._attachedOverlays.splice(index, 1);\n        }\n        // Remove the global listener once there are no more overlays.\n        if (this._attachedOverlays.length === 0) {\n            this._detach();\n        }\n    }\n    /**\n     * Detaches the global keyboard event listener.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._isAttached) {\n            this._document.body.removeEventListener('keydown', this._keydownListener);\n            this._isAttached = false;\n        }\n    }\n}\nOverlayKeyboardDispatcher.ɵfac = function OverlayKeyboardDispatcher_Factory(t) { return new (t || OverlayKeyboardDispatcher)(ɵngcc0.ɵɵinject(DOCUMENT)); };\n/** @nocollapse */\nOverlayKeyboardDispatcher.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ OverlayKeyboardDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function OverlayKeyboardDispatcher_Factory() { return new OverlayKeyboardDispatcher(ɵɵinject(DOCUMENT)); }, token: OverlayKeyboardDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayKeyboardDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Currently attached overlays in the order they were attached.\n     * @type {?}\n     */\n    OverlayKeyboardDispatcher.prototype._attachedOverlays;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._isAttached;\n    /**\n     * Keyboard event listener that will be attached to the body.\n     * @type {?}\n     * @private\n     */\n    OverlayKeyboardDispatcher.prototype._keydownListener;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} dispatcher\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY(dispatcher, _document) {\n    return dispatcher || new OverlayKeyboardDispatcher(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_KEYBOARD_DISPATCHER_PROVIDER = {\n    // If there is already an OverlayKeyboardDispatcher available, use that.\n    // Otherwise, provide a new one.\n    provide: OverlayKeyboardDispatcher,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayKeyboardDispatcher],\n        (/** @type {?} */ (\n        // Coerce to `InjectionToken` so that the `deps` match the \"shape\"\n        // of the type expected by Angular\n        DOCUMENT))\n    ],\n    useFactory: OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Whether we're in a testing environment.\n * TODO(crisbeto): remove this once we have an overlay testing module.\n * @type {?}\n */\nconst isTestEnvironment = typeof window !== 'undefined' && !!window &&\n    !!(((/** @type {?} */ (window))).__karma__ || ((/** @type {?} */ (window))).jasmine);\n/**\n * Container inside which all overlays will render.\n */\nclass OverlayContainer {\n    /**\n     * @param {?} document\n     * @param {?=} _platform\n     */\n    constructor(document, _platform) {\n        this._platform = _platform;\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const container = this._containerElement;\n        if (container && container.parentNode) {\n            container.parentNode.removeChild(container);\n        }\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time  it is called to facilitate using\n     * the container in non-browser environments.\n     * @return {?} the container element\n     */\n    getContainerElement() {\n        if (!this._containerElement) {\n            this._createContainer();\n        }\n        return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        // @breaking-change 10.0.0 Remove null check for `_platform`.\n        /** @type {?} */\n        const isBrowser = this._platform ? this._platform.isBrowser : typeof window !== 'undefined';\n        /** @type {?} */\n        const containerClass = 'cdk-overlay-container';\n        if (isBrowser || isTestEnvironment) {\n            /** @type {?} */\n            const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` +\n                `.${containerClass}[platform=\"test\"]`);\n            // Remove any old containers from the opposite platform.\n            // This can happen when transitioning from the server to the client.\n            for (let i = 0; i < oppositePlatformContainers.length; i++) {\n                (/** @type {?} */ (oppositePlatformContainers[i].parentNode)).removeChild(oppositePlatformContainers[i]);\n            }\n        }\n        /** @type {?} */\n        const container = this._document.createElement('div');\n        container.classList.add(containerClass);\n        // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n        // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n        // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n        // To mitigate the problem we made it so that only containers from a different platform are\n        // cleared, but the side-effect was that people started depending on the overly-aggressive\n        // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n        // module which does the cleanup, we try to detect that we're in a test environment and we\n        // always clear the container. See #17006.\n        // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n        if (isTestEnvironment) {\n            container.setAttribute('platform', 'test');\n        }\n        else if (!isBrowser) {\n            container.setAttribute('platform', 'server');\n        }\n        this._document.body.appendChild(container);\n        this._containerElement = container;\n    }\n}\nOverlayContainer.ɵfac = function OverlayContainer_Factory(t) { return new (t || OverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ OverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function OverlayContainer_Factory() { return new OverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: OverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._containerElement;\n    /**\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._document;\n    /**\n     * @deprecated `platform` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @protected\n     */\n    OverlayContainer.prototype._platform;\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} parentContainer\n * @param {?} _document\n * @return {?}\n */\nfunction OVERLAY_CONTAINER_PROVIDER_FACTORY(parentContainer, _document) {\n    return parentContainer || new OverlayContainer(_document);\n}\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @type {?}\n */\nconst OVERLAY_CONTAINER_PROVIDER = {\n    // If there is already an OverlayContainer available, use that. Otherwise, provide a new one.\n    provide: OverlayContainer,\n    deps: [\n        [new Optional(), new SkipSelf(), OverlayContainer],\n        (/** @type {?} */ (DOCUMENT))\n    ],\n    useFactory: OVERLAY_CONTAINER_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n    /**\n     * @param {?} _portalOutlet\n     * @param {?} _host\n     * @param {?} _pane\n     * @param {?} _config\n     * @param {?} _ngZone\n     * @param {?} _keyboardDispatcher\n     * @param {?} _document\n     * @param {?=} _location\n     */\n    constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location) {\n        this._portalOutlet = _portalOutlet;\n        this._host = _host;\n        this._pane = _pane;\n        this._config = _config;\n        this._ngZone = _ngZone;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._document = _document;\n        this._location = _location;\n        this._backdropElement = null;\n        this._backdropClick = new Subject();\n        this._attachments = new Subject();\n        this._detachments = new Subject();\n        this._locationChanges = Subscription.EMPTY;\n        this._backdropClickHandler = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => this._backdropClick.next(event));\n        this._keydownEventsObservable = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            /** @type {?} */\n            const subscription = this._keydownEvents.subscribe(observer);\n            this._keydownEventSubscriptions++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._keydownEventSubscriptions--;\n            });\n        }));\n        /**\n         * Stream of keydown events dispatched to this overlay.\n         */\n        this._keydownEvents = new Subject();\n        /**\n         * Amount of subscriptions to the keydown events.\n         */\n        this._keydownEventSubscriptions = 0;\n        if (_config.scrollStrategy) {\n            this._scrollStrategy = _config.scrollStrategy;\n            this._scrollStrategy.attach(this);\n        }\n        this._positionStrategy = _config.positionStrategy;\n    }\n    /**\n     * The overlay's HTML element\n     * @return {?}\n     */\n    get overlayElement() {\n        return this._pane;\n    }\n    /**\n     * The overlay's backdrop HTML element.\n     * @return {?}\n     */\n    get backdropElement() {\n        return this._backdropElement;\n    }\n    /**\n     * Wrapper around the panel element. Can be used for advanced\n     * positioning where a wrapper with specific styling is\n     * required around the overlay pane.\n     * @return {?}\n     */\n    get hostElement() {\n        return this._host;\n    }\n    /**\n     * Attaches content, given via a Portal, to the overlay.\n     * If the overlay is configured to have a backdrop, it will be created.\n     *\n     * @param {?} portal Portal instance to which to attach the overlay.\n     * @return {?} The portal attachment result.\n     */\n    attach(portal) {\n        /** @type {?} */\n        let attachResult = this._portalOutlet.attach(portal);\n        // Update the pane element with the given configuration.\n        if (!this._host.parentElement && this._previousHostParent) {\n            this._previousHostParent.appendChild(this._host);\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.attach(this);\n        }\n        this._updateStackingOrder();\n        this._updateElementSize();\n        this._updateElementDirection();\n        if (this._scrollStrategy) {\n            this._scrollStrategy.enable();\n        }\n        // Update the position once the zone is stable so that the overlay will be fully rendered\n        // before attempting to position it, as the position may depend on the size of the rendered\n        // content.\n        this._ngZone.onStable\n            .asObservable()\n            .pipe(take(1))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // The overlay could've been detached before the zone has stabilized.\n            if (this.hasAttached()) {\n                this.updatePosition();\n            }\n        }));\n        // Enable pointer events for the overlay pane element.\n        this._togglePointerEvents(true);\n        if (this._config.hasBackdrop) {\n            this._attachBackdrop();\n        }\n        if (this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, true);\n        }\n        // Only emit the `attachments` event once all other setup is done.\n        this._attachments.next();\n        // Track this overlay by the keyboard dispatcher\n        this._keyboardDispatcher.add(this);\n        // @breaking-change 8.0.0 remove the null check for `_location`\n        // once the constructor parameter is made required.\n        if (this._config.disposeOnNavigation && this._location) {\n            this._locationChanges = this._location.subscribe((/**\n             * @return {?}\n             */\n            () => this.dispose()));\n        }\n        return attachResult;\n    }\n    /**\n     * Detaches an overlay from a portal.\n     * @return {?} The portal detachment result.\n     */\n    detach() {\n        if (!this.hasAttached()) {\n            return;\n        }\n        this.detachBackdrop();\n        // When the overlay is detached, the pane element should disable pointer events.\n        // This is necessary because otherwise the pane element will cover the page and disable\n        // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n        this._togglePointerEvents(false);\n        if (this._positionStrategy && this._positionStrategy.detach) {\n            this._positionStrategy.detach();\n        }\n        if (this._scrollStrategy) {\n            this._scrollStrategy.disable();\n        }\n        /** @type {?} */\n        const detachmentResult = this._portalOutlet.detach();\n        // Only emit after everything is detached.\n        this._detachments.next();\n        // Remove this overlay from keyboard dispatcher tracking.\n        this._keyboardDispatcher.remove(this);\n        // Keeping the host element in the DOM can cause scroll jank, because it still gets\n        // rendered, even though it's transparent and unclickable which is why we remove it.\n        this._detachContentWhenStable();\n        // Stop listening for location changes.\n        this._locationChanges.unsubscribe();\n        return detachmentResult;\n    }\n    /**\n     * Cleans up the overlay from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        /** @type {?} */\n        const isAttached = this.hasAttached();\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._disposeScrollStrategy();\n        this.detachBackdrop();\n        this._locationChanges.unsubscribe();\n        this._keyboardDispatcher.remove(this);\n        this._portalOutlet.dispose();\n        this._attachments.complete();\n        this._backdropClick.complete();\n        this._keydownEvents.complete();\n        if (this._host && this._host.parentNode) {\n            this._host.parentNode.removeChild(this._host);\n            this._host = (/** @type {?} */ (null));\n        }\n        this._previousHostParent = this._pane = (/** @type {?} */ (null));\n        if (isAttached) {\n            this._detachments.next();\n        }\n        this._detachments.complete();\n    }\n    /**\n     * Whether the overlay has attached content.\n     * @return {?}\n     */\n    hasAttached() {\n        return this._portalOutlet.hasAttached();\n    }\n    /**\n     * Gets an observable that emits when the backdrop has been clicked.\n     * @return {?}\n     */\n    backdropClick() {\n        return this._backdropClick.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been attached.\n     * @return {?}\n     */\n    attachments() {\n        return this._attachments.asObservable();\n    }\n    /**\n     * Gets an observable that emits when the overlay has been detached.\n     * @return {?}\n     */\n    detachments() {\n        return this._detachments.asObservable();\n    }\n    /**\n     * Gets an observable of keydown events targeted to this overlay.\n     * @return {?}\n     */\n    keydownEvents() {\n        return this._keydownEventsObservable;\n    }\n    /**\n     * Gets the current overlay configuration, which is immutable.\n     * @return {?}\n     */\n    getConfig() {\n        return this._config;\n    }\n    /**\n     * Updates the position of the overlay based on the position strategy.\n     * @return {?}\n     */\n    updatePosition() {\n        if (this._positionStrategy) {\n            this._positionStrategy.apply();\n        }\n    }\n    /**\n     * Switches to a new position strategy and updates the overlay position.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updatePositionStrategy(strategy) {\n        if (strategy === this._positionStrategy) {\n            return;\n        }\n        if (this._positionStrategy) {\n            this._positionStrategy.dispose();\n        }\n        this._positionStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            this.updatePosition();\n        }\n    }\n    /**\n     * Update the size properties of the overlay.\n     * @param {?} sizeConfig\n     * @return {?}\n     */\n    updateSize(sizeConfig) {\n        this._config = Object.assign(Object.assign({}, this._config), sizeConfig);\n        this._updateElementSize();\n    }\n    /**\n     * Sets the LTR/RTL direction for the overlay.\n     * @param {?} dir\n     * @return {?}\n     */\n    setDirection(dir) {\n        this._config = Object.assign(Object.assign({}, this._config), { direction: dir });\n        this._updateElementDirection();\n    }\n    /**\n     * Add a CSS class or an array of classes to the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    addPanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, true);\n        }\n    }\n    /**\n     * Remove a CSS class or an array of classes from the overlay pane.\n     * @param {?} classes\n     * @return {?}\n     */\n    removePanelClass(classes) {\n        if (this._pane) {\n            this._toggleClasses(this._pane, classes, false);\n        }\n    }\n    /**\n     * Returns the layout direction of the overlay panel.\n     * @return {?}\n     */\n    getDirection() {\n        /** @type {?} */\n        const direction = this._config.direction;\n        if (!direction) {\n            return 'ltr';\n        }\n        return typeof direction === 'string' ? direction : direction.value;\n    }\n    /**\n     * Switches to a new scroll strategy.\n     * @param {?} strategy\n     * @return {?}\n     */\n    updateScrollStrategy(strategy) {\n        if (strategy === this._scrollStrategy) {\n            return;\n        }\n        this._disposeScrollStrategy();\n        this._scrollStrategy = strategy;\n        if (this.hasAttached()) {\n            strategy.attach(this);\n            strategy.enable();\n        }\n    }\n    /**\n     * Updates the text direction of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _updateElementDirection() {\n        this._host.setAttribute('dir', this.getDirection());\n    }\n    /**\n     * Updates the size of the overlay element based on the overlay config.\n     * @private\n     * @return {?}\n     */\n    _updateElementSize() {\n        if (!this._pane) {\n            return;\n        }\n        /** @type {?} */\n        const style = this._pane.style;\n        style.width = coerceCssPixelValue(this._config.width);\n        style.height = coerceCssPixelValue(this._config.height);\n        style.minWidth = coerceCssPixelValue(this._config.minWidth);\n        style.minHeight = coerceCssPixelValue(this._config.minHeight);\n        style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n        style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n    }\n    /**\n     * Toggles the pointer events for the overlay pane element.\n     * @private\n     * @param {?} enablePointer\n     * @return {?}\n     */\n    _togglePointerEvents(enablePointer) {\n        this._pane.style.pointerEvents = enablePointer ? 'auto' : 'none';\n    }\n    /**\n     * Attaches a backdrop for this overlay.\n     * @private\n     * @return {?}\n     */\n    _attachBackdrop() {\n        /** @type {?} */\n        const showingClass = 'cdk-overlay-backdrop-showing';\n        this._backdropElement = this._document.createElement('div');\n        this._backdropElement.classList.add('cdk-overlay-backdrop');\n        if (this._config.backdropClass) {\n            this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n        }\n        // Insert the backdrop before the pane in the DOM order,\n        // in order to handle stacked overlays properly.\n        (/** @type {?} */ (this._host.parentElement)).insertBefore(this._backdropElement, this._host);\n        // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n        // action desired when such a click occurs (usually closing the overlay).\n        this._backdropElement.addEventListener('click', this._backdropClickHandler);\n        // Add class to fade-in the backdrop after one frame.\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => {\n                    if (this._backdropElement) {\n                        this._backdropElement.classList.add(showingClass);\n                    }\n                }));\n            }));\n        }\n        else {\n            this._backdropElement.classList.add(showingClass);\n        }\n    }\n    /**\n     * Updates the stacking order of the element, moving it to the top if necessary.\n     * This is required in cases where one overlay was detached, while another one,\n     * that should be behind it, was destroyed. The next time both of them are opened,\n     * the stacking will be wrong, because the detached element's pane will still be\n     * in its original DOM position.\n     * @private\n     * @return {?}\n     */\n    _updateStackingOrder() {\n        if (this._host.nextSibling) {\n            (/** @type {?} */ (this._host.parentNode)).appendChild(this._host);\n        }\n    }\n    /**\n     * Detaches the backdrop (if any) associated with the overlay.\n     * @return {?}\n     */\n    detachBackdrop() {\n        /** @type {?} */\n        let backdropToDetach = this._backdropElement;\n        if (!backdropToDetach) {\n            return;\n        }\n        /** @type {?} */\n        let timeoutId;\n        /** @type {?} */\n        let finishDetach = (/**\n         * @return {?}\n         */\n        () => {\n            // It may not be attached to anything in certain cases (e.g. unit tests).\n            if (backdropToDetach) {\n                backdropToDetach.removeEventListener('click', this._backdropClickHandler);\n                backdropToDetach.removeEventListener('transitionend', finishDetach);\n                if (backdropToDetach.parentNode) {\n                    backdropToDetach.parentNode.removeChild(backdropToDetach);\n                }\n            }\n            // It is possible that a new portal has been attached to this overlay since we started\n            // removing the backdrop. If that is the case, only clear the backdrop reference if it\n            // is still the same instance that we started to remove.\n            if (this._backdropElement == backdropToDetach) {\n                this._backdropElement = null;\n            }\n            if (this._config.backdropClass) {\n                this._toggleClasses((/** @type {?} */ (backdropToDetach)), this._config.backdropClass, false);\n            }\n            clearTimeout(timeoutId);\n        });\n        backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            (/** @type {?} */ (backdropToDetach)).addEventListener('transitionend', finishDetach);\n        }));\n        // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n        // In this case we make it unclickable and we try to remove it after a delay.\n        backdropToDetach.style.pointerEvents = 'none';\n        // Run this outside the Angular zone because there's nothing that Angular cares about.\n        // If it were to run inside the Angular zone, every test that used Overlay would have to be\n        // either async or fakeAsync.\n        timeoutId = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(finishDetach, 500)));\n    }\n    /**\n     * Toggles a single CSS class or an array of classes on an element.\n     * @private\n     * @param {?} element\n     * @param {?} cssClasses\n     * @param {?} isAdd\n     * @return {?}\n     */\n    _toggleClasses(element, cssClasses, isAdd) {\n        /** @type {?} */\n        const classList = element.classList;\n        coerceArray(cssClasses).forEach((/**\n         * @param {?} cssClass\n         * @return {?}\n         */\n        cssClass => {\n            // We can't do a spread here, because IE doesn't support setting multiple classes.\n            // Also trying to add an empty string to a DOMTokenList will throw.\n            if (cssClass) {\n                isAdd ? classList.add(cssClass) : classList.remove(cssClass);\n            }\n        }));\n    }\n    /**\n     * Detaches the overlay content next time the zone stabilizes.\n     * @private\n     * @return {?}\n     */\n    _detachContentWhenStable() {\n        // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n        // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n        // be patched to run inside the zone, which will throw us into an infinite loop.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            // We can't remove the host here immediately, because the overlay pane's content\n            // might still be animating. This stream helps us avoid interrupting the animation\n            // by waiting for the pane to become empty.\n            /** @type {?} */\n            const subscription = this._ngZone.onStable\n                .asObservable()\n                .pipe(takeUntil(merge(this._attachments, this._detachments)))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                // Needs a couple of checks for the pane and host, because\n                // they may have been removed by the time the zone stabilizes.\n                if (!this._pane || !this._host || this._pane.children.length === 0) {\n                    if (this._pane && this._config.panelClass) {\n                        this._toggleClasses(this._pane, this._config.panelClass, false);\n                    }\n                    if (this._host && this._host.parentElement) {\n                        this._previousHostParent = this._host.parentElement;\n                        this._previousHostParent.removeChild(this._host);\n                    }\n                    subscription.unsubscribe();\n                }\n            }));\n        }));\n    }\n    /**\n     * Disposes of a scroll strategy.\n     * @private\n     * @return {?}\n     */\n    _disposeScrollStrategy() {\n        /** @type {?} */\n        const scrollStrategy = this._scrollStrategy;\n        if (scrollStrategy) {\n            scrollStrategy.disable();\n            if (scrollStrategy.detach) {\n                scrollStrategy.detach();\n            }\n        }\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClick;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._attachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._detachments;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._positionStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._scrollStrategy;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._locationChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._backdropClickHandler;\n    /**\n     * Reference to the parent of the `_host` at the time it was detached. Used to restore\n     * the `_host` to its original position in the DOM when it gets re-attached.\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._previousHostParent;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keydownEventsObservable;\n    /**\n     * Stream of keydown events dispatched to this overlay.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEvents;\n    /**\n     * Amount of subscriptions to the keydown events.\n     * @type {?}\n     */\n    OverlayRef.prototype._keydownEventSubscriptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._portalOutlet;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._host;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._pane;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._config;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayRef.prototype._location;\n}\n/**\n * Size properties for an overlay.\n * @record\n */\nfunction OverlaySizeConfig() { }\nif (false) {\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.width;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.height;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.minHeight;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxWidth;\n    /** @type {?|undefined} */\n    OverlaySizeConfig.prototype.maxHeight;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/flexible-connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/**\n * Class to be added to the overlay bounding box.\n * @type {?}\n */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/**\n * Regex used to split a string on its CSS units.\n * @type {?}\n */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n    /**\n     * @param {?} connectedTo\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n        /**\n         * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n         */\n        this._lastBoundingBoxSize = { width: 0, height: 0 };\n        /**\n         * Whether the overlay was pushed in a previous positioning.\n         */\n        this._isPushed = false;\n        /**\n         * Whether the overlay can be pushed on-screen on the initial open.\n         */\n        this._canPush = true;\n        /**\n         * Whether the overlay can grow via flexible width/height after the initial open.\n         */\n        this._growAfterOpen = false;\n        /**\n         * Whether the overlay's width and height can be constrained to fit within the viewport.\n         */\n        this._hasFlexibleDimensions = true;\n        /**\n         * Whether the overlay position is locked.\n         */\n        this._positionLocked = false;\n        /**\n         * Amount of space that must be maintained between the overlay and the edge of the viewport.\n         */\n        this._viewportMargin = 0;\n        /**\n         * The Scrollable containers used to check scrollable view properties on position change.\n         */\n        this._scrollables = [];\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        /**\n         * Subject that emits whenever the position changes.\n         */\n        this._positionChanges = new Subject();\n        /**\n         * Subscription to viewport size changes.\n         */\n        this._resizeSubscription = Subscription.EMPTY;\n        /**\n         * Default offset for the overlay along the x axis.\n         */\n        this._offsetX = 0;\n        /**\n         * Default offset for the overlay along the y axis.\n         */\n        this._offsetY = 0;\n        /**\n         * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n         */\n        this._appliedPanelClasses = [];\n        /**\n         * Observable sequence of position changes.\n         */\n        this.positionChanges = this._positionChanges.asObservable();\n        this.setOrigin(connectedTo);\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attaches this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        if (this._overlayRef && overlayRef !== this._overlayRef) {\n            throw Error('This position strategy is already attached to an overlay');\n        }\n        this._validatePositions();\n        overlayRef.hostElement.classList.add(boundingBoxClass);\n        this._overlayRef = overlayRef;\n        this._boundingBox = overlayRef.hostElement;\n        this._pane = overlayRef.overlayElement;\n        this._isDisposed = false;\n        this._isInitialRender = true;\n        this._lastPosition = null;\n        this._resizeSubscription.unsubscribe();\n        this._resizeSubscription = this._viewportRuler.change().subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // When the window is resized, we want to trigger the next reposition as if it\n            // was an initial render, in order for the strategy to pick a new optimal position,\n            // otherwise position locking will cause it to stay at the old one.\n            this._isInitialRender = true;\n            this.apply();\n        }));\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin best fits on-screen.\n     *\n     * The selection of a position goes as follows:\n     *  - If any positions fit completely within the viewport as-is,\n     *      choose the first position that does so.\n     *  - If flexible dimensions are enabled and at least one satifies the given minimum width/height,\n     *      choose the position with the greatest available size modified by the positions' weight.\n     *  - If pushing is enabled, take the position that went off-screen the least and push it\n     *      on-screen.\n     *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // We shouldn't do anything if the strategy was disposed or we're on the server.\n        if (this._isDisposed || !this._platform.isBrowser) {\n            return;\n        }\n        // If the position has been applied already (e.g. when the overlay was opened) and the\n        // consumer opted into locking in the position, re-use the old position, in order to\n        // prevent the overlay from jumping around.\n        if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n            this.reapplyLastPosition();\n            return;\n        }\n        this._clearPanelClasses();\n        this._resetOverlayElementStyles();\n        this._resetBoundingBoxStyles();\n        // We need the bounding rects for the origin and the overlay to determine how to position\n        // the overlay relative to the origin.\n        // We use the viewport rect to determine whether a position would go off-screen.\n        this._viewportRect = this._getNarrowedViewportRect();\n        this._originRect = this._getOriginRect();\n        this._overlayRect = this._pane.getBoundingClientRect();\n        /** @type {?} */\n        const originRect = this._originRect;\n        /** @type {?} */\n        const overlayRect = this._overlayRect;\n        /** @type {?} */\n        const viewportRect = this._viewportRect;\n        // Positions where the overlay will fit with flexible dimensions.\n        /** @type {?} */\n        const flexibleFits = [];\n        // Fallback if none of the preferred positions fit within the viewport.\n        /** @type {?} */\n        let fallback;\n        // Go through each of the preferred positions looking for a good fit.\n        // If a good fit is found, it will be applied immediately.\n        for (let pos of this._preferredPositions) {\n            // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n            /** @type {?} */\n            let originPoint = this._getOriginPoint(originRect, pos);\n            // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n            // overlay in this position. We use the top-left corner for calculations and later translate\n            // this into an appropriate (top, left, bottom, right) style.\n            /** @type {?} */\n            let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n            // Calculate how well the overlay would fit into the viewport with this point.\n            /** @type {?} */\n            let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n            // If the overlay, without any further work, fits into the viewport, use this position.\n            if (overlayFit.isCompletelyWithinViewport) {\n                this._isPushed = false;\n                this._applyPosition(pos, originPoint);\n                return;\n            }\n            // If the overlay has flexible dimensions, we can use this position\n            // so long as there's enough space for the minimum dimensions.\n            if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n                // Save positions where the overlay will fit with flexible dimensions. We will use these\n                // if none of the positions fit *without* flexible dimensions.\n                flexibleFits.push({\n                    position: pos,\n                    origin: originPoint,\n                    overlayRect,\n                    boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n                });\n                continue;\n            }\n            // If the current preferred position does not fit on the screen, remember the position\n            // if it has more visible area on-screen than we've seen and move onto the next preferred\n            // position.\n            if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n                fallback = { overlayFit, overlayPoint, originPoint, position: pos, overlayRect };\n            }\n        }\n        // If there are any positions where the overlay would fit with flexible dimensions, choose the\n        // one that has the greatest area available modified by the position's weight\n        if (flexibleFits.length) {\n            /** @type {?} */\n            let bestFit = null;\n            /** @type {?} */\n            let bestScore = -1;\n            for (const fit of flexibleFits) {\n                /** @type {?} */\n                const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestFit = fit;\n                }\n            }\n            this._isPushed = false;\n            this._applyPosition((/** @type {?} */ (bestFit)).position, (/** @type {?} */ (bestFit)).origin);\n            return;\n        }\n        // When none of the preferred positions fit within the viewport, take the position\n        // that went off-screen the least and attempt to push it on-screen.\n        if (this._canPush) {\n            // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n            this._isPushed = true;\n            this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n            return;\n        }\n        // All options for getting the overlay within the viewport have been exhausted, so go with the\n        // position that went off-screen the least.\n        this._applyPosition((/** @type {?} */ (fallback)).position, (/** @type {?} */ (fallback)).originPoint);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this._clearPanelClasses();\n        this._lastPosition = null;\n        this._previousPushAmount = null;\n        this._resizeSubscription.unsubscribe();\n    }\n    /**\n     * Cleanup after the element gets destroyed.\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        // We can't use `_resetBoundingBoxStyles` here, because it resets\n        // some properties to zero, rather than removing them.\n        if (this._boundingBox) {\n            extendStyles(this._boundingBox.style, (/** @type {?} */ ({\n                top: '',\n                left: '',\n                right: '',\n                bottom: '',\n                height: '',\n                width: '',\n                alignItems: '',\n                justifyContent: '',\n            })));\n        }\n        if (this._pane) {\n            this._resetOverlayElementStyles();\n        }\n        if (this._overlayRef) {\n            this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n        }\n        this.detach();\n        this._positionChanges.complete();\n        this._overlayRef = this._boundingBox = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n    /**\n     * This re-aligns the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    reapplyLastPosition() {\n        if (!this._isDisposed && (!this._platform || this._platform.isBrowser)) {\n            this._originRect = this._getOriginRect();\n            this._overlayRect = this._pane.getBoundingClientRect();\n            this._viewportRect = this._getNarrowedViewportRect();\n            /** @type {?} */\n            const lastPosition = this._lastPosition || this._preferredPositions[0];\n            /** @type {?} */\n            const originPoint = this._getOriginPoint(this._originRect, lastPosition);\n            this._applyPosition(lastPosition, originPoint);\n        }\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} scrollables\n     * @return {THIS}\n     */\n    withScrollableContainers(scrollables) {\n        (/** @type {?} */ (this))._scrollables = scrollables;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Adds new preferred positions.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions List of positions options for this overlay.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions;\n        // If the last calculated position object isn't part of the positions anymore, clear\n        // it in order to avoid it being picked up if the consumer tries to re-apply.\n        if (positions.indexOf((/** @type {?} */ ((/** @type {?} */ (this))._lastPosition))) === -1) {\n            (/** @type {?} */ (this))._lastPosition = null;\n        }\n        (/** @type {?} */ (this))._validatePositions();\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} margin Required margin between the overlay and the viewport edge in pixels.\n     * @return {THIS}\n     */\n    withViewportMargin(margin) {\n        (/** @type {?} */ (this))._viewportMargin = margin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's width and height can be constrained to fit within the viewport.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} flexibleDimensions\n     * @return {THIS}\n     */\n    withFlexibleDimensions(flexibleDimensions = true) {\n        (/** @type {?} */ (this))._hasFlexibleDimensions = flexibleDimensions;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can grow after the initial open via flexible width/height.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} growAfterOpen\n     * @return {THIS}\n     */\n    withGrowAfterOpen(growAfterOpen = true) {\n        (/** @type {?} */ (this))._growAfterOpen = growAfterOpen;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} canPush\n     * @return {THIS}\n     */\n    withPush(canPush = true) {\n        (/** @type {?} */ (this))._canPush = canPush;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked = true) {\n        (/** @type {?} */ (this))._positionLocked = isLocked;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin, relative to which to position the overlay.\n     * Using an element origin is useful for building components that need to be positioned\n     * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n     * used for cases like contextual menus which open relative to the user's pointer.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._origin = origin;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the x-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetX(offset) {\n        (/** @type {?} */ (this))._offsetX = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the default offset for the overlay's connection point on the y-axis.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withDefaultOffsetY(offset) {\n        (/** @type {?} */ (this))._offsetY = offset;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Configures that the position strategy should set a `transform-origin` on some elements\n     * inside the overlay, depending on the current position that is being applied. This is\n     * useful for the cases where the origin of an animation can change depending on the\n     * alignment of the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} selector CSS selector that will be used to find the target\n     *    elements onto which to set the transform origin.\n     * @return {THIS}\n     */\n    withTransformOriginOn(selector) {\n        (/** @type {?} */ (this))._transformOriginSelector = selector;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n     * @private\n     * @param {?} originRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOriginPoint(originRect, pos) {\n        /** @type {?} */\n        let x;\n        if (pos.originX == 'center') {\n            // Note: when centering we should always use the `left`\n            // offset, otherwise the position will be wrong in RTL.\n            x = originRect.left + (originRect.width / 2);\n        }\n        else {\n            /** @type {?} */\n            const startX = this._isRtl() ? originRect.right : originRect.left;\n            /** @type {?} */\n            const endX = this._isRtl() ? originRect.left : originRect.right;\n            x = pos.originX == 'start' ? startX : endX;\n        }\n        /** @type {?} */\n        let y;\n        if (pos.originY == 'center') {\n            y = originRect.top + (originRect.height / 2);\n        }\n        else {\n            y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n        }\n        return { x, y };\n    }\n    /**\n     * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n     * origin point to which the overlay should be connected.\n     * @private\n     * @param {?} originPoint\n     * @param {?} overlayRect\n     * @param {?} pos\n     * @return {?}\n     */\n    _getOverlayPoint(originPoint, overlayRect, pos) {\n        // Calculate the (overlayStartX, overlayStartY), the start of the\n        // potential overlay position relative to the origin point.\n        /** @type {?} */\n        let overlayStartX;\n        if (pos.overlayX == 'center') {\n            overlayStartX = -overlayRect.width / 2;\n        }\n        else if (pos.overlayX === 'start') {\n            overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n        }\n        else {\n            overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n        }\n        /** @type {?} */\n        let overlayStartY;\n        if (pos.overlayY == 'center') {\n            overlayStartY = -overlayRect.height / 2;\n        }\n        else {\n            overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n        }\n        // The (x, y) coordinates of the overlay.\n        return {\n            x: originPoint.x + overlayStartX,\n            y: originPoint.y + overlayStartY,\n        };\n    }\n    /**\n     * Gets how well an overlay at the given point will fit within the viewport.\n     * @private\n     * @param {?} point\n     * @param {?} overlay\n     * @param {?} viewport\n     * @param {?} position\n     * @return {?}\n     */\n    _getOverlayFit(point, overlay, viewport, position) {\n        let { x, y } = point;\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        // Account for the offsets since they could push the overlay out of the viewport.\n        if (offsetX) {\n            x += offsetX;\n        }\n        if (offsetY) {\n            y += offsetY;\n        }\n        // How much the overlay would overflow at this position, on each side.\n        /** @type {?} */\n        let leftOverflow = 0 - x;\n        /** @type {?} */\n        let rightOverflow = (x + overlay.width) - viewport.width;\n        /** @type {?} */\n        let topOverflow = 0 - y;\n        /** @type {?} */\n        let bottomOverflow = (y + overlay.height) - viewport.height;\n        // Visible parts of the element on each axis.\n        /** @type {?} */\n        let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n        /** @type {?} */\n        let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n        /** @type {?} */\n        let visibleArea = visibleWidth * visibleHeight;\n        return {\n            visibleArea,\n            isCompletelyWithinViewport: (overlay.width * overlay.height) === visibleArea,\n            fitsInViewportVertically: visibleHeight === overlay.height,\n            fitsInViewportHorizontally: visibleWidth == overlay.width,\n        };\n    }\n    /**\n     * Whether the overlay can fit within the viewport when it may resize either its width or height.\n     * @private\n     * @param {?} fit How well the overlay fits in the viewport at some position.\n     * @param {?} point The (x, y) coordinates of the overlat at some position.\n     * @param {?} viewport The geometry of the viewport.\n     * @return {?}\n     */\n    _canFitWithFlexibleDimensions(fit, point, viewport) {\n        if (this._hasFlexibleDimensions) {\n            /** @type {?} */\n            const availableHeight = viewport.bottom - point.y;\n            /** @type {?} */\n            const availableWidth = viewport.right - point.x;\n            /** @type {?} */\n            const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n            /** @type {?} */\n            const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n            /** @type {?} */\n            const verticalFit = fit.fitsInViewportVertically ||\n                (minHeight != null && minHeight <= availableHeight);\n            /** @type {?} */\n            const horizontalFit = fit.fitsInViewportHorizontally ||\n                (minWidth != null && minWidth <= availableWidth);\n            return verticalFit && horizontalFit;\n        }\n        return false;\n    }\n    /**\n     * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n     * the viewport, the top-left corner will be pushed on-screen (with overflow occuring on the\n     * right and bottom).\n     *\n     * @private\n     * @param {?} start Starting point from which the overlay is pushed.\n     * @param {?} overlay Dimensions of the overlay.\n     * @param {?} scrollPosition Current viewport scroll position.\n     * @return {?} The point at which to position the overlay after pushing. This is effectively a new\n     *     originPoint.\n     */\n    _pushOverlayOnScreen(start, overlay, scrollPosition) {\n        // If the position is locked and we've pushed the overlay already, reuse the previous push\n        // amount, rather than pushing it again. If we were to continue pushing, the element would\n        // remain in the viewport, which goes against the expectations when position locking is enabled.\n        if (this._previousPushAmount && this._positionLocked) {\n            return {\n                x: start.x + this._previousPushAmount.x,\n                y: start.y + this._previousPushAmount.y\n            };\n        }\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        // Determine how much the overlay goes outside the viewport on each\n        // side, which we'll use to decide which direction to push it.\n        /** @type {?} */\n        const overflowRight = Math.max(start.x + overlay.width - viewport.right, 0);\n        /** @type {?} */\n        const overflowBottom = Math.max(start.y + overlay.height - viewport.bottom, 0);\n        /** @type {?} */\n        const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n        /** @type {?} */\n        const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n        // Amount by which to push the overlay in each axis such that it remains on-screen.\n        /** @type {?} */\n        let pushX = 0;\n        /** @type {?} */\n        let pushY = 0;\n        // If the overlay fits completely within the bounds of the viewport, push it from whichever\n        // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n        // viewport and allow for the trailing end of the overlay to go out of bounds.\n        if (overlay.width <= viewport.width) {\n            pushX = overflowLeft || -overflowRight;\n        }\n        else {\n            pushX = start.x < this._viewportMargin ? (viewport.left - scrollPosition.left) - start.x : 0;\n        }\n        if (overlay.height <= viewport.height) {\n            pushY = overflowTop || -overflowBottom;\n        }\n        else {\n            pushY = start.y < this._viewportMargin ? (viewport.top - scrollPosition.top) - start.y : 0;\n        }\n        this._previousPushAmount = { x: pushX, y: pushY };\n        return {\n            x: start.x + pushX,\n            y: start.y + pushY,\n        };\n    }\n    /**\n     * Applies a computed position to the overlay and emits a position change.\n     * @private\n     * @param {?} position The position preference\n     * @param {?} originPoint The point on the origin element where the overlay is connected.\n     * @return {?}\n     */\n    _applyPosition(position, originPoint) {\n        this._setTransformOrigin(position);\n        this._setOverlayElementStyles(originPoint, position);\n        this._setBoundingBoxStyles(originPoint, position);\n        if (position.panelClass) {\n            this._addPanelClasses(position.panelClass);\n        }\n        // Save the last connected position in case the position needs to be re-calculated.\n        this._lastPosition = position;\n        // Notify that the position has been changed along with its change properties.\n        // We only emit if we've got any subscriptions, because the scroll visibility\n        // calculcations can be somewhat expensive.\n        if (this._positionChanges.observers.length) {\n            /** @type {?} */\n            const scrollableViewProperties = this._getScrollVisibility();\n            /** @type {?} */\n            const changeEvent = new ConnectedOverlayPositionChange(position, scrollableViewProperties);\n            this._positionChanges.next(changeEvent);\n        }\n        this._isInitialRender = false;\n    }\n    /**\n     * Sets the transform origin based on the configured selector and the passed-in position.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _setTransformOrigin(position) {\n        if (!this._transformOriginSelector) {\n            return;\n        }\n        /** @type {?} */\n        const elements = (/** @type {?} */ (this._boundingBox)).querySelectorAll(this._transformOriginSelector);\n        /** @type {?} */\n        let xOrigin;\n        /** @type {?} */\n        let yOrigin = position.overlayY;\n        if (position.overlayX === 'center') {\n            xOrigin = 'center';\n        }\n        else if (this._isRtl()) {\n            xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n        }\n        else {\n            xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n        }\n        for (let i = 0; i < elements.length; i++) {\n            elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n        }\n    }\n    /**\n     * Gets the position and size of the overlay's sizing container.\n     *\n     * This method does no measuring and applies no styles so that we can cheaply compute the\n     * bounds for all positions and choose the best fit based on these results.\n     * @private\n     * @param {?} origin\n     * @param {?} position\n     * @return {?}\n     */\n    _calculateBoundingBoxRect(origin, position) {\n        /** @type {?} */\n        const viewport = this._viewportRect;\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        let height;\n        /** @type {?} */\n        let top;\n        /** @type {?} */\n        let bottom;\n        if (position.overlayY === 'top') {\n            // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n            top = origin.y;\n            height = viewport.height - top + this._viewportMargin;\n        }\n        else if (position.overlayY === 'bottom') {\n            // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n            // the viewport margin back in, because the viewport rect is narrowed down to remove the\n            // margin, whereas the `origin` position is calculated based on its `ClientRect`.\n            bottom = viewport.height - origin.y + this._viewportMargin * 2;\n            height = viewport.height - bottom + this._viewportMargin;\n        }\n        else {\n            // If neither top nor bottom, it means that the overlay is vertically centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n            // `origin.y - viewport.top`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n            /** @type {?} */\n            const previousHeight = this._lastBoundingBoxSize.height;\n            height = smallestDistanceToViewportEdge * 2;\n            top = origin.y - smallestDistanceToViewportEdge;\n            if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n                top = origin.y - (previousHeight / 2);\n            }\n        }\n        // The overlay is opening 'right-ward' (the content flows to the right).\n        /** @type {?} */\n        const isBoundedByRightViewportEdge = (position.overlayX === 'start' && !isRtl) ||\n            (position.overlayX === 'end' && isRtl);\n        // The overlay is opening 'left-ward' (the content flows to the left).\n        /** @type {?} */\n        const isBoundedByLeftViewportEdge = (position.overlayX === 'end' && !isRtl) ||\n            (position.overlayX === 'start' && isRtl);\n        /** @type {?} */\n        let width;\n        /** @type {?} */\n        let left;\n        /** @type {?} */\n        let right;\n        if (isBoundedByLeftViewportEdge) {\n            right = viewport.width - origin.x + this._viewportMargin;\n            width = origin.x - this._viewportMargin;\n        }\n        else if (isBoundedByRightViewportEdge) {\n            left = origin.x;\n            width = viewport.right - origin.x;\n        }\n        else {\n            // If neither start nor end, it means that the overlay is horizontally centered on the\n            // origin point. Note that we want the position relative to the viewport, rather than\n            // the page, which is why we don't use something like `viewport.right - origin.x` and\n            // `origin.x - viewport.left`.\n            /** @type {?} */\n            const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n            /** @type {?} */\n            const previousWidth = this._lastBoundingBoxSize.width;\n            width = smallestDistanceToViewportEdge * 2;\n            left = origin.x - smallestDistanceToViewportEdge;\n            if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n                left = origin.x - (previousWidth / 2);\n            }\n        }\n        return { top: (/** @type {?} */ (top)), left: (/** @type {?} */ (left)), bottom: (/** @type {?} */ (bottom)), right: (/** @type {?} */ (right)), width, height };\n    }\n    /**\n     * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n     * origin's connection point and stetches to the bounds of the viewport.\n     *\n     * @private\n     * @param {?} origin The point on the origin element where the overlay is connected.\n     * @param {?} position The position preference\n     * @return {?}\n     */\n    _setBoundingBoxStyles(origin, position) {\n        /** @type {?} */\n        const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n        // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n        // when applying a new size.\n        if (!this._isInitialRender && !this._growAfterOpen) {\n            boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n            boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n        }\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        if (this._hasExactPosition()) {\n            styles.top = styles.left = '0';\n            styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n            styles.width = styles.height = '100%';\n        }\n        else {\n            /** @type {?} */\n            const maxHeight = this._overlayRef.getConfig().maxHeight;\n            /** @type {?} */\n            const maxWidth = this._overlayRef.getConfig().maxWidth;\n            styles.height = coerceCssPixelValue(boundingBoxRect.height);\n            styles.top = coerceCssPixelValue(boundingBoxRect.top);\n            styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n            styles.width = coerceCssPixelValue(boundingBoxRect.width);\n            styles.left = coerceCssPixelValue(boundingBoxRect.left);\n            styles.right = coerceCssPixelValue(boundingBoxRect.right);\n            // Push the pane content towards the proper direction.\n            if (position.overlayX === 'center') {\n                styles.alignItems = 'center';\n            }\n            else {\n                styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n            }\n            if (position.overlayY === 'center') {\n                styles.justifyContent = 'center';\n            }\n            else {\n                styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n            }\n            if (maxHeight) {\n                styles.maxHeight = coerceCssPixelValue(maxHeight);\n            }\n            if (maxWidth) {\n                styles.maxWidth = coerceCssPixelValue(maxWidth);\n            }\n        }\n        this._lastBoundingBoxSize = boundingBoxRect;\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, styles);\n    }\n    /**\n     * Resets the styles for the bounding box so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetBoundingBoxStyles() {\n        extendStyles((/** @type {?} */ (this._boundingBox)).style, (/** @type {?} */ ({\n            top: '0',\n            left: '0',\n            right: '0',\n            bottom: '0',\n            height: '',\n            width: '',\n            alignItems: '',\n            justifyContent: '',\n        })));\n    }\n    /**\n     * Resets the styles for the overlay pane so that a new positioning can be computed.\n     * @private\n     * @return {?}\n     */\n    _resetOverlayElementStyles() {\n        extendStyles(this._pane.style, (/** @type {?} */ ({\n            top: '',\n            left: '',\n            bottom: '',\n            right: '',\n            position: '',\n            transform: '',\n        })));\n    }\n    /**\n     * Sets positioning styles to the overlay element.\n     * @private\n     * @param {?} originPoint\n     * @param {?} position\n     * @return {?}\n     */\n    _setOverlayElementStyles(originPoint, position) {\n        /** @type {?} */\n        const styles = (/** @type {?} */ ({}));\n        /** @type {?} */\n        const hasExactPosition = this._hasExactPosition();\n        /** @type {?} */\n        const hasFlexibleDimensions = this._hasFlexibleDimensions;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        if (hasExactPosition) {\n            /** @type {?} */\n            const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n            extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n            extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n        }\n        else {\n            styles.position = 'static';\n        }\n        // Use a transform to apply the offsets. We do this because the `center` positions rely on\n        // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n        // off the position. We also can't use margins, because they won't have an effect in some\n        // cases where the element doesn't have anything to \"push off of\". Finally, this works\n        // better both with flexible and non-flexible positioning.\n        /** @type {?} */\n        let transformString = '';\n        /** @type {?} */\n        let offsetX = this._getOffset(position, 'x');\n        /** @type {?} */\n        let offsetY = this._getOffset(position, 'y');\n        if (offsetX) {\n            transformString += `translateX(${offsetX}px) `;\n        }\n        if (offsetY) {\n            transformString += `translateY(${offsetY}px)`;\n        }\n        styles.transform = transformString.trim();\n        // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n        // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n        // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n        // Note that this doesn't apply when we have an exact position, in which case we do want to\n        // apply them because they'll be cleared from the bounding box.\n        if (config.maxHeight) {\n            if (hasExactPosition) {\n                styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxHeight = '';\n            }\n        }\n        if (config.maxWidth) {\n            if (hasExactPosition) {\n                styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n            }\n            else if (hasFlexibleDimensions) {\n                styles.maxWidth = '';\n            }\n        }\n        extendStyles(this._pane.style, styles);\n    }\n    /**\n     * Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayY(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the\n        // preferred position has changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ top: '', bottom: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        /** @type {?} */\n        let virtualKeyboardOffset = this._overlayContainer.getContainerElement().getBoundingClientRect().top;\n        // Normally this would be zero, however when the overlay is attached to an input (e.g. in an\n        // autocomplete), mobile browsers will shift everything in order to put the input in the middle\n        // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n        // otherwise our positioning will be thrown off.\n        overlayPoint.y -= virtualKeyboardOffset;\n        // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n        // above or below the origin and the direction in which the element will expand.\n        if (position.overlayY === 'bottom') {\n            // When using `bottom`, we adjust the y position such that it is the distance\n            // from the bottom of the viewport rather than the top.\n            /** @type {?} */\n            const documentHeight = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n            styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n        }\n        else {\n            styles.top = coerceCssPixelValue(overlayPoint.y);\n        }\n        return styles;\n    }\n    /**\n     * Gets the exact left/right for the overlay when not using flexible sizing or when pushing.\n     * @private\n     * @param {?} position\n     * @param {?} originPoint\n     * @param {?} scrollPosition\n     * @return {?}\n     */\n    _getExactOverlayX(position, originPoint, scrollPosition) {\n        // Reset any existing styles. This is necessary in case the preferred position has\n        // changed since the last `apply`.\n        /** @type {?} */\n        let styles = (/** @type {?} */ ({ left: '', right: '' }));\n        /** @type {?} */\n        let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n        if (this._isPushed) {\n            overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n        }\n        // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n        // or \"after\" the origin, which determines the direction in which the element will expand.\n        // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n        // page is in RTL or LTR.\n        /** @type {?} */\n        let horizontalStyleProperty;\n        if (this._isRtl()) {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n        }\n        else {\n            horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n        }\n        // When we're setting `right`, we adjust the x position such that it is the distance\n        // from the right edge of the viewport rather than the left edge.\n        if (horizontalStyleProperty === 'right') {\n            /** @type {?} */\n            const documentWidth = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n            styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n        }\n        else {\n            styles.left = coerceCssPixelValue(overlayPoint.x);\n        }\n        return styles;\n    }\n    /**\n     * Gets the view properties of the trigger and overlay, including whether they are clipped\n     * or completely outside the view of any of the strategy's scrollables.\n     * @private\n     * @return {?}\n     */\n    _getScrollVisibility() {\n        // Note: needs fresh rects since the position could've changed.\n        /** @type {?} */\n        const originBounds = this._getOriginRect();\n        /** @type {?} */\n        const overlayBounds = this._pane.getBoundingClientRect();\n        // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n        // every time, we should be able to use the scrollTop of the containers if the size of those\n        // containers hasn't changed.\n        /** @type {?} */\n        const scrollContainerBounds = this._scrollables.map((/**\n         * @param {?} scrollable\n         * @return {?}\n         */\n        scrollable => {\n            return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n        }));\n        return {\n            isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n            isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n            isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n            isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds),\n        };\n    }\n    /**\n     * Subtracts the amount that an element is overflowing on an axis from its length.\n     * @private\n     * @param {?} length\n     * @param {...?} overflows\n     * @return {?}\n     */\n    _subtractOverflows(length, ...overflows) {\n        return overflows.reduce((/**\n         * @param {?} currentValue\n         * @param {?} currentOverflow\n         * @return {?}\n         */\n        (currentValue, currentOverflow) => {\n            return currentValue - Math.max(currentOverflow, 0);\n        }), length);\n    }\n    /**\n     * Narrows the given viewport rect by the current _viewportMargin.\n     * @private\n     * @return {?}\n     */\n    _getNarrowedViewportRect() {\n        // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n        // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n        // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n        // and `innerHeight` that do. This is necessary, because the overlay container uses\n        // 100% `width` and `height` which don't include the scrollbar either.\n        /** @type {?} */\n        const width = (/** @type {?} */ (this._document.documentElement)).clientWidth;\n        /** @type {?} */\n        const height = (/** @type {?} */ (this._document.documentElement)).clientHeight;\n        /** @type {?} */\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n        return {\n            top: scrollPosition.top + this._viewportMargin,\n            left: scrollPosition.left + this._viewportMargin,\n            right: scrollPosition.left + width - this._viewportMargin,\n            bottom: scrollPosition.top + height - this._viewportMargin,\n            width: width - (2 * this._viewportMargin),\n            height: height - (2 * this._viewportMargin),\n        };\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @private\n     * @return {?}\n     */\n    _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Determines whether the overlay uses exact or flexible positioning.\n     * @private\n     * @return {?}\n     */\n    _hasExactPosition() {\n        return !this._hasFlexibleDimensions || this._isPushed;\n    }\n    /**\n     * Retrieves the offset of a position along the x or y axis.\n     * @private\n     * @param {?} position\n     * @param {?} axis\n     * @return {?}\n     */\n    _getOffset(position, axis) {\n        if (axis === 'x') {\n            // We don't do something like `position['offset' + axis]` in\n            // order to avoid breking minifiers that rename properties.\n            return position.offsetX == null ? this._offsetX : position.offsetX;\n        }\n        return position.offsetY == null ? this._offsetY : position.offsetY;\n    }\n    /**\n     * Validates that the current position match the expected values.\n     * @private\n     * @return {?}\n     */\n    _validatePositions() {\n        if (!this._preferredPositions.length) {\n            throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n        }\n        // TODO(crisbeto): remove these once Angular's template type\n        // checking is advanced enough to catch these cases.\n        this._preferredPositions.forEach((/**\n         * @param {?} pair\n         * @return {?}\n         */\n        pair => {\n            validateHorizontalPosition('originX', pair.originX);\n            validateVerticalPosition('originY', pair.originY);\n            validateHorizontalPosition('overlayX', pair.overlayX);\n            validateVerticalPosition('overlayY', pair.overlayY);\n        }));\n    }\n    /**\n     * Adds a single CSS class or an array of classes on the overlay panel.\n     * @private\n     * @param {?} cssClasses\n     * @return {?}\n     */\n    _addPanelClasses(cssClasses) {\n        if (this._pane) {\n            coerceArray(cssClasses).forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n                    this._appliedPanelClasses.push(cssClass);\n                    this._pane.classList.add(cssClass);\n                }\n            }));\n        }\n    }\n    /**\n     * Clears the classes that the position strategy has applied from the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _clearPanelClasses() {\n        if (this._pane) {\n            this._appliedPanelClasses.forEach((/**\n             * @param {?} cssClass\n             * @return {?}\n             */\n            cssClass => {\n                this._pane.classList.remove(cssClass);\n            }));\n            this._appliedPanelClasses = [];\n        }\n    }\n    /**\n     * Returns the ClientRect of the current origin.\n     * @private\n     * @return {?}\n     */\n    _getOriginRect() {\n        /** @type {?} */\n        const origin = this._origin;\n        if (origin instanceof ElementRef) {\n            return origin.nativeElement.getBoundingClientRect();\n        }\n        if (origin instanceof HTMLElement) {\n            return origin.getBoundingClientRect();\n        }\n        /** @type {?} */\n        const width = origin.width || 0;\n        /** @type {?} */\n        const height = origin.height || 0;\n        // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n        return {\n            top: origin.y,\n            bottom: origin.y + height,\n            left: origin.x,\n            right: origin.x + width,\n            height,\n            width\n        };\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * Whether we're performing the very first positioning of the overlay.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isInitialRender;\n    /**\n     * Last size used for the bounding box. Used to avoid resizing the overlay after open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastBoundingBoxSize;\n    /**\n     * Whether the overlay was pushed in a previous positioning.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isPushed;\n    /**\n     * Whether the overlay can be pushed on-screen on the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._canPush;\n    /**\n     * Whether the overlay can grow via flexible width/height after the initial open.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._growAfterOpen;\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._hasFlexibleDimensions;\n    /**\n     * Whether the overlay position is locked.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionLocked;\n    /**\n     * Cached origin dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._originRect;\n    /**\n     * Cached overlay dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayRect;\n    /**\n     * Cached viewport dimensions\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRect;\n    /**\n     * Amount of space that must be maintained between the overlay and the edge of the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportMargin;\n    /**\n     * The Scrollable containers used to check scrollable view properties on position change.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._scrollables;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype._preferredPositions;\n    /**\n     * The origin element against which the overlay will be positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._origin;\n    /**\n     * The overlay pane element.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._pane;\n    /**\n     * Whether the strategy has been disposed of already.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._isDisposed;\n    /**\n     * Parent element for the overlay panel used to constrain the overlay panel's size to fit\n     * within the viewport.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._boundingBox;\n    /**\n     * The last position to have been calculated as the best fit position.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._lastPosition;\n    /**\n     * Subject that emits whenever the position changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._positionChanges;\n    /**\n     * Subscription to viewport size changes.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._resizeSubscription;\n    /**\n     * Default offset for the overlay along the x axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetX;\n    /**\n     * Default offset for the overlay along the y axis.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._offsetY;\n    /**\n     * Selector to be used when finding the elements on which to set the transform origin.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._transformOriginSelector;\n    /**\n     * Keeps track of the CSS classes that the position strategy has applied on the overlay panel.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._appliedPanelClasses;\n    /**\n     * Amount by which the overlay was pushed in each axis during the last time it was positioned.\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._previousPushAmount;\n    /**\n     * Observable sequence of position changes.\n     * @type {?}\n     */\n    FlexibleConnectedPositionStrategy.prototype.positionChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    FlexibleConnectedPositionStrategy.prototype._overlayContainer;\n}\n/**\n * A simple (x, y) coordinate.\n * @record\n */\nfunction Point() { }\nif (false) {\n    /** @type {?} */\n    Point.prototype.x;\n    /** @type {?} */\n    Point.prototype.y;\n}\n/**\n * Record of measurements for how an overlay (at a given position) fits into the viewport.\n * @record\n */\nfunction OverlayFit() { }\nif (false) {\n    /**\n     * Whether the overlay fits completely in the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.isCompletelyWithinViewport;\n    /**\n     * Whether the overlay fits in the viewport on the y-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportVertically;\n    /**\n     * Whether the overlay fits in the viewport on the x-axis.\n     * @type {?}\n     */\n    OverlayFit.prototype.fitsInViewportHorizontally;\n    /**\n     * The total visible area (in px^2) of the overlay inside the viewport.\n     * @type {?}\n     */\n    OverlayFit.prototype.visibleArea;\n}\n/**\n * Record of the measurments determining whether an overlay will fit in a specific position.\n * @record\n */\nfunction FallbackPosition() { }\nif (false) {\n    /** @type {?} */\n    FallbackPosition.prototype.position;\n    /** @type {?} */\n    FallbackPosition.prototype.originPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayPoint;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayFit;\n    /** @type {?} */\n    FallbackPosition.prototype.overlayRect;\n}\n/**\n * Position and size of the overlay sizing wrapper for a specific position.\n * @record\n */\nfunction BoundingBoxRect() { }\nif (false) {\n    /** @type {?} */\n    BoundingBoxRect.prototype.top;\n    /** @type {?} */\n    BoundingBoxRect.prototype.left;\n    /** @type {?} */\n    BoundingBoxRect.prototype.bottom;\n    /** @type {?} */\n    BoundingBoxRect.prototype.right;\n    /** @type {?} */\n    BoundingBoxRect.prototype.height;\n    /** @type {?} */\n    BoundingBoxRect.prototype.width;\n}\n/**\n * Record of measures determining how well a given position will fit with flexible dimensions.\n * @record\n */\nfunction FlexibleFit() { }\nif (false) {\n    /** @type {?} */\n    FlexibleFit.prototype.position;\n    /** @type {?} */\n    FlexibleFit.prototype.origin;\n    /** @type {?} */\n    FlexibleFit.prototype.overlayRect;\n    /** @type {?} */\n    FlexibleFit.prototype.boundingBoxRect;\n}\n/**\n * A connected position as specified by the user.\n * @record\n */\nfunction ConnectedPosition() { }\nif (false) {\n    /** @type {?} */\n    ConnectedPosition.prototype.originX;\n    /** @type {?} */\n    ConnectedPosition.prototype.originY;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayX;\n    /** @type {?} */\n    ConnectedPosition.prototype.overlayY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.weight;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetX;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.offsetY;\n    /** @type {?|undefined} */\n    ConnectedPosition.prototype.panelClass;\n}\n/**\n * Shallow-extends a stylesheet object with another stylesheet object.\n * @param {?} destination\n * @param {?} source\n * @return {?}\n */\nfunction extendStyles(destination, source) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            destination[key] = source[key];\n        }\n    }\n    return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n * @param {?} input\n * @return {?}\n */\nfunction getPixelValue(input) {\n    if (typeof input !== 'number' && input != null) {\n        const [value, units] = input.split(cssUnitPattern);\n        return (!units || units === 'px') ? parseFloat(value) : null;\n    }\n    return input || null;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/connected-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative to some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n * @deprecated Use `FlexibleConnectedPositionStrategy` instead.\n * \\@breaking-change 8.0.0\n */\nclass ConnectedPositionStrategy {\n    /**\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?} connectedTo\n     * @param {?} viewportRuler\n     * @param {?} document\n     * @param {?} platform\n     * @param {?} overlayContainer\n     */\n    constructor(originPos, overlayPos, connectedTo, viewportRuler, document, platform, overlayContainer) {\n        /**\n         * Ordered list of preferred positions, from most to least desirable.\n         */\n        this._preferredPositions = [];\n        // Since the `ConnectedPositionStrategy` is deprecated and we don't want to maintain\n        // the extra logic, we create an instance of the positioning strategy that has some\n        // defaults that make it behave as the old position strategy and to which we'll\n        // proxy all of the API calls.\n        this._positionStrategy = new FlexibleConnectedPositionStrategy(connectedTo, viewportRuler, document, platform, overlayContainer)\n            .withFlexibleDimensions(false)\n            .withPush(false)\n            .withViewportMargin(0);\n        this.withFallbackPosition(originPos, overlayPos);\n    }\n    /**\n     * Whether the we're dealing with an RTL context\n     * @return {?}\n     */\n    get _isRtl() {\n        return this._overlayRef.getDirection() === 'rtl';\n    }\n    /**\n     * Emits an event when the connection point changes.\n     * @return {?}\n     */\n    get onPositionChange() {\n        return this._positionStrategy.positionChanges;\n    }\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @return {?}\n     */\n    get positions() {\n        return this._preferredPositions;\n    }\n    /**\n     * Attach this position strategy to an overlay.\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        this._overlayRef = overlayRef;\n        this._positionStrategy.attach(overlayRef);\n        if (this._direction) {\n            overlayRef.setDirection(this._direction);\n            this._direction = null;\n        }\n    }\n    /**\n     * Disposes all resources used by the position strategy.\n     * @return {?}\n     */\n    dispose() {\n        this._positionStrategy.dispose();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        this._positionStrategy.detach();\n    }\n    /**\n     * Updates the position of the overlay element, using whichever preferred position relative\n     * to the origin fits on-screen.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        this._positionStrategy.apply();\n    }\n    /**\n     * Re-positions the overlay element with the trigger in its last calculated position,\n     * even if a position higher in the \"preferred positions\" list would now fit. This\n     * allows one to re-align the panel without changing the orientation of the panel.\n     * @return {?}\n     */\n    recalculateLastPosition() {\n        this._positionStrategy.reapplyLastPosition();\n    }\n    /**\n     * Sets the list of Scrollable containers that host the origin element so that\n     * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n     * Scrollable must be an ancestor element of the strategy's origin element.\n     * @param {?} scrollables\n     * @return {?}\n     */\n    withScrollableContainers(scrollables) {\n        this._positionStrategy.withScrollableContainers(scrollables);\n    }\n    /**\n     * Adds a new preferred fallback position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @param {?=} offsetX\n     * @param {?=} offsetY\n     * @return {THIS}\n     */\n    withFallbackPosition(originPos, overlayPos, offsetX, offsetY) {\n        /** @type {?} */\n        const position = new ConnectionPositionPair(originPos, overlayPos, offsetX, offsetY);\n        (/** @type {?} */ (this))._preferredPositions.push(position);\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the layout direction so the overlay's position can be adjusted to match.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} dir New layout direction.\n     * @return {THIS}\n     */\n    withDirection(dir) {\n        // Since the direction might be declared before the strategy is attached,\n        // we save the value in a temporary property and we'll transfer it to the\n        // overlay ref on attachment.\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.setDirection(dir);\n        }\n        else {\n            (/** @type {?} */ (this))._direction = dir;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the x-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the X axis.\n     * @return {THIS}\n     */\n    withOffsetX(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetX(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets an offset for the overlay's connection point on the y-axis\n     * @template THIS\n     * @this {THIS}\n     * @param {?} offset New offset in the Y axis.\n     * @return {THIS}\n     */\n    withOffsetY(offset) {\n        (/** @type {?} */ (this))._positionStrategy.withDefaultOffsetY(offset);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets whether the overlay's position should be locked in after it is positioned\n     * initially. When an overlay is locked in, it won't attempt to reposition itself\n     * when the position is re-applied (e.g. when the user scrolls away).\n     * @template THIS\n     * @this {THIS}\n     * @param {?} isLocked Whether the overlay should locked in.\n     * @return {THIS}\n     */\n    withLockedPosition(isLocked) {\n        (/** @type {?} */ (this))._positionStrategy.withLockedPosition(isLocked);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Overwrites the current set of positions with an array of new ones.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} positions Position pairs to be set on the strategy.\n     * @return {THIS}\n     */\n    withPositions(positions) {\n        (/** @type {?} */ (this))._preferredPositions = positions.slice();\n        (/** @type {?} */ (this))._positionStrategy.withPositions((/** @type {?} */ (this))._preferredPositions);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the origin element, relative to which to position the overlay.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} origin Reference to the new origin element.\n     * @return {THIS}\n     */\n    setOrigin(origin) {\n        (/** @type {?} */ (this))._positionStrategy.setOrigin(origin);\n        return (/** @type {?} */ (this));\n    }\n}\nif (false) {\n    /**\n     * Reference to the underlying position strategy to which all the API calls are proxied.\n     * \\@docs-private\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._positionStrategy;\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ConnectedPositionStrategy.prototype._direction;\n    /**\n     * Ordered list of preferred positions, from most to least desirable.\n     * @type {?}\n     */\n    ConnectedPositionStrategy.prototype._preferredPositions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/global-position-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Class to be added to the overlay pane wrapper.\n * @type {?}\n */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n    constructor() {\n        this._cssPosition = 'static';\n        this._topOffset = '';\n        this._bottomOffset = '';\n        this._leftOffset = '';\n        this._rightOffset = '';\n        this._alignItems = '';\n        this._justifyContent = '';\n        this._width = '';\n        this._height = '';\n    }\n    /**\n     * @param {?} overlayRef\n     * @return {?}\n     */\n    attach(overlayRef) {\n        /** @type {?} */\n        const config = overlayRef.getConfig();\n        this._overlayRef = overlayRef;\n        if (this._width && !config.width) {\n            overlayRef.updateSize({ width: this._width });\n        }\n        if (this._height && !config.height) {\n            overlayRef.updateSize({ height: this._height });\n        }\n        overlayRef.hostElement.classList.add(wrapperClass);\n        this._isDisposed = false;\n    }\n    /**\n     * Sets the top position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New top offset.\n     * @return {THIS}\n     */\n    top(value = '') {\n        (/** @type {?} */ (this))._bottomOffset = '';\n        (/** @type {?} */ (this))._topOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the left position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New left offset.\n     * @return {THIS}\n     */\n    left(value = '') {\n        (/** @type {?} */ (this))._rightOffset = '';\n        (/** @type {?} */ (this))._leftOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-start';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the bottom position of the overlay. Clears any previously set vertical position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New bottom offset.\n     * @return {THIS}\n     */\n    bottom(value = '') {\n        (/** @type {?} */ (this))._topOffset = '';\n        (/** @type {?} */ (this))._bottomOffset = value;\n        (/** @type {?} */ (this))._alignItems = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the right position of the overlay. Clears any previously set horizontal position.\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New right offset.\n     * @return {THIS}\n     */\n    right(value = '') {\n        (/** @type {?} */ (this))._leftOffset = '';\n        (/** @type {?} */ (this))._rightOffset = value;\n        (/** @type {?} */ (this))._justifyContent = 'flex-end';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay width and clears any previously set width.\n     * @deprecated Pass the `width` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New width for the overlay\n     * @return {THIS}\n     */\n    width(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ width: value });\n        }\n        else {\n            (/** @type {?} */ (this))._width = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Sets the overlay height and clears any previously set height.\n     * @deprecated Pass the `height` through the `OverlayConfig`.\n     * \\@breaking-change 8.0.0\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} value New height for the overlay\n     * @return {THIS}\n     */\n    height(value = '') {\n        if ((/** @type {?} */ (this))._overlayRef) {\n            (/** @type {?} */ (this))._overlayRef.updateSize({ height: value });\n        }\n        else {\n            (/** @type {?} */ (this))._height = value;\n        }\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay horizontally with an optional offset.\n     * Clears any previously set horizontal position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the horizontal center.\n     * @return {THIS}\n     */\n    centerHorizontally(offset = '') {\n        (/** @type {?} */ (this)).left(offset);\n        (/** @type {?} */ (this))._justifyContent = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Centers the overlay vertically with an optional offset.\n     * Clears any previously set vertical position.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?=} offset Overlay offset from the vertical center.\n     * @return {THIS}\n     */\n    centerVertically(offset = '') {\n        (/** @type {?} */ (this)).top(offset);\n        (/** @type {?} */ (this))._alignItems = 'center';\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Apply the position to the element.\n     * \\@docs-private\n     * @return {?}\n     */\n    apply() {\n        // Since the overlay ref applies the strategy asynchronously, it could\n        // have been disposed before it ends up being applied. If that is the\n        // case, we shouldn't do anything.\n        if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parentStyles = this._overlayRef.hostElement.style;\n        /** @type {?} */\n        const config = this._overlayRef.getConfig();\n        const { width, height, maxWidth, maxHeight } = config;\n        /** @type {?} */\n        const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') &&\n            (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n        /** @type {?} */\n        const shouldBeFlushVertically = (height === '100%' || height === '100vh') &&\n            (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n        styles.position = this._cssPosition;\n        styles.marginLeft = shouldBeFlushHorizontally ? '0' : this._leftOffset;\n        styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n        styles.marginBottom = this._bottomOffset;\n        styles.marginRight = this._rightOffset;\n        if (shouldBeFlushHorizontally) {\n            parentStyles.justifyContent = 'flex-start';\n        }\n        else if (this._justifyContent === 'center') {\n            parentStyles.justifyContent = 'center';\n        }\n        else if (this._overlayRef.getConfig().direction === 'rtl') {\n            // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\n            // don't want that because our positioning is explicitly `left` and `right`, hence\n            // why we do another inversion to ensure that the overlay stays in the same position.\n            // TODO: reconsider this if we add `start` and `end` methods.\n            if (this._justifyContent === 'flex-start') {\n                parentStyles.justifyContent = 'flex-end';\n            }\n            else if (this._justifyContent === 'flex-end') {\n                parentStyles.justifyContent = 'flex-start';\n            }\n        }\n        else {\n            parentStyles.justifyContent = this._justifyContent;\n        }\n        parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n    }\n    /**\n     * Cleans up the DOM changes from the position strategy.\n     * \\@docs-private\n     * @return {?}\n     */\n    dispose() {\n        if (this._isDisposed || !this._overlayRef) {\n            return;\n        }\n        /** @type {?} */\n        const styles = this._overlayRef.overlayElement.style;\n        /** @type {?} */\n        const parent = this._overlayRef.hostElement;\n        /** @type {?} */\n        const parentStyles = parent.style;\n        parent.classList.remove(wrapperClass);\n        parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop =\n            styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n        this._overlayRef = (/** @type {?} */ (null));\n        this._isDisposed = true;\n    }\n}\nif (false) {\n    /**\n     * The overlay to which this strategy is attached.\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._cssPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._topOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._bottomOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._leftOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._rightOffset;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._alignItems;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._justifyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._width;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._height;\n    /**\n     * @type {?}\n     * @private\n     */\n    GlobalPositionStrategy.prototype._isDisposed;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/position/overlay-position-builder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Builder for overlay position strategy.\n */\nclass OverlayPositionBuilder {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _document\n     * @param {?} _platform\n     * @param {?} _overlayContainer\n     */\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n        this._viewportRuler = _viewportRuler;\n        this._document = _document;\n        this._platform = _platform;\n        this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     * @return {?}\n     */\n    global() {\n        return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a relative position strategy.\n     * @deprecated Use `flexibleConnectedTo` instead.\n     * \\@breaking-change 8.0.0\n     * @param {?} elementRef\n     * @param {?} originPos\n     * @param {?} overlayPos\n     * @return {?}\n     */\n    connectedTo(elementRef, originPos, overlayPos) {\n        return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param {?} origin Origin relative to which to position the overlay.\n     * @return {?}\n     */\n    flexibleConnectedTo(origin) {\n        return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n}\nOverlayPositionBuilder.ɵfac = function OverlayPositionBuilder_Factory(t) { return new (t || OverlayPositionBuilder)(ɵngcc0.ɵɵinject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform), ɵngcc0.ɵɵinject(OverlayContainer)); };\n/** @nocollapse */\nOverlayPositionBuilder.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform },\n    { type: OverlayContainer }\n];\n/** @nocollapse */ OverlayPositionBuilder.ɵprov = ɵɵdefineInjectable({ factory: function OverlayPositionBuilder_Factory() { return new OverlayPositionBuilder(ɵɵinject(ViewportRuler), ɵɵinject(DOCUMENT), ɵɵinject(Platform), ɵɵinject(OverlayContainer)); }, token: OverlayPositionBuilder, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayPositionBuilder, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }, { type: OverlayContainer }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    OverlayPositionBuilder.prototype._overlayContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Next overlay unique ID.\n * @type {?}\n */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nclass Overlay {\n    /**\n     * @param {?} scrollStrategies\n     * @param {?} _overlayContainer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _positionBuilder\n     * @param {?} _keyboardDispatcher\n     * @param {?} _injector\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _directionality\n     * @param {?=} _location\n     */\n    constructor(scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location) {\n        this.scrollStrategies = scrollStrategies;\n        this._overlayContainer = _overlayContainer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._positionBuilder = _positionBuilder;\n        this._keyboardDispatcher = _keyboardDispatcher;\n        this._injector = _injector;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._directionality = _directionality;\n        this._location = _location;\n    }\n    /**\n     * Creates an overlay.\n     * @param {?=} config Configuration applied to the overlay.\n     * @return {?} Reference to the created overlay.\n     */\n    create(config) {\n        /** @type {?} */\n        const host = this._createHostElement();\n        /** @type {?} */\n        const pane = this._createPaneElement(host);\n        /** @type {?} */\n        const portalOutlet = this._createPortalOutlet(pane);\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig(config);\n        overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n        return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location);\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @return {?} An overlay position builder.\n     */\n    position() {\n        return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @private\n     * @param {?} host\n     * @return {?} Newly-created pane element\n     */\n    _createPaneElement(host) {\n        /** @type {?} */\n        const pane = this._document.createElement('div');\n        pane.id = `cdk-overlay-${nextUniqueId++}`;\n        pane.classList.add('cdk-overlay-pane');\n        host.appendChild(pane);\n        return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @private\n     * @return {?} Newly-create host element.\n     */\n    _createHostElement() {\n        /** @type {?} */\n        const host = this._document.createElement('div');\n        this._overlayContainer.getContainerElement().appendChild(host);\n        return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @private\n     * @param {?} pane The DOM element to turn into a portal outlet.\n     * @return {?} A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n        // We have to resolve the ApplicationRef later in order to allow people\n        // to use overlay-based providers during app initialization.\n        if (!this._appRef) {\n            this._appRef = this._injector.get(ApplicationRef);\n        }\n        return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n}\nOverlay.ɵfac = function Overlay_Factory(t) { return new (t || Overlay)(ɵngcc0.ɵɵinject(ScrollStrategyOptions), ɵngcc0.ɵɵinject(OverlayContainer), ɵngcc0.ɵɵinject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵinject(OverlayPositionBuilder), ɵngcc0.ɵɵinject(OverlayKeyboardDispatcher), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc3.Directionality), ɵngcc0.ɵɵinject(ɵngcc4.Location, 8)); };\nOverlay.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Overlay, factory: Overlay.ɵfac });\n/** @nocollapse */\nOverlay.ctorParameters = () => [\n    { type: ScrollStrategyOptions },\n    { type: OverlayContainer },\n    { type: ComponentFactoryResolver },\n    { type: OverlayPositionBuilder },\n    { type: OverlayKeyboardDispatcher },\n    { type: Injector },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Directionality },\n    { type: Location, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Overlay, [{\n        type: Injectable\n    }], function () { return [{ type: ScrollStrategyOptions }, { type: OverlayContainer }, { type: ɵngcc0.ComponentFactoryResolver }, { type: OverlayPositionBuilder }, { type: OverlayKeyboardDispatcher }, { type: ɵngcc0.Injector }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc3.Directionality }, { type: ɵngcc4.Location, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._appRef;\n    /**\n     * Scrolling strategies that can be used when creating an overlay.\n     * @type {?}\n     */\n    Overlay.prototype.scrollStrategies;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._overlayContainer;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._positionBuilder;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._keyboardDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._directionality;\n    /**\n     * @type {?}\n     * @private\n     */\n    Overlay.prototype._location;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default set of positions for the overlay. Follows the behavior of a dropdown.\n * @type {?}\n */\nconst defaultPositionList = [\n    {\n        originX: 'start',\n        originY: 'bottom',\n        overlayX: 'start',\n        overlayY: 'top'\n    },\n    {\n        originX: 'start',\n        originY: 'top',\n        overlayX: 'start',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'top',\n        overlayX: 'end',\n        overlayY: 'bottom'\n    },\n    {\n        originX: 'end',\n        originY: 'bottom',\n        overlayX: 'end',\n        overlayY: 'top'\n    }\n];\n/**\n * Injection token that determines the scroll handling while the connected overlay is open.\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = new InjectionToken('cdk-connected-overlay-scroll-strategy');\n/**\n * \\@docs-private \\@deprecated \\@breaking-change 8.0.0\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @param {?=} config\n     * @return {?}\n     */\n    (config) => overlay.scrollStrategies.reposition(config));\n}\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nclass CdkOverlayOrigin {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n    }\n}\nCdkOverlayOrigin.ɵfac = function CdkOverlayOrigin_Factory(t) { return new (t || CdkOverlayOrigin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkOverlayOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkOverlayOrigin, selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]], exportAs: [\"cdkOverlayOrigin\"] });\n/** @nocollapse */\nCdkOverlayOrigin.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkOverlayOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]',\n                exportAs: 'cdkOverlayOrigin'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the element on which the directive is applied.\n     * @type {?}\n     */\n    CdkOverlayOrigin.prototype.elementRef;\n}\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nclass CdkConnectedOverlay {\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    /**\n     * @param {?} _overlay\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     * @param {?} scrollStrategyFactory\n     * @param {?} _dir\n     */\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n        this._overlay = _overlay;\n        this._dir = _dir;\n        this._hasBackdrop = false;\n        this._lockPosition = false;\n        this._growAfterOpen = false;\n        this._flexibleDimensions = false;\n        this._push = false;\n        this._backdropSubscription = Subscription.EMPTY;\n        /**\n         * Margin between the overlay and the viewport edges.\n         */\n        this.viewportMargin = 0;\n        /**\n         * Whether the overlay is open.\n         */\n        this.open = false;\n        /**\n         * Event emitted when the backdrop is clicked.\n         */\n        this.backdropClick = new EventEmitter();\n        /**\n         * Event emitted when the position has changed.\n         */\n        this.positionChange = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been attached.\n         */\n        this.attach = new EventEmitter();\n        /**\n         * Event emitted when the overlay has been detached.\n         */\n        this.detach = new EventEmitter();\n        /**\n         * Emits when there are keyboard events that are targeted at the overlay.\n         */\n        this.overlayKeydown = new EventEmitter();\n        this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the x-axis\n     * @return {?}\n     */\n    get offsetX() { return this._offsetX; }\n    /**\n     * @param {?} offsetX\n     * @return {?}\n     */\n    set offsetX(offsetX) {\n        this._offsetX = offsetX;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * The offset in pixels for the overlay connection point on the y-axis\n     * @return {?}\n     */\n    get offsetY() { return this._offsetY; }\n    /**\n     * @param {?} offsetY\n     * @return {?}\n     */\n    set offsetY(offsetY) {\n        this._offsetY = offsetY;\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n        }\n    }\n    /**\n     * Whether or not the overlay should attach a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) { this._hasBackdrop = coerceBooleanProperty(value); }\n    /**\n     * Whether or not the overlay should be locked when scrolling.\n     * @return {?}\n     */\n    get lockPosition() { return this._lockPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set lockPosition(value) { this._lockPosition = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay's width and height can be constrained to fit within the viewport.\n     * @return {?}\n     */\n    get flexibleDimensions() { return this._flexibleDimensions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set flexibleDimensions(value) {\n        this._flexibleDimensions = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the overlay can grow after the initial open when flexible positioning is turned on.\n     * @return {?}\n     */\n    get growAfterOpen() { return this._growAfterOpen; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set growAfterOpen(value) { this._growAfterOpen = coerceBooleanProperty(value); }\n    /**\n     * Whether the overlay can be pushed on-screen if none of the provided positions fit.\n     * @return {?}\n     */\n    get push() { return this._push; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set push(value) { this._push = coerceBooleanProperty(value); }\n    /**\n     * The associated overlay reference.\n     * @return {?}\n     */\n    get overlayRef() {\n        return this._overlayRef;\n    }\n    /**\n     * The element's layout direction.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir ? this._dir.value : 'ltr';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (this._position) {\n            this._updatePositionStrategy(this._position);\n            this._overlayRef.updateSize({\n                width: this.width,\n                minWidth: this.minWidth,\n                height: this.height,\n                minHeight: this.minHeight,\n            });\n            if (changes['origin'] && this.open) {\n                this._position.apply();\n            }\n        }\n        if (changes['open']) {\n            this.open ? this._attachOverlay() : this._detachOverlay();\n        }\n    }\n    /**\n     * Creates an overlay\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this.positions || !this.positions.length) {\n            this.positions = defaultPositionList;\n        }\n        this._overlayRef = this._overlay.create(this._buildConfig());\n        this._overlayRef.keydownEvents().subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            this.overlayKeydown.next(event);\n            if (event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                this._detachOverlay();\n            }\n        }));\n    }\n    /**\n     * Builds the overlay config based on the directive's inputs\n     * @private\n     * @return {?}\n     */\n    _buildConfig() {\n        /** @type {?} */\n        const positionStrategy = this._position =\n            this.positionStrategy || this._createPositionStrategy();\n        /** @type {?} */\n        const overlayConfig = new OverlayConfig({\n            direction: this._dir,\n            positionStrategy,\n            scrollStrategy: this.scrollStrategy,\n            hasBackdrop: this.hasBackdrop\n        });\n        if (this.width || this.width === 0) {\n            overlayConfig.width = this.width;\n        }\n        if (this.height || this.height === 0) {\n            overlayConfig.height = this.height;\n        }\n        if (this.minWidth || this.minWidth === 0) {\n            overlayConfig.minWidth = this.minWidth;\n        }\n        if (this.minHeight || this.minHeight === 0) {\n            overlayConfig.minHeight = this.minHeight;\n        }\n        if (this.backdropClass) {\n            overlayConfig.backdropClass = this.backdropClass;\n        }\n        if (this.panelClass) {\n            overlayConfig.panelClass = this.panelClass;\n        }\n        return overlayConfig;\n    }\n    /**\n     * Updates the state of a position strategy, based on the values of the directive inputs.\n     * @private\n     * @param {?} positionStrategy\n     * @return {?}\n     */\n    _updatePositionStrategy(positionStrategy) {\n        /** @type {?} */\n        const positions = this.positions.map((/**\n         * @param {?} currentPosition\n         * @return {?}\n         */\n        currentPosition => ({\n            originX: currentPosition.originX,\n            originY: currentPosition.originY,\n            overlayX: currentPosition.overlayX,\n            overlayY: currentPosition.overlayY,\n            offsetX: currentPosition.offsetX || this.offsetX,\n            offsetY: currentPosition.offsetY || this.offsetY,\n            panelClass: currentPosition.panelClass || undefined,\n        })));\n        return positionStrategy\n            .setOrigin(this.origin.elementRef)\n            .withPositions(positions)\n            .withFlexibleDimensions(this.flexibleDimensions)\n            .withPush(this.push)\n            .withGrowAfterOpen(this.growAfterOpen)\n            .withViewportMargin(this.viewportMargin)\n            .withLockedPosition(this.lockPosition)\n            .withTransformOriginOn(this.transformOriginSelector);\n    }\n    /**\n     * Returns the position strategy of the overlay to be set on the overlay config\n     * @private\n     * @return {?}\n     */\n    _createPositionStrategy() {\n        /** @type {?} */\n        const strategy = this._overlay.position().flexibleConnectedTo(this.origin.elementRef);\n        this._updatePositionStrategy(strategy);\n        strategy.positionChanges.subscribe((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => this.positionChange.emit(p)));\n        return strategy;\n    }\n    /**\n     * Attaches the overlay and subscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _attachOverlay() {\n        if (!this._overlayRef) {\n            this._createOverlay();\n        }\n        else {\n            // Update the overlay size, in case the directive's inputs have changed\n            this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n        }\n        if (!this._overlayRef.hasAttached()) {\n            this._overlayRef.attach(this._templatePortal);\n            this.attach.emit();\n        }\n        if (this.hasBackdrop) {\n            this._backdropSubscription = this._overlayRef.backdropClick().subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.backdropClick.emit(event);\n            }));\n        }\n        else {\n            this._backdropSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists\n     * @private\n     * @return {?}\n     */\n    _detachOverlay() {\n        if (this._overlayRef) {\n            this._overlayRef.detach();\n            this.detach.emit();\n        }\n        this._backdropSubscription.unsubscribe();\n    }\n}\nCdkConnectedOverlay.ɵfac = function CdkConnectedOverlay_Factory(t) { return new (t || CdkConnectedOverlay)(ɵngcc0.ɵɵdirectiveInject(Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8)); };\nCdkConnectedOverlay.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkConnectedOverlay, selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]], inputs: { viewportMargin: [\"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"], open: [\"cdkConnectedOverlayOpen\", \"open\"], scrollStrategy: [\"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"], offsetX: [\"cdkConnectedOverlayOffsetX\", \"offsetX\"], offsetY: [\"cdkConnectedOverlayOffsetY\", \"offsetY\"], hasBackdrop: [\"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\"], lockPosition: [\"cdkConnectedOverlayLockPosition\", \"lockPosition\"], flexibleDimensions: [\"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\"], growAfterOpen: [\"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\"], push: [\"cdkConnectedOverlayPush\", \"push\"], positions: [\"cdkConnectedOverlayPositions\", \"positions\"], origin: [\"cdkConnectedOverlayOrigin\", \"origin\"], positionStrategy: [\"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"], width: [\"cdkConnectedOverlayWidth\", \"width\"], height: [\"cdkConnectedOverlayHeight\", \"height\"], minWidth: [\"cdkConnectedOverlayMinWidth\", \"minWidth\"], minHeight: [\"cdkConnectedOverlayMinHeight\", \"minHeight\"], backdropClass: [\"cdkConnectedOverlayBackdropClass\", \"backdropClass\"], panelClass: [\"cdkConnectedOverlayPanelClass\", \"panelClass\"], transformOriginSelector: [\"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"] }, outputs: { backdropClick: \"backdropClick\", positionChange: \"positionChange\", attach: \"attach\", detach: \"detach\", overlayKeydown: \"overlayKeydown\" }, exportAs: [\"cdkConnectedOverlay\"], features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nCdkConnectedOverlay.ctorParameters = () => [\n    { type: Overlay },\n    { type: TemplateRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\nCdkConnectedOverlay.propDecorators = {\n    origin: [{ type: Input, args: ['cdkConnectedOverlayOrigin',] }],\n    positions: [{ type: Input, args: ['cdkConnectedOverlayPositions',] }],\n    positionStrategy: [{ type: Input, args: ['cdkConnectedOverlayPositionStrategy',] }],\n    offsetX: [{ type: Input, args: ['cdkConnectedOverlayOffsetX',] }],\n    offsetY: [{ type: Input, args: ['cdkConnectedOverlayOffsetY',] }],\n    width: [{ type: Input, args: ['cdkConnectedOverlayWidth',] }],\n    height: [{ type: Input, args: ['cdkConnectedOverlayHeight',] }],\n    minWidth: [{ type: Input, args: ['cdkConnectedOverlayMinWidth',] }],\n    minHeight: [{ type: Input, args: ['cdkConnectedOverlayMinHeight',] }],\n    backdropClass: [{ type: Input, args: ['cdkConnectedOverlayBackdropClass',] }],\n    panelClass: [{ type: Input, args: ['cdkConnectedOverlayPanelClass',] }],\n    viewportMargin: [{ type: Input, args: ['cdkConnectedOverlayViewportMargin',] }],\n    scrollStrategy: [{ type: Input, args: ['cdkConnectedOverlayScrollStrategy',] }],\n    open: [{ type: Input, args: ['cdkConnectedOverlayOpen',] }],\n    transformOriginSelector: [{ type: Input, args: ['cdkConnectedOverlayTransformOriginOn',] }],\n    hasBackdrop: [{ type: Input, args: ['cdkConnectedOverlayHasBackdrop',] }],\n    lockPosition: [{ type: Input, args: ['cdkConnectedOverlayLockPosition',] }],\n    flexibleDimensions: [{ type: Input, args: ['cdkConnectedOverlayFlexibleDimensions',] }],\n    growAfterOpen: [{ type: Input, args: ['cdkConnectedOverlayGrowAfterOpen',] }],\n    push: [{ type: Input, args: ['cdkConnectedOverlayPush',] }],\n    backdropClick: [{ type: Output }],\n    positionChange: [{ type: Output }],\n    attach: [{ type: Output }],\n    detach: [{ type: Output }],\n    overlayKeydown: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkConnectedOverlay, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]',\n                exportAs: 'cdkConnectedOverlay'\n            }]\n    }], function () { return [{ type: Overlay }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, { viewportMargin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayViewportMargin']\n        }], open: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOpen']\n        }], backdropClick: [{\n            type: Output\n        }], positionChange: [{\n            type: Output\n        }], attach: [{\n            type: Output\n        }], detach: [{\n            type: Output\n        }], overlayKeydown: [{\n            type: Output\n        }], scrollStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayScrollStrategy']\n        }], offsetX: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetX']\n        }], offsetY: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOffsetY']\n        }], hasBackdrop: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHasBackdrop']\n        }], lockPosition: [{\n            type: Input,\n            args: ['cdkConnectedOverlayLockPosition']\n        }], flexibleDimensions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayFlexibleDimensions']\n        }], growAfterOpen: [{\n            type: Input,\n            args: ['cdkConnectedOverlayGrowAfterOpen']\n        }], push: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPush']\n        }], positions: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositions']\n        }], origin: [{\n            type: Input,\n            args: ['cdkConnectedOverlayOrigin']\n        }], positionStrategy: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPositionStrategy']\n        }], width: [{\n            type: Input,\n            args: ['cdkConnectedOverlayWidth']\n        }], height: [{\n            type: Input,\n            args: ['cdkConnectedOverlayHeight']\n        }], minWidth: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinWidth']\n        }], minHeight: [{\n            type: Input,\n            args: ['cdkConnectedOverlayMinHeight']\n        }], backdropClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayBackdropClass']\n        }], panelClass: [{\n            type: Input,\n            args: ['cdkConnectedOverlayPanelClass']\n        }], transformOriginSelector: [{\n            type: Input,\n            args: ['cdkConnectedOverlayTransformOriginOn']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_hasBackdrop;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_lockPosition;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_flexibleDimensions;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_growAfterOpen;\n    /** @type {?} */\n    CdkConnectedOverlay.ngAcceptInputType_push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._templatePortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._lockPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._growAfterOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._flexibleDimensions;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._push;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._backdropSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetX;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._offsetY;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._scrollStrategyFactory;\n    /**\n     * Origin for the connected overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.origin;\n    /**\n     * Registered connected position pairs.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positions;\n    /**\n     * This input overrides the positions input if specified. It lets users pass\n     * in arbitrary positioning strategies.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionStrategy;\n    /**\n     * The width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.width;\n    /**\n     * The height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.height;\n    /**\n     * The min width of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minWidth;\n    /**\n     * The min height of the overlay panel.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.minHeight;\n    /**\n     * The custom class to be set on the backdrop element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClass;\n    /**\n     * The custom class to add to the overlay pane element.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.panelClass;\n    /**\n     * Margin between the overlay and the viewport edges.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.viewportMargin;\n    /**\n     * Strategy to be used when handling scroll events while the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.scrollStrategy;\n    /**\n     * Whether the overlay is open.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.open;\n    /**\n     * CSS selector which to set the transform origin.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.transformOriginSelector;\n    /**\n     * Event emitted when the backdrop is clicked.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.backdropClick;\n    /**\n     * Event emitted when the position has changed.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.positionChange;\n    /**\n     * Event emitted when the overlay has been attached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.attach;\n    /**\n     * Event emitted when the overlay has been detached.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.detach;\n    /**\n     * Emits when there are keyboard events that are targeted at the overlay.\n     * @type {?}\n     */\n    CdkConnectedOverlay.prototype.overlayKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkConnectedOverlay.prototype._dir;\n}\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n    provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/overlay-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass OverlayModule {\n}\nOverlayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: OverlayModule });\nOverlayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function OverlayModule_Factory(t) { return new (t || OverlayModule)(); }, providers: [\n        Overlay,\n        CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n    ], imports: [[BidiModule, PortalModule, ScrollingModule],\n        ScrollingModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(OverlayModule, { declarations: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin]; }, imports: function () { return [BidiModule, PortalModule, ScrollingModule]; }, exports: function () { return [CdkConnectedOverlay,\n        CdkOverlayOrigin,\n        ScrollingModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(OverlayModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PortalModule, ScrollingModule],\n                exports: [CdkConnectedOverlay, CdkOverlayOrigin, ScrollingModule],\n                declarations: [CdkConnectedOverlay, CdkOverlayOrigin],\n                providers: [\n                    Overlay,\n                    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n                ]\n            }]\n    }], null, null); })();\n/**\n * @deprecated Use `OverlayModule` instead.\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst OVERLAY_PROVIDERS = [\n    Overlay,\n    OverlayPositionBuilder,\n    OVERLAY_KEYBOARD_DISPATCHER_PROVIDER,\n    OVERLAY_CONTAINER_PROVIDER,\n    CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER,\n];\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/fullscreen-overlay-container.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nclass FullscreenOverlayContainer extends OverlayContainer {\n    /**\n     * @param {?} _document\n     * @param {?=} platform\n     */\n    constructor(_document, \n    /**\n     * @deprecated `platform` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    platform) {\n        super(_document, platform);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._fullScreenEventName && this._fullScreenListener) {\n            this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _createContainer() {\n        super._createContainer();\n        this._adjustParentForFullscreenChange();\n        this._addFullscreenChangeListener((/**\n         * @return {?}\n         */\n        () => this._adjustParentForFullscreenChange()));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _adjustParentForFullscreenChange() {\n        if (!this._containerElement) {\n            return;\n        }\n        /** @type {?} */\n        const fullscreenElement = this.getFullscreenElement();\n        /** @type {?} */\n        const parent = fullscreenElement || this._document.body;\n        parent.appendChild(this._containerElement);\n    }\n    /**\n     * @private\n     * @param {?} fn\n     * @return {?}\n     */\n    _addFullscreenChangeListener(fn) {\n        /** @type {?} */\n        const eventName = this._getEventName();\n        if (eventName) {\n            if (this._fullScreenListener) {\n                this._document.removeEventListener(eventName, this._fullScreenListener);\n            }\n            this._document.addEventListener(eventName, fn);\n            this._fullScreenListener = fn;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getEventName() {\n        if (!this._fullScreenEventName) {\n            /** @type {?} */\n            const _document = (/** @type {?} */ (this._document));\n            if (_document.fullscreenEnabled) {\n                this._fullScreenEventName = 'fullscreenchange';\n            }\n            else if (_document.webkitFullscreenEnabled) {\n                this._fullScreenEventName = 'webkitfullscreenchange';\n            }\n            else if (_document.mozFullScreenEnabled) {\n                this._fullScreenEventName = 'mozfullscreenchange';\n            }\n            else if (_document.msFullscreenEnabled) {\n                this._fullScreenEventName = 'MSFullscreenChange';\n            }\n        }\n        return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     * @return {?}\n     */\n    getFullscreenElement() {\n        /** @type {?} */\n        const _document = (/** @type {?} */ (this._document));\n        return _document.fullscreenElement ||\n            _document.webkitFullscreenElement ||\n            _document.mozFullScreenElement ||\n            _document.msFullscreenElement ||\n            null;\n    }\n}\nFullscreenOverlayContainer.ɵfac = function FullscreenOverlayContainer_Factory(t) { return new (t || FullscreenOverlayContainer)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\n/** @nocollapse */\nFullscreenOverlayContainer.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\n/** @nocollapse */ FullscreenOverlayContainer.ɵprov = ɵɵdefineInjectable({ factory: function FullscreenOverlayContainer_Factory() { return new FullscreenOverlayContainer(ɵɵinject(DOCUMENT), ɵɵinject(Platform)); }, token: FullscreenOverlayContainer, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FullscreenOverlayContainer, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenEventName;\n    /**\n     * @type {?}\n     * @private\n     */\n    FullscreenOverlayContainer.prototype._fullScreenListener;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/overlay/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectedPositionStrategy, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, OVERLAY_PROVIDERS, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition, OVERLAY_CONTAINER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_a, OVERLAY_CONTAINER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_b, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY as ɵangular_material_src_cdk_overlay_overlay_c, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_d, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_e, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER_FACTORY as ɵangular_material_src_cdk_overlay_overlay_f, OVERLAY_KEYBOARD_DISPATCHER_PROVIDER as ɵangular_material_src_cdk_overlay_overlay_g };\n\n//# sourceMappingURL=overlay.js.map","import { Injectable, Optional, Inject, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * @type {?}\n     */\n    Platform.prototype.isBrowser;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     * @type {?}\n     */\n    Platform.prototype.EDGE;\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     * @type {?}\n     */\n    Platform.prototype.TRIDENT;\n    /**\n     * Whether the current rendering engine is Blink.\n     * @type {?}\n     */\n    Platform.prototype.BLINK;\n    /**\n     * Whether the current rendering engine is WebKit.\n     * @type {?}\n     */\n    Platform.prototype.WEBKIT;\n    /**\n     * Whether the current platform is Apple iOS.\n     * @type {?}\n     */\n    Platform.prototype.IOS;\n    /**\n     * Whether the current browser is Firefox.\n     * @type {?}\n     */\n    Platform.prototype.FIREFOX;\n    /**\n     * Whether the current platform is Android.\n     * @type {?}\n     */\n    Platform.prototype.ANDROID;\n    /**\n     * Whether the current browser is Safari.\n     * @type {?}\n     */\n    Platform.prototype.SAFARI;\n    /**\n     * @type {?}\n     * @private\n     */\n    Platform.prototype._platformId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/input-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/passive-listeners.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/scrolling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/shadow-dom.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { ElementRef, Directive, TemplateRef, ViewContainerRef, EventEmitter, ComponentFactoryResolver, Inject, Output, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception when attempting to attach a null portal to a host.\n * \\@docs-private\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction throwNullPortalError() {\n    throw Error('Must provide a portal to attach');\n}\n/**\n * Throws an exception when attempting to attach a portal to a host that is already attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalAlreadyAttachedError() {\n    throw Error('Host already has a portal attached');\n}\n/**\n * Throws an exception when attempting to attach a portal to an already-disposed host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwPortalOutletAlreadyDisposedError() {\n    throw Error('This PortalOutlet has already been disposed');\n}\n/**\n * Throws an exception when attempting to attach an unknown portal type.\n * \\@docs-private\n * @return {?}\n */\nfunction throwUnknownPortalTypeError() {\n    throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\n        'a ComponentPortal or a TemplatePortal.');\n}\n/**\n * Throws an exception when attempting to attach a portal to a null host.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNullPortalOutletError() {\n    throw Error('Attempting to attach a portal to a null PortalOutlet');\n}\n/**\n * Throws an exception when attempting to detach a portal that is not attached.\n * \\@docs-private\n * @return {?}\n */\nfunction throwNoPortalAttachedError() {\n    throw Error('Attempting to detach a portal that is not attached to a host');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that can be used to generically type a class.\n * @record\n * @template T\n */\nfunction ComponentType() { }\n/**\n * A `Portal` is something that you want to render somewhere else.\n * It can be attach to / detached from a `PortalOutlet`.\n * @abstract\n * @template T\n */\nclass Portal {\n    /**\n     * Attach this portal to a host.\n     * @param {?} host\n     * @return {?}\n     */\n    attach(host) {\n        if (host == null) {\n            throwNullPortalOutletError();\n        }\n        if (host.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        this._attachedHost = host;\n        return (/** @type {?} */ (host.attach(this)));\n    }\n    /**\n     * Detach this portal from its host\n     * @return {?}\n     */\n    detach() {\n        /** @type {?} */\n        let host = this._attachedHost;\n        if (host == null) {\n            throwNoPortalAttachedError();\n        }\n        else {\n            this._attachedHost = null;\n            host.detach();\n        }\n    }\n    /**\n     * Whether this portal is attached to a host.\n     * @return {?}\n     */\n    get isAttached() {\n        return this._attachedHost != null;\n    }\n    /**\n     * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\n     * the PortalOutlet when it is performing an `attach()` or `detach()`.\n     * @param {?} host\n     * @return {?}\n     */\n    setAttachedHost(host) {\n        this._attachedHost = host;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    Portal.prototype._attachedHost;\n}\n/**\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\n * @template T\n */\nclass ComponentPortal extends Portal {\n    /**\n     * @param {?} component\n     * @param {?=} viewContainerRef\n     * @param {?=} injector\n     * @param {?=} componentFactoryResolver\n     */\n    constructor(component, viewContainerRef, injector, componentFactoryResolver) {\n        super();\n        this.component = component;\n        this.viewContainerRef = viewContainerRef;\n        this.injector = injector;\n        this.componentFactoryResolver = componentFactoryResolver;\n    }\n}\nif (false) {\n    /**\n     * The type of the component that will be instantiated for attachment.\n     * @type {?}\n     */\n    ComponentPortal.prototype.component;\n    /**\n     * [Optional] Where the attached component should live in Angular's *logical* component tree.\n     * This is different from where the component *renders*, which is determined by the PortalOutlet.\n     * The origin is necessary when the host is outside of the Angular application context.\n     * @type {?}\n     */\n    ComponentPortal.prototype.viewContainerRef;\n    /**\n     * [Optional] Injector used for the instantiation of the component.\n     * @type {?}\n     */\n    ComponentPortal.prototype.injector;\n    /**\n     * Alternate `ComponentFactoryResolver` to use when resolving the associated component.\n     * Defaults to using the resolver from the outlet that the portal is attached to.\n     * @type {?}\n     */\n    ComponentPortal.prototype.componentFactoryResolver;\n}\n/**\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\n * @template C\n */\nclass TemplatePortal extends Portal {\n    /**\n     * @param {?} template\n     * @param {?} viewContainerRef\n     * @param {?=} context\n     */\n    constructor(template, viewContainerRef, context) {\n        super();\n        this.templateRef = template;\n        this.viewContainerRef = viewContainerRef;\n        this.context = context;\n    }\n    /**\n     * @return {?}\n     */\n    get origin() {\n        return this.templateRef.elementRef;\n    }\n    /**\n     * Attach the portal to the provided `PortalOutlet`.\n     * When a context is provided it will override the `context` property of the `TemplatePortal`\n     * instance.\n     * @param {?} host\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(host, context = this.context) {\n        this.context = context;\n        return super.attach(host);\n    }\n    /**\n     * @return {?}\n     */\n    detach() {\n        this.context = undefined;\n        return super.detach();\n    }\n}\nif (false) {\n    /**\n     * The embedded template that will be used to instantiate an embedded View in the host.\n     * @type {?}\n     */\n    TemplatePortal.prototype.templateRef;\n    /**\n     * Reference to the ViewContainer into which the template will be stamped out.\n     * @type {?}\n     */\n    TemplatePortal.prototype.viewContainerRef;\n    /**\n     * Contextual data to be passed in to the embedded view.\n     * @type {?}\n     */\n    TemplatePortal.prototype.context;\n}\n/**\n * A `DomPortal` is a portal whose DOM element will be taken from its current position\n * in the DOM and moved into a portal outlet, when it is attached. On detach, the content\n * will be restored to its original position.\n * @template T\n */\nclass DomPortal extends Portal {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        super();\n        this.element = element instanceof ElementRef ? element.nativeElement : element;\n    }\n}\nif (false) {\n    /**\n     * DOM node hosting the portal's content.\n     * @type {?}\n     */\n    DomPortal.prototype.element;\n}\n/**\n * A `PortalOutlet` is an space that can contain a single `Portal`.\n * @record\n */\nfunction PortalOutlet() { }\nif (false) {\n    /**\n     * Attaches a portal to this outlet.\n     * @param {?} portal\n     * @return {?}\n     */\n    PortalOutlet.prototype.attach = function (portal) { };\n    /**\n     * Detaches the currently attached portal from this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.detach = function () { };\n    /**\n     * Performs cleanup before the outlet is destroyed.\n     * @return {?}\n     */\n    PortalOutlet.prototype.dispose = function () { };\n    /**\n     * Whether there is currently a portal attached to this outlet.\n     * @return {?}\n     */\n    PortalOutlet.prototype.hasAttached = function () { };\n}\n/**\n * Partial implementation of PortalOutlet that handles attaching\n * ComponentPortal and TemplatePortal.\n * @abstract\n */\nclass BasePortalOutlet {\n    constructor() {\n        /**\n         * Whether this host has already been permanently disposed.\n         */\n        this._isDisposed = false;\n        // @breaking-change 10.0.0 `attachDomPortal` to become a required abstract method.\n        this.attachDomPortal = null;\n    }\n    /**\n     * Whether this host has an attached portal.\n     * @return {?}\n     */\n    hasAttached() {\n        return !!this._attachedPortal;\n    }\n    /**\n     * Attaches a portal.\n     * @param {?} portal\n     * @return {?}\n     */\n    attach(portal) {\n        if (!portal) {\n            throwNullPortalError();\n        }\n        if (this.hasAttached()) {\n            throwPortalAlreadyAttachedError();\n        }\n        if (this._isDisposed) {\n            throwPortalOutletAlreadyDisposedError();\n        }\n        if (portal instanceof ComponentPortal) {\n            this._attachedPortal = portal;\n            return this.attachComponentPortal(portal);\n        }\n        else if (portal instanceof TemplatePortal) {\n            this._attachedPortal = portal;\n            return this.attachTemplatePortal(portal);\n            // @breaking-change 10.0.0 remove null check for `this.attachDomPortal`.\n        }\n        else if (this.attachDomPortal && portal instanceof DomPortal) {\n            this._attachedPortal = portal;\n            return this.attachDomPortal(portal);\n        }\n        throwUnknownPortalTypeError();\n    }\n    /**\n     * Detaches a previously attached portal.\n     * @return {?}\n     */\n    detach() {\n        if (this._attachedPortal) {\n            this._attachedPortal.setAttachedHost(null);\n            this._attachedPortal = null;\n        }\n        this._invokeDisposeFn();\n    }\n    /**\n     * Permanently dispose of this portal host.\n     * @return {?}\n     */\n    dispose() {\n        if (this.hasAttached()) {\n            this.detach();\n        }\n        this._invokeDisposeFn();\n        this._isDisposed = true;\n    }\n    /**\n     * \\@docs-private\n     * @param {?} fn\n     * @return {?}\n     */\n    setDisposeFn(fn) {\n        this._disposeFn = fn;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _invokeDisposeFn() {\n        if (this._disposeFn) {\n            this._disposeFn();\n            this._disposeFn = null;\n        }\n    }\n}\nif (false) {\n    /**\n     * The portal currently attached to the host.\n     * @type {?}\n     * @protected\n     */\n    BasePortalOutlet.prototype._attachedPortal;\n    /**\n     * A function that will permanently dispose this host.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._disposeFn;\n    /**\n     * Whether this host has already been permanently disposed.\n     * @type {?}\n     * @private\n     */\n    BasePortalOutlet.prototype._isDisposed;\n    /** @type {?} */\n    BasePortalOutlet.prototype.attachDomPortal;\n    /**\n     * @abstract\n     * @template T\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachComponentPortal = function (portal) { };\n    /**\n     * @abstract\n     * @template C\n     * @param {?} portal\n     * @return {?}\n     */\n    BasePortalOutlet.prototype.attachTemplatePortal = function (portal) { };\n}\n/**\n * @deprecated Use `BasePortalOutlet` instead.\n * \\@breaking-change 9.0.0\n * @abstract\n */\nclass BasePortalHost extends BasePortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/dom-portal-outlet.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\n * application context.\n */\nclass DomPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} outletElement\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _defaultInjector\n     * @param {?=} _document\n     */\n    constructor(outletElement, _componentFactoryResolver, _appRef, _defaultInjector, \n    /**\n     * @deprecated `_document` Parameter to be made required.\n     * @breaking-change 10.0.0\n     */\n    _document) {\n        super();\n        this.outletElement = outletElement;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._defaultInjector = _defaultInjector;\n        /**\n         * Attaches a DOM portal by transferring its content into the outlet.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 10.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            element.parentNode.insertBefore(anchorNode, element);\n            this.outletElement.appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                // We can't use `replaceWith` here because IE doesn't support it.\n                if (anchorNode.parentNode) {\n                    anchorNode.parentNode.replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\n     * @template T\n     * @param {?} portal Portal to be attached\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        let componentRef;\n        // If the portal specifies a ViewContainerRef, we will use that as the attachment point\n        // for the component (in terms of Angular's component tree, not rendering).\n        // When the ViewContainerRef is missing, we use the factory to create the component directly\n        // and then manually attach the view to the application.\n        if (portal.viewContainerRef) {\n            componentRef = portal.viewContainerRef.createComponent(componentFactory, portal.viewContainerRef.length, portal.injector || portal.viewContainerRef.injector);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => componentRef.destroy()));\n        }\n        else {\n            componentRef = componentFactory.create(portal.injector || this._defaultInjector);\n            this._appRef.attachView(componentRef.hostView);\n            this.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                this._appRef.detachView(componentRef.hostView);\n                componentRef.destroy();\n            }));\n        }\n        // At this point the component has been instantiated, so we move it to the location in the DOM\n        // where we want it to be rendered.\n        this.outletElement.appendChild(this._getComponentRootNode(componentRef));\n        return componentRef;\n    }\n    /**\n     * Attaches a template portal to the DOM as an embedded view.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        /** @type {?} */\n        let viewContainer = portal.viewContainerRef;\n        /** @type {?} */\n        let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\n        viewRef.detectChanges();\n        // The method `createEmbeddedView` will add the view as a child of the viewContainer.\n        // But for the DomPortalOutlet the view can be added everywhere in the DOM\n        // (e.g Overlay Container) To move the view to the specified host element. We just\n        // re-append the existing root nodes.\n        viewRef.rootNodes.forEach((/**\n         * @param {?} rootNode\n         * @return {?}\n         */\n        rootNode => this.outletElement.appendChild(rootNode)));\n        this.setDisposeFn(((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let index = viewContainer.indexOf(viewRef);\n            if (index !== -1) {\n                viewContainer.remove(index);\n            }\n        })));\n        // TODO(jelbourn): Return locals from view.\n        return viewRef;\n    }\n    /**\n     * Clears out a portal from the DOM.\n     * @return {?}\n     */\n    dispose() {\n        super.dispose();\n        if (this.outletElement.parentNode != null) {\n            this.outletElement.parentNode.removeChild(this.outletElement);\n        }\n    }\n    /**\n     * Gets the root HTMLElement for an instantiated component.\n     * @private\n     * @param {?} componentRef\n     * @return {?}\n     */\n    _getComponentRootNode(componentRef) {\n        return (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView))).rootNodes[0]));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._document;\n    /**\n     * Attaches a DOM portal by transferring its content into the outlet.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.attachDomPortal;\n    /**\n     * Element into which the content is projected.\n     * @type {?}\n     */\n    DomPortalOutlet.prototype.outletElement;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    DomPortalOutlet.prototype._defaultInjector;\n}\n/**\n * @deprecated Use `DomPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass DomPortalHost extends DomPortalOutlet {\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-directives.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n */\nclass CdkPortal extends TemplatePortal {\n    /**\n     * @param {?} templateRef\n     * @param {?} viewContainerRef\n     */\n    constructor(templateRef, viewContainerRef) {\n        super(templateRef, viewContainerRef);\n    }\n}\nCdkPortal.ɵfac = function CdkPortal_Factory(t) { return new (t || CdkPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkPortal.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortal, selectors: [[\"\", \"cdkPortal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortal.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortal]',\n                exportAs: 'cdkPortal'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ViewContainerRef }]; }, null); })();\n/**\n * @deprecated Use `CdkPortal` instead.\n * \\@breaking-change 9.0.0\n */\nclass TemplatePortalDirective extends CdkPortal {\n}\nTemplatePortalDirective.ɵfac = function TemplatePortalDirective_Factory(t) { return ɵTemplatePortalDirective_BaseFactory(t || TemplatePortalDirective); };\nTemplatePortalDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TemplatePortalDirective, selectors: [[\"\", \"cdk-portal\", \"\"], [\"\", \"portal\", \"\"]], exportAs: [\"cdkPortal\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortal,\n                useExisting: TemplatePortalDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵTemplatePortalDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(TemplatePortalDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TemplatePortalDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-portal], [portal]',\n                exportAs: 'cdkPortal',\n                providers: [{\n                        provide: CdkPortal,\n                        useExisting: TemplatePortalDirective\n                    }]\n            }]\n    }], null, null); })();\n/**\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\n */\nclass CdkPortalOutlet extends BasePortalOutlet {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _viewContainerRef\n     * @param {?=} _document\n     */\n    constructor(_componentFactoryResolver, _viewContainerRef, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super();\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._viewContainerRef = _viewContainerRef;\n        /**\n         * Whether the portal component is initialized.\n         */\n        this._isInitialized = false;\n        /**\n         * Emits when a portal is attached to the outlet.\n         */\n        this.attached = new EventEmitter();\n        /**\n         * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n         * @param portal Portal to be attached.\n         * @deprecated To be turned into a method.\n         * \\@breaking-change 10.0.0\n         */\n        this.attachDomPortal = (/**\n         * @param {?} portal\n         * @return {?}\n         */\n        (portal) => {\n            // @breaking-change 9.0.0 Remove check and error once the\n            // `_document` constructor parameter is required.\n            if (!this._document) {\n                throw Error('Cannot attach DOM portal without _document constructor parameter');\n            }\n            /** @type {?} */\n            const element = portal.element;\n            if (!element.parentNode) {\n                throw Error('DOM portal content must be attached to a parent node.');\n            }\n            // Anchor used to save the element's previous position so\n            // that we can restore it when the portal is detached.\n            /** @type {?} */\n            const anchorNode = this._document.createComment('dom-portal');\n            portal.setAttachedHost(this);\n            element.parentNode.insertBefore(anchorNode, element);\n            this._getRootNode().appendChild(element);\n            super.setDisposeFn((/**\n             * @return {?}\n             */\n            () => {\n                if (anchorNode.parentNode) {\n                    (/** @type {?} */ (anchorNode.parentNode)).replaceChild(element, anchorNode);\n                }\n            }));\n        });\n        this._document = _document;\n    }\n    /**\n     * Portal associated with the Portal outlet.\n     * @return {?}\n     */\n    get portal() {\n        return this._attachedPortal;\n    }\n    /**\n     * @param {?} portal\n     * @return {?}\n     */\n    set portal(portal) {\n        // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\n        // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\n        // and attach a portal programmatically in the parent component. When Angular does the first CD\n        // round, it will fire the setter with empty string, causing the user's content to be cleared.\n        if (this.hasAttached() && !portal && !this._isInitialized) {\n            return;\n        }\n        if (this.hasAttached()) {\n            super.detach();\n        }\n        if (portal) {\n            super.attach(portal);\n        }\n        this._attachedPortal = portal;\n    }\n    /**\n     * Component or view reference that is attached to the portal.\n     * @return {?}\n     */\n    get attachedRef() {\n        return this._attachedRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.dispose();\n        this._attachedPortal = null;\n        this._attachedRef = null;\n    }\n    /**\n     * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\n     *\n     * @template T\n     * @param {?} portal Portal to be attached to the portal outlet.\n     * @return {?} Reference to the created component.\n     */\n    attachComponentPortal(portal) {\n        portal.setAttachedHost(this);\n        // If the portal specifies an origin, use that as the logical location of the component\n        // in the application tree. Otherwise use the location of this PortalOutlet.\n        /** @type {?} */\n        const viewContainerRef = portal.viewContainerRef != null ?\n            portal.viewContainerRef :\n            this._viewContainerRef;\n        /** @type {?} */\n        const resolver = portal.componentFactoryResolver || this._componentFactoryResolver;\n        /** @type {?} */\n        const componentFactory = resolver.resolveComponentFactory(portal.component);\n        /** @type {?} */\n        const ref = viewContainerRef.createComponent(componentFactory, viewContainerRef.length, portal.injector || viewContainerRef.injector);\n        // If we're using a view container that's different from the injected one (e.g. when the portal\n        // specifies its own) we need to move the component into the outlet, otherwise it'll be rendered\n        // inside of the alternate view container.\n        if (viewContainerRef !== this._viewContainerRef) {\n            this._getRootNode().appendChild(((/** @type {?} */ (ref.hostView))).rootNodes[0]);\n        }\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => ref.destroy()));\n        this._attachedPortal = portal;\n        this._attachedRef = ref;\n        this.attached.emit(ref);\n        return ref;\n    }\n    /**\n     * Attach the given TemplatePortal to this PortalHost as an embedded View.\n     * @template C\n     * @param {?} portal Portal to be attached.\n     * @return {?} Reference to the created embedded view.\n     */\n    attachTemplatePortal(portal) {\n        portal.setAttachedHost(this);\n        /** @type {?} */\n        const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\n        super.setDisposeFn((/**\n         * @return {?}\n         */\n        () => this._viewContainerRef.clear()));\n        this._attachedPortal = portal;\n        this._attachedRef = viewRef;\n        this.attached.emit(viewRef);\n        return viewRef;\n    }\n    /**\n     * Gets the root node of the portal outlet.\n     * @private\n     * @return {?}\n     */\n    _getRootNode() {\n        /** @type {?} */\n        const nativeElement = this._viewContainerRef.element.nativeElement;\n        // The directive could be set on a template which will result in a comment\n        // node being the root. Use the comment's parent node if that is the case.\n        return (/** @type {?} */ ((nativeElement.nodeType === nativeElement.ELEMENT_NODE ?\n            nativeElement : (/** @type {?} */ (nativeElement.parentNode)))));\n    }\n}\nCdkPortalOutlet.ɵfac = function CdkPortalOutlet_Factory(t) { return new (t || CdkPortalOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkPortalOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkPortalOutlet, selectors: [[\"\", \"cdkPortalOutlet\", \"\"]], inputs: { portal: [\"cdkPortalOutlet\", \"portal\"] }, outputs: { attached: \"attached\" }, exportAs: [\"cdkPortalOutlet\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkPortalOutlet.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkPortalOutlet.propDecorators = {\n    attached: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkPortalOutlet, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalOutlet]',\n                exportAs: 'cdkPortalOutlet',\n                inputs: ['portal: cdkPortalOutlet']\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { attached: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkPortalOutlet.ngAcceptInputType_portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._document;\n    /**\n     * Whether the portal component is initialized.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._isInitialized;\n    /**\n     * Reference to the currently-attached component/view ref.\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._attachedRef;\n    /**\n     * Emits when a portal is attached to the outlet.\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attached;\n    /**\n     * Attaches the given DomPortal to this PortalHost by moving all of the portal content into it.\n     * \\@param portal Portal to be attached.\n     * @deprecated To be turned into a method.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    CdkPortalOutlet.prototype.attachDomPortal;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkPortalOutlet.prototype._viewContainerRef;\n}\n/**\n * @deprecated Use `CdkPortalOutlet` instead.\n * \\@breaking-change 9.0.0\n */\nclass PortalHostDirective extends CdkPortalOutlet {\n}\nPortalHostDirective.ɵfac = function PortalHostDirective_Factory(t) { return ɵPortalHostDirective_BaseFactory(t || PortalHostDirective); };\nPortalHostDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: PortalHostDirective, selectors: [[\"\", \"cdkPortalHost\", \"\"], [\"\", \"portalHost\", \"\"]], inputs: { portal: [\"cdkPortalHost\", \"portal\"] }, exportAs: [\"cdkPortalHost\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkPortalOutlet,\n                useExisting: PortalHostDirective\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵPortalHostDirective_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(PortalHostDirective);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalHostDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkPortalHost], [portalHost]',\n                exportAs: 'cdkPortalHost',\n                inputs: ['portal: cdkPortalHost'],\n                providers: [{\n                        provide: CdkPortalOutlet,\n                        useExisting: PortalHostDirective\n                    }]\n            }]\n    }], null, null); })();\nclass PortalModule {\n}\nPortalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PortalModule });\nPortalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PortalModule_Factory(t) { return new (t || PortalModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PortalModule, { declarations: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective], exports: [CdkPortal,\n        CdkPortalOutlet,\n        TemplatePortalDirective,\n        PortalHostDirective] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PortalModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective],\n                declarations: [CdkPortal, CdkPortalOutlet, TemplatePortalDirective, PortalHostDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/portal-injector.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Custom injector to be used when providing custom\n * injection tokens to components inside a portal.\n * \\@docs-private\n */\nclass PortalInjector {\n    /**\n     * @param {?} _parentInjector\n     * @param {?} _customTokens\n     */\n    constructor(_parentInjector, _customTokens) {\n        this._parentInjector = _parentInjector;\n        this._customTokens = _customTokens;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    get(token, notFoundValue) {\n        /** @type {?} */\n        const value = this._customTokens.get(token);\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n        return this._parentInjector.get(token, notFoundValue);\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._parentInjector;\n    /**\n     * @type {?}\n     * @private\n     */\n    PortalInjector.prototype._customTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/portal/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BasePortalHost, BasePortalOutlet, CdkPortal, CdkPortalOutlet, ComponentPortal, DomPortal, DomPortalHost, DomPortalOutlet, Portal, PortalHostDirective, PortalInjector, PortalModule, TemplatePortal, TemplatePortalDirective };\n\n//# sourceMappingURL=portal.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, ElementRef, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature()] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[BidiModule, PlatformModule],\n        BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule,\n        CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { isDataSource } from '@angular/cdk/collections';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction CdkTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r18 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r18.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r18.headerText, \" \");\n} }\nfunction CdkTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r20 = ctx.$implicit;\n    const ctx_r19 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r19.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r19.dataAccessor(data_r20, ctx_r19.name), \" \");\n} }\nexport { DataSource } from '@angular/cdk/collections';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, TemplateRef, Input, ContentChild, ElementRef, IterableDiffers, ViewContainerRef, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, isDevMode, ChangeDetectorRef, Attribute, Optional, Inject, ViewChild, ContentChildren, InjectionToken, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/can-stick.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @record\n */\nfunction CanStick() { }\nif (false) {\n    /**\n     * Whether sticky positioning should be applied.\n     * @type {?}\n     */\n    CanStick.prototype.sticky;\n    /**\n     * Whether the sticky input has changed since it was last checked.\n     * @type {?}\n     */\n    CanStick.prototype._hasStickyChanged;\n    /**\n     * Whether the sticky value has changed since this was last called.\n     * @return {?}\n     */\n    CanStick.prototype.hasStickyChanged = function () { };\n    /**\n     * Resets the dirty check for cases where the sticky state has been used without checking.\n     * @return {?}\n     */\n    CanStick.prototype.resetStickyChanged = function () { };\n}\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * \\@docs-private\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /**\n             * Whether the sticky input has changed since it was last checked.\n             */\n            this._hasStickyChanged = false;\n        }\n        /**\n         * Whether sticky positioning should be applied.\n         * @return {?}\n         */\n        get sticky() { return this._sticky; }\n        /**\n         * @param {?} v\n         * @return {?}\n         */\n        set sticky(v) {\n            /** @type {?} */\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /**\n         * Whether the sticky value has changed since this was last called.\n         * @return {?}\n         */\n        hasStickyChanged() {\n            /** @type {?} */\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /**\n         * Resets the dirty check for cases where the sticky state has been used without checking.\n         * @return {?}\n         */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base interface for a cell definition. Captures a column's cell template definition.\n * @record\n */\nfunction CellDef() { }\nif (false) {\n    /** @type {?} */\n    CellDef.prototype.template;\n}\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkCellDef.ɵfac = function CdkCellDef_Factory(t) { return new (t || CdkCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellDef, selectors: [[\"\", \"cdkCellDef\", \"\"]] });\n/** @nocollapse */\nCdkCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkCellDef.prototype.template;\n}\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) { return new (t || CdkHeaderCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCellDef, selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]] });\n/** @nocollapse */\nCdkHeaderCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkHeaderCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkHeaderCellDef.prototype.template;\n}\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) { return new (t || CdkFooterCellDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCellDef, selectors: [[\"\", \"cdkFooterCellDef\", \"\"]] });\n/** @nocollapse */\nCdkFooterCellDef.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCellDef, [{\n        type: Directive,\n        args: [{ selector: '[cdkFooterCellDef]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkFooterCellDef.prototype.template;\n}\n// Boilerplate for applying mixins to CdkColumnDef.\n/**\n * \\@docs-private\n */\nclass CdkColumnDefBase {\n}\n/** @type {?} */\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    constructor() {\n        super(...arguments);\n        this._stickyEnd = false;\n    }\n    /**\n     * Unique name for this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        // If the directive is set without a name (updated programatically), then this setter will\n        // trigger with an empty string and should not overwrite the programatically set value.\n        if (!name) {\n            return;\n        }\n        this._name = name;\n        this.cssClassFriendlyName = name.replace(/[^a-z0-9_-]/ig, '-');\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     * @return {?}\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set stickyEnd(v) {\n        /** @type {?} */\n        const prevValue = this._stickyEnd;\n        this._stickyEnd = coerceBooleanProperty(v);\n        this._hasStickyChanged = prevValue !== this._stickyEnd;\n    }\n}\nCdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) { return ɵCdkColumnDef_BaseFactory(t || CdkColumnDef); };\nCdkColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkColumnDef, selectors: [[\"\", \"cdkColumnDef\", \"\"]], contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n    } }, inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: \"stickyEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nCdkColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['cdkColumnDef',] }],\n    stickyEnd: [{ type: Input, args: ['stickyEnd',] }],\n    cell: [{ type: ContentChild, args: [CdkCellDef,] }],\n    headerCell: [{ type: ContentChild, args: [CdkHeaderCellDef,] }],\n    footerCell: [{ type: ContentChild, args: [CdkFooterCellDef,] }]\n};\nconst ɵCdkColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(CdkColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkColumnDef]',\n                inputs: ['sticky'],\n                providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['cdkColumnDef']\n        }], stickyEnd: [{\n            type: Input,\n            args: ['stickyEnd']\n        }], cell: [{\n            type: ContentChild,\n            args: [CdkCellDef]\n        }], headerCell: [{\n            type: ContentChild,\n            args: [CdkHeaderCellDef]\n        }], footerCell: [{\n            type: ContentChild,\n            args: [CdkFooterCellDef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_sticky;\n    /** @type {?} */\n    CdkColumnDef.ngAcceptInputType_stickyEnd;\n    /** @type {?} */\n    CdkColumnDef.prototype._name;\n    /** @type {?} */\n    CdkColumnDef.prototype._stickyEnd;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.headerCell;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkColumnDef.prototype.footerCell;\n    /**\n     * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n     * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n     * do not match are replaced by the '-' character.\n     * @type {?}\n     */\n    CdkColumnDef.prototype.cssClassFriendlyName;\n}\n/**\n * Base class for the cells. Adds a CSS classname that identifies the column it renders in.\n */\nclass BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        /** @type {?} */\n        const columnClassName = `cdk-column-${columnDef.cssClassFriendlyName}`;\n        elementRef.nativeElement.classList.add(columnClassName);\n    }\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass CdkHeaderCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) { return new (t || CdkHeaderCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderCell, selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-header-cell, th[cdk-header-cell]',\n                host: {\n                    'class': 'cdk-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass CdkFooterCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) { return new (t || CdkFooterCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterCell, selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                host: {\n                    'class': 'cdk-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass CdkCell extends BaseCdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n}\nCdkCell.ɵfac = function CdkCell_Factory(t) { return new (t || CdkCell)(ɵngcc0.ɵɵdirectiveInject(CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCell, selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"cdk-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCell, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-cell, td[cdk-cell]',\n                host: {\n                    'class': 'cdk-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @type {?}\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n * @abstract\n */\nclass BaseRowDef {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            /** @type {?} */\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     * @return {?}\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /**\n     * Gets this row def's relevant cell template from the provided column def.\n     * @param {?} column\n     * @return {?}\n     */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n}\nBaseRowDef.ɵfac = function BaseRowDef_Factory(t) { ɵngcc0.ɵɵinvalidFactory(); };\nBaseRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: BaseRowDef, features: [ɵngcc0.ɵɵNgOnChangesFeature()] });\n\nif (false) {\n    /**\n     * The columns to be displayed on this row.\n     * @type {?}\n     */\n    BaseRowDef.prototype.columns;\n    /**\n     * Differ used to check if any changes were made to the columns.\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._columnsDiffer;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    BaseRowDef.prototype.template;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BaseRowDef.prototype._differs;\n}\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/**\n * \\@docs-private\n */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) { return new (t || CdkHeaderRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkHeaderRowDef, selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]], inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nCdkHeaderRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkHeaderRowDef]',\n                inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkHeaderRowDef.ngAcceptInputType_sticky;\n}\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/**\n * \\@docs-private\n */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\n/** @type {?} */\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n}\nCdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) { return new (t || CdkFooterRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFooterRowDef, selectors: [[\"\", \"cdkFooterRowDef\", \"\"]], inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nCdkFooterRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkFooterRowDef]',\n                inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    CdkFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    /**\n     * @param {?} template\n     * @param {?} _differs\n     */\n    constructor(template, _differs) {\n        super(template, _differs);\n    }\n}\nCdkRowDef.ɵfac = function CdkRowDef_Factory(t) { return new (t || CdkRowDef)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nCdkRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkRowDef, selectors: [[\"\", \"cdkRowDef\", \"\"]], inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nCdkRowDef.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: IterableDiffers }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkRowDef]',\n                inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }]; }, null); })();\nif (false) {\n    /**\n     * Function that should return true if this row template should be used for the provided index\n     * and row data. If left undefined, this row will be considered the default row template to use\n     * when no other when functions return true for the data.\n     * For every row, there must be at least one when function that passes or an undefined to default.\n     * @type {?}\n     */\n    CdkRowDef.prototype.when;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is false\n * @record\n * @template T\n */\nfunction CdkCellOutletRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.index;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletRowContext.prototype.odd;\n}\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n * @record\n * @template T\n */\nfunction CdkCellOutletMultiRowContext() { }\nif (false) {\n    /**\n     * Data for the row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.$implicit;\n    /**\n     * Index of the data object in the provided data array.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.dataIndex;\n    /**\n     * Index location of the rendered row that this cell is located within.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.renderIndex;\n    /**\n     * Length of the number of total rows.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.count;\n    /**\n     * True if this cell is contained in the first row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.first;\n    /**\n     * True if this cell is contained in the last row.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.last;\n    /**\n     * True if this cell is contained in a row with an even-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.even;\n    /**\n     * True if this cell is contained in a row with an odd-numbered index.\n     * @type {?|undefined}\n     */\n    CdkCellOutletMultiRowContext.prototype.odd;\n}\n/**\n * Outlet for rendering cells inside of a row or header row.\n * \\@docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * @param {?} _viewContainer\n     */\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n}\nCdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) { return new (t || CdkCellOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nCdkCellOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkCellOutlet, selectors: [[\"\", \"cdkCellOutlet\", \"\"]] });\n/**\n * Static property containing the latest constructed instance of this class.\n * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n * createEmbeddedView. After one of these components are created, this property will provide\n * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n * construct the cells with the provided context.\n */\nCdkCellOutlet.mostRecentCellOutlet = null;\n/** @nocollapse */\nCdkCellOutlet.ctorParameters = () => [\n    { type: ViewContainerRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkCellOutlet, [{\n        type: Directive,\n        args: [{ selector: '[cdkCellOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\nif (false) {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     * @type {?}\n     */\n    CdkCellOutlet.mostRecentCellOutlet;\n    /**\n     * The ordered list of cells to render within this outlet's view container\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.cells;\n    /**\n     * The data context to be provided to each cell\n     * @type {?}\n     */\n    CdkCellOutlet.prototype.context;\n    /** @type {?} */\n    CdkCellOutlet.prototype._viewContainer;\n}\n/**\n * Header template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkHeaderRow {\n}\nCdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) { return new (t || CdkHeaderRow)(); };\nCdkHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkHeaderRow, selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-header-row, tr[cdk-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkFooterRow {\n}\nCdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) { return new (t || CdkFooterRow)(); };\nCdkFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkFooterRow, selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass CdkRow {\n}\nCdkRow.ɵfac = function CdkRow_Factory(t) { return new (t || CdkRow)(); };\nCdkRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkRow, selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function CdkRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [CdkCellOutlet], encapsulation: 2 });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkRow, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-row, tr[cdk-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'cdk-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/sticky-styler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * List of all possible directions that can be used for sticky positioning.\n * \\@docs-private\n * @type {?}\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * \\@docs-private\n */\nclass StickyStyler {\n    /**\n     * @param {?} _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param {?} _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param {?} direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param {?=} _isBrowser Whether the table is currently being rendered on the server or the client.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _isBrowser = true) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._isBrowser = _isBrowser;\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param {?} rows The list of rows that should be cleared from sticking in the provided directions\n     * @param {?} stickyDirections The directions that should no longer be set as sticky on the rows.\n     * @return {?}\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            this._removeStickyStyle(row, stickyDirections);\n            for (let i = 0; i < row.children.length; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                this._removeStickyStyle(cell, stickyDirections);\n            }\n        }\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param {?} rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param {?} stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param {?} stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @return {?}\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates) {\n        /** @type {?} */\n        const hasStickyColumns = stickyStartStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state)) || stickyEndStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => state));\n        if (!rows.length || !hasStickyColumns || !this._isBrowser) {\n            return;\n        }\n        /** @type {?} */\n        const firstRow = rows[0];\n        /** @type {?} */\n        const numCells = firstRow.children.length;\n        /** @type {?} */\n        const cellWidths = this._getCellWidths(firstRow);\n        /** @type {?} */\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        /** @type {?} */\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        /** @type {?} */\n        const isRtl = this.direction === 'rtl';\n        for (const row of rows) {\n            for (let i = 0; i < numCells; i++) {\n                /** @type {?} */\n                const cell = (/** @type {?} */ (row.children[i]));\n                if (stickyStartStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'right' : 'left', startPositions[i]);\n                }\n                if (stickyEndStates[i]) {\n                    this._addStickyStyle(cell, isRtl ? 'left' : 'right', endPositions[i]);\n                }\n            }\n        }\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param {?} rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param {?} stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param {?} position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     * @return {?}\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on.\n        /** @type {?} */\n        const rows = position === 'bottom' ? rowsToStick.reverse() : rowsToStick;\n        /** @type {?} */\n        let stickyHeight = 0;\n        for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            if (!stickyStates[rowIndex]) {\n                continue;\n            }\n            /** @type {?} */\n            const row = rows[rowIndex];\n            if (this._isNativeHtmlTable) {\n                for (let j = 0; j < row.children.length; j++) {\n                    /** @type {?} */\n                    const cell = (/** @type {?} */ (row.children[j]));\n                    this._addStickyStyle(cell, position, stickyHeight);\n                }\n            }\n            else {\n                // Flex does not respect the stick positioning on the cells, needs to be applied to the row.\n                // If this is applied on a native table, Safari causes the header to fly in wrong direction.\n                this._addStickyStyle(row, position, stickyHeight);\n            }\n            if (rowIndex === rows.length - 1) {\n                // prevent unnecessary reflow from getBoundingClientRect()\n                return;\n            }\n            stickyHeight += row.getBoundingClientRect().height;\n        }\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     * @param {?} tableElement\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        /** @type {?} */\n        const tfoot = (/** @type {?} */ (tableElement.querySelector('tfoot')));\n        if (stickyStates.some((/**\n         * @param {?} state\n         * @return {?}\n         */\n        state => !state))) {\n            this._removeStickyStyle(tfoot, ['bottom']);\n        }\n        else {\n            this._addStickyStyle(tfoot, 'bottom', 0);\n        }\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     * @param {?} element\n     * @param {?} stickyDirections\n     * @return {?}\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n        }\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        /** @type {?} */\n        const hasDirection = STICKY_DIRECTIONS.some((/**\n         * @param {?} dir\n         * @return {?}\n         */\n        dir => !!element.style[dir]));\n        if (!hasDirection) {\n            element.style.position = '';\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     * @param {?} element\n     * @param {?} dir\n     * @param {?} dirValue\n     * @return {?}\n     */\n    _addStickyStyle(element, dir, dirValue) {\n        element.classList.add(this._stickCellCss);\n        element.style[dir] = `${dirValue}px`;\n        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        element.style.zIndex = this._getCalculatedZIndex(element);\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     * @param {?} element\n     * @return {?}\n     */\n    _getCalculatedZIndex(element) {\n        /** @type {?} */\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        /** @type {?} */\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of (/** @type {?} */ (STICKY_DIRECTIONS))) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /**\n     * Gets the widths for each cell in the provided row.\n     * @param {?} row\n     * @return {?}\n     */\n    _getCellWidths(row) {\n        /** @type {?} */\n        const cellWidths = [];\n        /** @type {?} */\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            /** @type {?} */\n            let cell = (/** @type {?} */ (firstRowCells[i]));\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     * @param {?} widths\n     * @param {?} stickyStates\n     * @return {?}\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        /** @type {?} */\n        const positions = [];\n        /** @type {?} */\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isNativeHtmlTable;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._stickCellCss;\n    /** @type {?} */\n    StickyStyler.prototype.direction;\n    /**\n     * @type {?}\n     * @private\n     */\n    StickyStyler.prototype._isBrowser;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * \\@docs-private\n * @param {?} id Id whose lookup failed.\n * @return {?}\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * \\@docs-private\n * @param {?} name\n * @return {?}\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * \\@docs-private\n * @param {?} data\n * @return {?}\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * \\@docs-private\n * @return {?}\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface used to provide an outlet for rows to be inserted into.\n * @record\n */\nfunction RowOutlet() { }\nif (false) {\n    /** @type {?} */\n    RowOutlet.prototype.viewContainer;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * \\@docs-private\n */\nclass DataRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nDataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) { return new (t || DataRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nDataRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataRowOutlet, selectors: [[\"\", \"rowOutlet\", \"\"]] });\n/** @nocollapse */\nDataRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[rowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    DataRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    DataRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * \\@docs-private\n */\nclass HeaderRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nHeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) { return new (t || HeaderRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nHeaderRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: HeaderRowOutlet, selectors: [[\"\", \"headerRowOutlet\", \"\"]] });\n/** @nocollapse */\nHeaderRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeaderRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[headerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    HeaderRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    HeaderRowOutlet.prototype.elementRef;\n}\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * \\@docs-private\n */\nclass FooterRowOutlet {\n    /**\n     * @param {?} viewContainer\n     * @param {?} elementRef\n     */\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n}\nFooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) { return new (t || FooterRowOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFooterRowOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FooterRowOutlet, selectors: [[\"\", \"footerRowOutlet\", \"\"]] });\n/** @nocollapse */\nFooterRowOutlet.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FooterRowOutlet, [{\n        type: Directive,\n        args: [{ selector: '[footerRowOutlet]' }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    FooterRowOutlet.prototype.viewContainer;\n    /** @type {?} */\n    FooterRowOutlet.prototype.elementRef;\n}\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * \\@docs-private\n * @type {?}\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RowContext() { }\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * \\@docs-private\n * @abstract\n * @template T\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * \\@docs-private\n * @record\n * @template T\n */\nfunction RenderRow() { }\nif (false) {\n    /** @type {?} */\n    RenderRow.prototype.data;\n    /** @type {?} */\n    RenderRow.prototype.dataIndex;\n    /** @type {?} */\n    RenderRow.prototype.rowDef;\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n * @template T\n */\nclass CdkTable {\n    /**\n     * @param {?} _differs\n     * @param {?} _changeDetectorRef\n     * @param {?} _elementRef\n     * @param {?} role\n     * @param {?} _dir\n     * @param {?} _document\n     * @param {?} _platform\n     */\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        /**\n         * Subject that emits when the component has been destroyed.\n         */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        this._multiTemplateDataRows = false;\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * \\@docs-private\n         */\n        this.viewChange = new BehaviorSubject({ start: 0, end: Number.MAX_VALUE });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'grid');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     * @return {?}\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set trackBy(fn) {\n        if (isDevMode() && fn != null && typeof fn !== 'function' && (/** @type {?} */ (console)) &&\n            (/** @type {?} */ (console.warn))) {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     * @return {?}\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    /**\n     * @param {?} dataSource\n     * @return {?}\n     */\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     * @return {?}\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set multiTemplateDataRows(v) {\n        this._multiTemplateDataRows = coerceBooleanProperty(v);\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((/**\n         * @param {?} _i\n         * @param {?} dataRow\n         * @return {?}\n         */\n        (_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        this._renderUpdatedColumns();\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        this._checkStickyStates();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rowOutlet.viewContainer.clear();\n        this._headerRowOutlet.viewContainer.clear();\n        this._footerRowOutlet.viewContainer.clear();\n        this._cachedRenderRowsMap.clear();\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     * @return {?}\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        /** @type {?} */\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            return;\n        }\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} prevIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, prevIndex, currentIndex) => {\n            if (record.previousIndex == null) {\n                this._insertRow(record.item, (/** @type {?} */ (currentIndex)));\n            }\n            else if (currentIndex == null) {\n                viewContainer.remove((/** @type {?} */ (prevIndex)));\n            }\n            else {\n                /** @type {?} */\n                const view = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (prevIndex)))));\n                viewContainer.move((/** @type {?} */ (view)), currentIndex);\n            }\n        }));\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const rowView = (/** @type {?} */ (viewContainer.get((/** @type {?} */ (record.currentIndex)))));\n            rowView.context.$implicit = record.item.data;\n        }));\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Sets the header row definition to be used. Overrides the header row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the header row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addHeaderRowDef` and `removeHeaderRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    setHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs = new Set([headerRowDef]);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Sets the footer row definition to be used. Overrides the footer row definition gathered by\n     * using `ContentChild`, if one exists. Sets a flag that will re-render the footer row after the\n     * table's content is checked.\n     * \\@docs-private\n     * @deprecated Use `addFooterRowDef` and `removeFooterRowDef` instead\n     * \\@breaking-change 8.0.0\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    setFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs = new Set([footerRowDef]);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Adds a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /**\n     * Removes a column definition that was not included as part of the content children.\n     * @param {?} columnDef\n     * @return {?}\n     */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /**\n     * Adds a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /**\n     * Removes a row definition that was not included as part of the content children.\n     * @param {?} rowDef\n     * @return {?}\n     */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /**\n     * Adds a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Removes a header row definition that was not included as part of the content children.\n     * @param {?} headerRowDef\n     * @return {?}\n     */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /**\n     * Adds a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Removes a footer row definition that was not included as part of the content children.\n     * @param {?} footerRowDef\n     * @return {?}\n     */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyHeaderRowStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._headerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     * @return {?}\n     */\n    updateStickyFooterRowStyles() {\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        /** @type {?} */\n        const tableElement = (/** @type {?} */ (this._elementRef.nativeElement));\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        /** @type {?} */\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        /** @type {?} */\n        const stickyStates = this._footerRowDefs.map((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.sticky));\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     * @return {?}\n     */\n    updateStickyColumnStyles() {\n        /** @type {?} */\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        /** @type {?} */\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        /** @type {?} */\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((/**\n         * @param {?} headerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        }));\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            // Collect all the rows rendered with this row definition.\n            /** @type {?} */\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        }));\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((/**\n         * @param {?} footerRow\n         * @param {?} i\n         * @return {?}\n         */\n        (footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        }));\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => def.resetStickyChanged()));\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     * @private\n     * @return {?}\n     */\n    _getAllRenderRows() {\n        /** @type {?} */\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        /** @type {?} */\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            /** @type {?} */\n            let data = this._data[i];\n            /** @type {?} */\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                /** @type {?} */\n                let renderRow = renderRowsForData[j];\n                /** @type {?} */\n                const cache = (/** @type {?} */ (this._cachedRenderRowsMap.get(renderRow.data)));\n                if (cache.has(renderRow.rowDef)) {\n                    (/** @type {?} */ (cache.get(renderRow.rowDef))).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     * @private\n     * @param {?} data\n     * @param {?} dataIndex\n     * @param {?=} cache\n     * @return {?}\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        /** @type {?} */\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map((/**\n         * @param {?} rowDef\n         * @return {?}\n         */\n        rowDef => {\n            /** @type {?} */\n            const cachedRenderRows = (cache && cache.has(rowDef)) ? (/** @type {?} */ (cache.get(rowDef))) : [];\n            if (cachedRenderRows.length) {\n                /** @type {?} */\n                const dataRow = (/** @type {?} */ (cachedRenderRows.shift()));\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        }));\n    }\n    /**\n     * Update the map containing the content's column definitions.\n     * @private\n     * @return {?}\n     */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        /** @type {?} */\n        const columnDefs = mergeQueryListAndSet(this._contentColumnDefs, this._customColumnDefs);\n        columnDefs.forEach((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => {\n            if (this._columnDefsByName.has(columnDef.name)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        }));\n    }\n    /**\n     * Update the list of all available row definitions that can be used.\n     * @private\n     * @return {?}\n     */\n    _cacheRowDefs() {\n        this._headerRowDefs =\n            mergeQueryListAndSet(this._contentHeaderRowDefs, this._customHeaderRowDefs);\n        this._footerRowDefs =\n            mergeQueryListAndSet(this._contentFooterRowDefs, this._customFooterRowDefs);\n        this._rowDefs = mergeQueryListAndSet(this._contentRowDefs, this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        /** @type {?} */\n        const defaultRowDefs = this._rowDefs.filter((/**\n         * @param {?} def\n         * @return {?}\n         */\n        def => !def.when));\n        if (!this.multiTemplateDataRows && defaultRowDefs.length > 1) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     * @private\n     * @return {?}\n     */\n    _renderUpdatedColumns() {\n        /** @type {?} */\n        const columnsDiffReducer = (/**\n         * @param {?} acc\n         * @param {?} def\n         * @return {?}\n         */\n        (acc, def) => acc || !!def.getColumnsDiff());\n        // Force re-render data rows if the list of column definitions have changed.\n        if (this._rowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed..\n        if (this._headerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderHeaderRows();\n        }\n        if (this._footerRowDefs.reduce(columnsDiffReducer, false)) {\n            this._forceRenderFooterRows();\n        }\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     * @private\n     * @param {?} dataSource\n     * @return {?}\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /**\n     * Set up a subscription for the data provided by the data source.\n     * @private\n     * @return {?}\n     */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        /** @type {?} */\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data || [];\n            this.renderRows();\n        }));\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._headerRowOutlet, def, i)));\n        this.updateStickyHeaderRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     * @private\n     * @return {?}\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((/**\n         * @param {?} def\n         * @param {?} i\n         * @return {?}\n         */\n        (def, i) => this._renderRow(this._footerRowOutlet, def, i)));\n        this.updateStickyFooterRowStyles();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Adds the sticky column styles for the rows according to the columns' stick states.\n     * @private\n     * @param {?} rows\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _addStickyColumnStyles(rows, rowDef) {\n        /** @type {?} */\n        const columnDefs = Array.from(rowDef.columns || []).map((/**\n         * @param {?} columnName\n         * @return {?}\n         */\n        columnName => {\n            /** @type {?} */\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return (/** @type {?} */ (columnDef));\n        }));\n        /** @type {?} */\n        const stickyStartStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.sticky));\n        /** @type {?} */\n        const stickyEndStates = columnDefs.map((/**\n         * @param {?} columnDef\n         * @return {?}\n         */\n        columnDef => columnDef.stickyEnd));\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n    }\n    /**\n     * Gets the list of rows that have been rendered in the row outlet.\n     * @param {?} rowOutlet\n     * @return {?}\n     */\n    _getRenderedRows(rowOutlet) {\n        /** @type {?} */\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            /** @type {?} */\n            const viewRef = ((/** @type {?} */ ((/** @type {?} */ (rowOutlet.viewContainer.get(i))))));\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     * @param {?} data\n     * @param {?} dataIndex\n     * @return {?}\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        /** @type {?} */\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => !def.when || def.when(dataIndex, data)));\n        }\n        else {\n            /** @type {?} */\n            let rowDef = this._rowDefs.find((/**\n             * @param {?} def\n             * @return {?}\n             */\n            def => def.when && def.when(dataIndex, data))) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    /**\n     * Create the embedded view for the data row template and place it in the correct index location\n     * within the data row view container.\n     * @private\n     * @param {?} renderRow\n     * @param {?} renderIndex\n     * @return {?}\n     */\n    _insertRow(renderRow, renderIndex) {\n        /** @type {?} */\n        const rowDef = renderRow.rowDef;\n        /** @type {?} */\n        const context = { $implicit: renderRow.data };\n        this._renderRow(this._rowOutlet, rowDef, renderIndex, context);\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     * @private\n     * @param {?} outlet\n     * @param {?} rowDef\n     * @param {?} index\n     * @param {?=} context\n     * @return {?}\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     * @private\n     * @return {?}\n     */\n    _updateRowIndexContext() {\n        /** @type {?} */\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            /** @type {?} */\n            const viewRef = (/** @type {?} */ (viewContainer.get(renderIndex)));\n            /** @type {?} */\n            const context = (/** @type {?} */ (viewRef.context));\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /**\n     * Gets the column definitions for the provided row def.\n     * @private\n     * @param {?} rowDef\n     * @return {?}\n     */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, (/**\n         * @param {?} columnId\n         * @return {?}\n         */\n        columnId => {\n            /** @type {?} */\n            const column = this._columnDefsByName.get(columnId);\n            if (!column) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        }));\n    }\n    /**\n     * Adds native table sections (e.g. tbody) and moves the row outlets into them.\n     * @private\n     * @return {?}\n     */\n    _applyNativeTableSections() {\n        /** @type {?} */\n        const documentFragment = this._document.createDocumentFragment();\n        /** @type {?} */\n        const sections = [\n            { tag: 'thead', outlet: this._headerRowOutlet },\n            { tag: 'tbody', outlet: this._rowOutlet },\n            { tag: 'tfoot', outlet: this._footerRowOutlet },\n        ];\n        for (const section of sections) {\n            /** @type {?} */\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            element.appendChild(section.outlet.elementRef.nativeElement);\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     * @private\n     * @return {?}\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n        this.updateStickyColumnStyles();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     * @private\n     * @return {?}\n     */\n    _checkStickyStates() {\n        /** @type {?} */\n        const stickyCheckReducer = (/**\n         * @param {?} acc\n         * @param {?} d\n         * @return {?}\n         */\n        (acc, d) => {\n            return acc || d.hasStickyChanged();\n        });\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     * @private\n     * @return {?}\n     */\n    _setupStickyStyler() {\n        /** @type {?} */\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._platform.isBrowser);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        }));\n    }\n}\nCdkTable.ɵfac = function CdkTable_Factory(t) { return new (t || CdkTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('role'), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform)); };\nCdkTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTable, selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]], contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkColumnDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n    } }, viewQuery: function CdkTable_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(DataRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(HeaderRowOutlet, true);\n        ɵngcc0.ɵɵstaticViewQuery(FooterRowOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._rowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headerRowOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._footerRowOutlet = _t.first);\n    } }, hostAttrs: [1, \"cdk-table\"], inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: \"multiTemplateDataRows\" }, exportAs: [\"cdkTable\"], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function CdkTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [HeaderRowOutlet,\n        DataRowOutlet,\n        FooterRowOutlet], encapsulation: 2 });\n/** @nocollapse */\nCdkTable.ctorParameters = () => [\n    { type: IterableDiffers },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['role',] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Platform }\n];\nCdkTable.propDecorators = {\n    trackBy: [{ type: Input }],\n    dataSource: [{ type: Input }],\n    multiTemplateDataRows: [{ type: Input }],\n    _rowOutlet: [{ type: ViewChild, args: [DataRowOutlet, { static: true },] }],\n    _headerRowOutlet: [{ type: ViewChild, args: [HeaderRowOutlet, { static: true },] }],\n    _footerRowOutlet: [{ type: ViewChild, args: [FooterRowOutlet, { static: true },] }],\n    _contentColumnDefs: [{ type: ContentChildren, args: [CdkColumnDef, { descendants: true },] }],\n    _contentRowDefs: [{ type: ContentChildren, args: [CdkRowDef, { descendants: true },] }],\n    _contentHeaderRowDefs: [{ type: ContentChildren, args: [CdkHeaderRowDef, {\n                    descendants: true\n                },] }],\n    _contentFooterRowDefs: [{ type: ContentChildren, args: [CdkFooterRowDef, {\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTable, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-table, table[cdk-table]',\n                exportAs: 'cdkTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'cdk-table'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n                // The view for `MatTable` consists entirely of templates declared in other views. As they are\n                // declared elsewhere, they are checked when their declaration points are checked.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: ɵngcc0.IterableDiffers }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['role']\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc2.Platform }]; }, { trackBy: [{\n            type: Input\n        }], dataSource: [{\n            type: Input\n        }], multiTemplateDataRows: [{\n            type: Input\n        }], _rowOutlet: [{\n            type: ViewChild,\n            args: [DataRowOutlet, { static: true }]\n        }], _headerRowOutlet: [{\n            type: ViewChild,\n            args: [HeaderRowOutlet, { static: true }]\n        }], _footerRowOutlet: [{\n            type: ViewChild,\n            args: [FooterRowOutlet, { static: true }]\n        }], _contentColumnDefs: [{\n            type: ContentChildren,\n            args: [CdkColumnDef, { descendants: true }]\n        }], _contentRowDefs: [{\n            type: ContentChildren,\n            args: [CdkRowDef, { descendants: true }]\n        }], _contentHeaderRowDefs: [{\n            type: ContentChildren,\n            args: [CdkHeaderRowDef, {\n                    descendants: true\n                }]\n        }], _contentFooterRowDefs: [{\n            type: ContentChildren,\n            args: [CdkFooterRowDef, {\n                    descendants: true\n                }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTable.ngAcceptInputType_multiTemplateDataRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._document;\n    /**\n     * Latest data provided by the data source.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._data;\n    /**\n     * Subject that emits when the component has been destroyed.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._onDestroy;\n    /**\n     * List of the rendered rows as identified by their `RenderRow` object.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderRows;\n    /**\n     * Subscription that listens for the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._renderChangeSubscription;\n    /**\n     * Map of all the user's defined columns (header, data, and footer cell template) identified by\n     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n     * any custom column definitions added to `_customColumnDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._columnDefsByName;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._rowDefs;\n    /**\n     * Set of all header row definitions that can be used by this table. Populated by the rows\n     * gathered by using `ContentChildren` as well as any custom row definitions added to\n     * `_customHeaderRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefs;\n    /**\n     * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n     * using `ContentChildren` as well as any custom row definitions added to\n     * `_customFooterRowDefs`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefs;\n    /**\n     * Differ used to find the changes in the data provided by the data source.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataDiffer;\n    /**\n     * Stores the row definition that does not have a when predicate.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._defaultRowDef;\n    /**\n     * Column definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * column definitions as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customColumnDefs;\n    /**\n     * Data row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in data rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customRowDefs;\n    /**\n     * Header row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n     * built-in header rows as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customHeaderRowDefs;\n    /**\n     * Footer row definitions that were defined outside of the direct content children of the table.\n     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n     * built-in footer row as *its* content child.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._customFooterRowDefs;\n    /**\n     * Whether the header row definition has been changed. Triggers an update to the header row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._headerRowDefChanged;\n    /**\n     * Whether the footer row definition has been changed. Triggers an update to the footer row after\n     * content is checked. Initialized as true so that the table renders the initial set of rows.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._footerRowDefChanged;\n    /**\n     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n     * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n     * and row template matches, which allows the `IterableDiffer` to check rows by reference\n     * and understand which rows are added/moved/removed.\n     *\n     * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n     * contains an array of created pairs. The array is necessary to handle cases where the data\n     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n     * stored.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._cachedRenderRowsMap;\n    /**\n     * Whether the table is applied to a native `<table>`.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._isNativeHtmlTable;\n    /**\n     * Utility class that is responsible for applying the appropriate sticky positioning styles to\n     * the table's rows and cells.\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._stickyStyler;\n    /**\n     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n     * table subclasses.\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype.stickyCssClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._trackByFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._dataSource;\n    /** @type {?} */\n    CdkTable.prototype._multiTemplateDataRows;\n    /**\n     * Stream containing the latest information on what rows are being displayed on screen.\n     * Can be used by the data source to as a heuristic of what data should be provided.\n     *\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTable.prototype.viewChange;\n    /** @type {?} */\n    CdkTable.prototype._rowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._headerRowOutlet;\n    /** @type {?} */\n    CdkTable.prototype._footerRowOutlet;\n    /**\n     * The column definitions provided by the user that contain what the header, data, and footer\n     * cells should render for each column.\n     * @type {?}\n     */\n    CdkTable.prototype._contentColumnDefs;\n    /**\n     * Set of data row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentRowDefs;\n    /**\n     * Set of header row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentHeaderRowDefs;\n    /**\n     * Set of footer row definitions that were provided to the table as content children.\n     * @type {?}\n     */\n    CdkTable.prototype._contentFooterRowDefs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._differs;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkTable.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTable.prototype._platform;\n}\n/**\n * Utility function that gets a merged list of the entries in a QueryList and values of a Set.\n * @template T\n * @param {?} queryList\n * @param {?} set\n * @return {?}\n */\nfunction mergeQueryListAndSet(queryList, set) {\n    return queryList.toArray().concat(Array.from(set));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `CdkTextColumn`.\n * @record\n * @template T\n */\nfunction TextColumnOptions() { }\nif (false) {\n    /**\n     * Default function that provides the header text based on the column name if a header\n     * text is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultHeaderTextTransform;\n    /**\n     * Default data accessor to use if one is not provided.\n     * @type {?|undefined}\n     */\n    TextColumnOptions.prototype.defaultDataAccessor;\n}\n/**\n * Injection token that can be used to specify the text column options.\n * @type {?}\n */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass CdkTextColumn {\n    /**\n     * @param {?} _table\n     * @param {?} _options\n     */\n    constructor(_table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /**\n         * Alignment of the cell values.\n         */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    /**\n     * Column name that should be used to reference this column.\n     * @return {?}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((/**\n                 * @param {?} data\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (data, name) => ((/** @type {?} */ (data)))[name]));\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     * @return {?}\n     */\n    _createDefaultHeaderText() {\n        /** @type {?} */\n        const name = this.name;\n        if (isDevMode() && !name) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /**\n     * Synchronizes the column definition name with the text column name.\n     * @private\n     * @return {?}\n     */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n}\nCdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) { return new (t || CdkTextColumn)(ɵngcc0.ɵɵdirectiveInject(CdkTable, 8), ɵngcc0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8)); };\nCdkTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkTextColumn, selectors: [[\"cdk-text-column\"]], viewQuery: function CdkTextColumn_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkColumnDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkCellDef, true);\n        ɵngcc0.ɵɵstaticViewQuery(CdkHeaderCellDef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n    } }, inputs: { justify: \"justify\", name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\" }, decls: 3, vars: 0, consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]], template: function CdkTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [CdkColumnDef,\n        CdkHeaderCellDef,\n        CdkCellDef,\n        CdkHeaderCell,\n        CdkCell], encapsulation: 2 });\n/** @nocollapse */\nCdkTextColumn.ctorParameters = () => [\n    { type: CdkTable, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [TEXT_COLUMN_OPTIONS,] }] }\n];\nCdkTextColumn.propDecorators = {\n    name: [{ type: Input }],\n    headerText: [{ type: Input }],\n    dataAccessor: [{ type: Input }],\n    justify: [{ type: Input }],\n    columnDef: [{ type: ViewChild, args: [CdkColumnDef, { static: true },] }],\n    cell: [{ type: ViewChild, args: [CdkCellDef, { static: true },] }],\n    headerCell: [{ type: ViewChild, args: [CdkHeaderCellDef, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-text-column',\n                template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], function () { return [{ type: CdkTable, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [TEXT_COLUMN_OPTIONS]\n            }] }]; }, { justify: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], headerText: [{\n            type: Input\n        }], dataAccessor: [{\n            type: Input\n        }], columnDef: [{\n            type: ViewChild,\n            args: [CdkColumnDef, { static: true }]\n        }], cell: [{\n            type: ViewChild,\n            args: [CdkCellDef, { static: true }]\n        }], headerCell: [{\n            type: ViewChild,\n            args: [CdkHeaderCellDef, { static: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextColumn.prototype._name;\n    /**\n     * Text label that should be used for the column header. If this property is not\n     * set, the header text will default to the column name with its first letter capitalized.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerText;\n    /**\n     * Accessor function to retrieve the data rendered for each cell. If this\n     * property is not set, the data cells will render the value found in the data's property matching\n     * the column's name. For example, if the column is named `id`, then the rendered value will be\n     * value defined by the data's `id` property.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.dataAccessor;\n    /**\n     * Alignment of the cell values.\n     * @type {?}\n     */\n    CdkTextColumn.prototype.justify;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.columnDef;\n    /**\n     * The column cell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.cell;\n    /**\n     * The column headerCell is provided to the column during `ngOnInit` with a static query.\n     * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n     * column definition was provided in the same view as the table, which is not the case with this\n     * component.\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkTextColumn.prototype.headerCell;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._table;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextColumn.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n];\nclass CdkTableModule {\n}\nCdkTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkTableModule });\nCdkTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkTableModule_Factory(t) { return new (t || CdkTableModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkTableModule, { declarations: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn], exports: [CdkTable,\n        CdkRowDef,\n        CdkCellDef,\n        CdkCellOutlet,\n        CdkHeaderCellDef,\n        CdkFooterCellDef,\n        CdkColumnDef,\n        CdkCell,\n        CdkRow,\n        CdkHeaderCell,\n        CdkFooterCell,\n        CdkHeaderRow,\n        CdkHeaderRowDef,\n        CdkFooterRow,\n        CdkFooterRowDef,\n        DataRowOutlet,\n        HeaderRowOutlet,\n        FooterRowOutlet,\n        CdkTextColumn] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTableModule, [{\n        type: NgModule,\n        args: [{\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, mixinHasStickyInput };\n\n//# sourceMappingURL=table.js.map","import { normalizePassiveListenerOptions, Platform, PlatformModule } from '@angular/cdk/platform';\nimport { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, EventEmitter, Directive, ElementRef, Output, Input, HostListener, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autofill.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Options to pass to the animationstart listener.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/\\@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    /**\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject.asObservable();\n        }\n        /** @type {?} */\n        const result = new Subject();\n        /** @type {?} */\n        const cssClass = 'cdk-text-field-autofilled';\n        /** @type {?} */\n        const listener = (/** @type {?} */ (((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: true })));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => result.next({ target: (/** @type {?} */ (event.target)), isAutofilled: false })));\n            }\n        }))));\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        }));\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: (/**\n             * @return {?}\n             */\n            () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            })\n        });\n        return result.asObservable();\n    }\n    /**\n     * @param {?} elementOrRef\n     * @return {?}\n     */\n    stopMonitoring(elementOrRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrRef);\n        /** @type {?} */\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._monitoredElements.forEach((/**\n         * @param {?} _info\n         * @param {?} element\n         * @return {?}\n         */\n        (_info, element) => this.stopMonitoring(element)));\n    }\n}\nAutofillMonitor.ɵfac = function AutofillMonitor_Factory(t) { return new (t || AutofillMonitor)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nAutofillMonitor.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ AutofillMonitor.ɵprov = ɵɵdefineInjectable({ factory: function AutofillMonitor_Factory() { return new AutofillMonitor(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: AutofillMonitor, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutofillMonitor, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._monitoredElements;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutofillMonitor.prototype._ngZone;\n}\n/**\n * A directive that can be used to monitor the autofill state of an input.\n */\nclass CdkAutofill {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _autofillMonitor\n     */\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /**\n         * Emits when the autofill state of the element changes.\n         */\n        this.cdkAutofill = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => this.cdkAutofill.emit(event)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = function CdkAutofill_Factory(t) { return new (t || CdkAutofill)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(AutofillMonitor)); };\nCdkAutofill.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAutofill, selectors: [[\"\", \"cdkAutofill\", \"\"]], outputs: { cdkAutofill: \"cdkAutofill\" } });\n/** @nocollapse */\nCdkAutofill.ctorParameters = () => [\n    { type: ElementRef },\n    { type: AutofillMonitor }\n];\nCdkAutofill.propDecorators = {\n    cdkAutofill: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAutofill, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkAutofill]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: AutofillMonitor }]; }, { cdkAutofill: [{\n            type: Output\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the autofill state of the element changes.\n     * @type {?}\n     */\n    CdkAutofill.prototype.cdkAutofill;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkAutofill.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n */\nclass CdkTextareaAutosize {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} _ngZone\n     */\n    constructor(_elementRef, _platform, _ngZone) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._textareaElement = (/** @type {?} */ (this._elementRef.nativeElement));\n    }\n    /**\n     * Minimum amount of rows in the textarea.\n     * @return {?}\n     */\n    get minRows() { return this._minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /**\n     * Maximum amount of rows in the textarea.\n     * @return {?}\n     */\n    get maxRows() { return this._maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /**\n     * Whether autosizing is enabled or not\n     * @return {?}\n     */\n    get enabled() { return this._enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    /**\n     * Sets the minimum height of the textarea as determined by minRows.\n     * @return {?}\n     */\n    _setMinHeight() {\n        /** @type {?} */\n        const minHeight = this.minRows && this._cachedLineHeight ?\n            `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /**\n     * Sets the maximum height of the textarea as determined by maxRows.\n     * @return {?}\n     */\n    _setMaxHeight() {\n        /** @type {?} */\n        const maxHeight = this.maxRows && this._cachedLineHeight ?\n            `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.resizeToFitContent(true)));\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     * @private\n     * @return {?}\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        /** @type {?} */\n        let textareaClone = (/** @type {?} */ (this._textareaElement.cloneNode(false)));\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        (/** @type {?} */ (this._textareaElement.parentNode)).appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        (/** @type {?} */ (this._textareaElement.parentNode)).removeChild(textareaClone);\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param {?=} force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     * @return {?}\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        /** @type {?} */\n        const textarea = (/** @type {?} */ (this._elementRef.nativeElement));\n        /** @type {?} */\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        /** @type {?} */\n        const placeholderText = textarea.placeholder;\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        // Long placeholders that are wider than the textarea width may lead to a bigger scrollHeight\n        // value. To ensure that the scrollHeight is not bigger than the content, the placeholders\n        // need to be removed temporarily.\n        textarea.classList.add('cdk-textarea-autosize-measuring');\n        textarea.placeholder = '';\n        // The cdk-textarea-autosize-measuring class includes a 2px padding to workaround an issue with\n        // Chrome, so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        /** @type {?} */\n        const height = textarea.scrollHeight - 4;\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        textarea.classList.remove('cdk-textarea-autosize-measuring');\n        textarea.placeholder = placeholderText;\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n            else {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => this._scrollToCaretPosition(textarea)));\n            }\n        }));\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     * @return {?}\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    // In Ivy the `host` metadata will be merged, whereas in ViewEngine it is overridden. In order\n    // to avoid double event listeners, we need to use `HostListener`. Once Ivy is the default, we\n    // can move this back into `host`.\n    // tslint:disable:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     * @private\n     * @param {?} textarea\n     * @return {?}\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && document.activeElement === textarea) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = function CdkTextareaAutosize_Factory(t) { return new (t || CdkTextareaAutosize)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkTextareaAutosize, selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"], hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler($event) { return ctx._noopInputHandler(); });\n    } }, inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"] }, exportAs: [\"cdkTextareaAutosize\"] });\n/** @nocollapse */\nCdkTextareaAutosize.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgZone }\n];\nCdkTextareaAutosize.propDecorators = {\n    minRows: [{ type: Input, args: ['cdkAutosizeMinRows',] }],\n    maxRows: [{ type: Input, args: ['cdkAutosizeMaxRows',] }],\n    enabled: [{ type: Input, args: ['cdkTextareaAutosize',] }],\n    _noopInputHandler: [{ type: HostListener, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[cdkTextareaAutosize]',\n                exportAs: 'cdkTextareaAutosize',\n                host: {\n                    'class': 'cdk-textarea-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, { minRows: [{\n            type: Input,\n            args: ['cdkAutosizeMinRows']\n        }], maxRows: [{\n            type: Input,\n            args: ['cdkAutosizeMaxRows']\n        }], enabled: [{\n            type: Input,\n            args: ['cdkTextareaAutosize']\n        }], _noopInputHandler: [{\n            type: HostListener,\n            args: ['input']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_minRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_maxRows;\n    /** @type {?} */\n    CdkTextareaAutosize.ngAcceptInputType_enabled;\n    /**\n     * Keep track of the previous textarea value to avoid resizing when the value hasn't changed.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._initialHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._minRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._maxRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._enabled;\n    /**\n     * Value of minRows as of last resize. If the minRows has decreased, the\n     * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n     * does not have the same problem because it does not affect the textarea's scrollHeight.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._previousMinRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._textareaElement;\n    /**\n     * Cached height of a textarea with a single row.\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._cachedLineHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkTextareaAutosize.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/text-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: TextFieldModule });\nTextFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function TextFieldModule_Factory(t) { return new (t || TextFieldModule)(); }, imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextFieldModule, { declarations: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; }, imports: function () { return [PlatformModule]; }, exports: function () { return [CdkAutofill,\n        CdkTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TextFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkAutofill, CdkTextareaAutosize],\n                imports: [PlatformModule],\n                exports: [CdkAutofill, CdkTextareaAutosize]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/text-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n\n//# sourceMappingURL=text-field.js.map","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('9.1.2');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n//# sourceMappingURL=cdk.js.map\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default color palette for round buttons (mat-fab and mat-mini-fab)\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\n\nconst _c0 = [\"mat-button\", \"\"];\nconst _c1 = [\"*\"];\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n * @type {?}\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\n/**\n * \\@docs-private\n */\nclass MatButtonBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatButtonBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatButtonMixinBase = mixinColor(mixinDisabled(mixinDisableRipple(MatButtonBase)));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _focusMonitor\n     * @param {?} _animationMode\n     */\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /**\n         * Whether the button is round.\n         */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /**\n         * Whether the button is icon button.\n         */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                ((/** @type {?} */ (this._getHostElement()))).classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        this._focusMonitor.monitor(this._elementRef, true);\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the button.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    }\n    /**\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Gets whether the button has one of the given attributes.\n     * @param {...?} attributes\n     * @return {?}\n     */\n    _hasHostAttributes(...attributes) {\n        return attributes.some((/**\n         * @param {?} attribute\n         * @return {?}\n         */\n        attribute => this._getHostElement().hasAttribute(attribute)));\n    }\n}\nMatButton.ɵfac = function MatButton_Factory(t) { return new (t || MatButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatButton, selectors: [[\"button\", \"mat-button\", \"\"], [\"button\", \"mat-raised-button\", \"\"], [\"button\", \"mat-icon-button\", \"\"], [\"button\", \"mat-fab\", \"\"], [\"button\", \"mat-mini-fab\", \"\"], [\"button\", \"mat-stroked-button\", \"\"], [\"button\", \"mat-flat-button\", \"\"]], viewQuery: function MatButton_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 3, hostBindings: function MatButton_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, exportAs: [\"matButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatButton.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatButton.propDecorators = {\n    ripple: [{ type: ViewChild, args: [MatRipple,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButton, [{\n        type: Component,\n        args: [{\n                selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`,\n                exportAs: 'matButton',\n                host: {\n                    '[attr.disabled]': 'disabled || null',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                inputs: ['disabled', 'disableRipple', 'color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatButton.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the button is round.\n     * @type {?}\n     */\n    MatButton.prototype.isRoundButton;\n    /**\n     * Whether the button is icon button.\n     * @type {?}\n     */\n    MatButton.prototype.isIconButton;\n    /**\n     * Reference to the MatRipple instance of the button.\n     * @type {?}\n     */\n    MatButton.prototype.ripple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatButton.prototype._focusMonitor;\n    /** @type {?} */\n    MatButton.prototype._animationMode;\n}\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    /**\n     * @param {?} focusMonitor\n     * @param {?} elementRef\n     * @param {?} animationMode\n     */\n    constructor(focusMonitor, elementRef, animationMode) {\n        super(elementRef, focusMonitor, animationMode);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _haltDisabledEvents(event) {\n        // A disabled button shouldn't apply any actions\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n        }\n    }\n}\nMatAnchor.ɵfac = function MatAnchor_Factory(t) { return new (t || MatAnchor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatAnchor.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAnchor, selectors: [[\"a\", \"mat-button\", \"\"], [\"a\", \"mat-raised-button\", \"\"], [\"a\", \"mat-icon-button\", \"\"], [\"a\", \"mat-fab\", \"\"], [\"a\", \"mat-mini-fab\", \"\"], [\"a\", \"mat-stroked-button\", \"\"], [\"a\", \"mat-flat-button\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 5, hostBindings: function MatAnchor_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatAnchor_click_HostBindingHandler($event) { return ctx._haltDisabledEvents($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? 0 - 1 : ctx.tabIndex || 0)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, exportAs: [\"matButton\", \"matAnchor\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 4, vars: 5, consts: [[1, \"mat-button-wrapper\"], [\"matRipple\", \"\", 1, \"mat-button-ripple\", 3, \"matRippleDisabled\", \"matRippleCentered\", \"matRippleTrigger\"], [1, \"mat-button-focus-overlay\"]], template: function MatAnchor_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(2, \"div\", 1);\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-button-ripple-round\", ctx.isRoundButton || ctx.isIconButton);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", ctx.isIconButton)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatAnchor.ctorParameters = () => [\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatAnchor.propDecorators = {\n    tabIndex: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAnchor, [{\n        type: Component,\n        args: [{\n                selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`,\n                exportAs: 'matButton, matAnchor',\n                host: {\n                    // Note that we ignore the user-specified tabindex when it's disabled for\n                    // consistency with the `mat-button` applied on native buttons where even\n                    // though they have an index, they're not tabbable.\n                    '[attr.tabindex]': 'disabled ? -1 : (tabIndex || 0)',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '(click)': '_haltDisabledEvents($event)',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    'class': 'mat-focus-indicator'\n                },\n                inputs: ['disabled', 'disableRipple', 'color'],\n                template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<div matRipple class=\\\"mat-button-ripple\\\"\\n     [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n     [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n     [matRippleCentered]=\\\"isIconButton\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"></div>\\n<div class=\\\"mat-button-focus-overlay\\\"></div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover .mat-button-focus-overlay,.mat-stroked-button:hover .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button[disabled],.mat-icon-button[disabled],.mat-stroked-button[disabled],.mat-flat-button[disabled]{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button[disabled]{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab[disabled]{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab[disabled]{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.cdk-high-contrast-active .mat-button-focus-overlay{background-color:#fff}.cdk-high-contrast-black-on-white .mat-button-focus-overlay{background-color:#000}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:block;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { tabIndex: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Tabindex of the button.\n     * @type {?}\n     */\n    MatAnchor.prototype.tabIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/button-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatButtonModule });\nMatButtonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatButtonModule_Factory(t) { return new (t || MatButtonModule)(); }, imports: [[\n            MatRippleModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatButtonModule, { declarations: function () { return [MatButton,\n        MatAnchor]; }, imports: function () { return [MatRippleModule,\n        MatCommonModule]; }, exports: function () { return [MatButton,\n        MatAnchor,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatButtonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule,\n                    MatCommonModule,\n                ],\n                exports: [\n                    MatButton,\n                    MatAnchor,\n                    MatCommonModule,\n                ],\n                declarations: [\n                    MatButton,\n                    MatAnchor,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/button/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n\n//# sourceMappingURL=button.js.map","import { Version, InjectionToken, isDevMode, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, ɵɵdefineInjectable, Directive, ElementRef, NgZone, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, ChangeDetectorRef, Output } from '@angular/core';\nimport { HighContrastModeDetector, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$2 } from '@angular/cdk';\nimport { coerceBooleanProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { Platform, PlatformModule, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { HammerGestureConfig } from '@angular/platform-browser';\nimport { startWith } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/version.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Current version of Angular Material.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nfunction MatOption_mat_pseudo_checkbox_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c2 = [\"*\"];\nconst VERSION = new Version('9.1.2');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/animation/animation.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\nif (false) {\n    /** @type {?} */\n    AnimationCurves.STANDARD_CURVE;\n    /** @type {?} */\n    AnimationCurves.DECELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.ACCELERATION_CURVE;\n    /** @type {?} */\n    AnimationCurves.SHARP_CURVE;\n}\n/**\n * \\@docs-private\n */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\nif (false) {\n    /** @type {?} */\n    AnimationDurations.COMPLEX;\n    /** @type {?} */\n    AnimationDurations.ENTERING;\n    /** @type {?} */\n    AnimationDurations.EXITING;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/common-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Private version constant to circumvent test/build issues,\n// i.e. avoid core to depend on the @angular/material primary entry-point\n// Can be removed once the Material primary entry-point no longer\n// re-exports all secondary entry-points\n/** @type {?} */\nconst VERSION$1 = new Version('9.1.2');\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/**\n * Injection token that configures whether the Material sanity checks are enabled.\n * @type {?}\n */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Object that can be used to configure the sanity checks granularly.\n * @record\n */\nfunction GranularSanityChecks() { }\nif (false) {\n    /** @type {?} */\n    GranularSanityChecks.prototype.doctype;\n    /** @type {?} */\n    GranularSanityChecks.prototype.theme;\n    /** @type {?} */\n    GranularSanityChecks.prototype.version;\n    /**\n     * @deprecated No longer being used.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    GranularSanityChecks.prototype.hammer;\n}\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    /**\n     * @param {?} highContrastModeDetector\n     * @param {?} sanityChecks\n     */\n    constructor(highContrastModeDetector, sanityChecks) {\n        /**\n         * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n         */\n        this._hasDoneGlobalChecks = false;\n        /**\n         * Reference to the global `document` object.\n         */\n        this._document = typeof document === 'object' && document ? document : null;\n        /**\n         * Reference to the global 'window' object.\n         */\n        this._window = typeof window === 'object' && window ? window : null;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        // Note that `_sanityChecks` is typed to `any`, because AoT\n        // throws an error if we use the `SanityChecks` type directly.\n        this._sanityChecks = sanityChecks;\n        if (!this._hasDoneGlobalChecks) {\n            this._checkDoctypeIsDefined();\n            this._checkThemeIsPresent();\n            this._checkCdkVersionMatch();\n            this._hasDoneGlobalChecks = true;\n        }\n    }\n    /**\n     * Whether any sanity checks are enabled.\n     * @private\n     * @return {?}\n     */\n    _checksAreEnabled() {\n        return isDevMode() && !this._isTestEnv();\n    }\n    /**\n     * Whether the code is running in tests.\n     * @private\n     * @return {?}\n     */\n    _isTestEnv() {\n        /** @type {?} */\n        const window = (/** @type {?} */ (this._window));\n        return window && (window.__karma__ || window.jasmine);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkDoctypeIsDefined() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).doctype);\n        if (isEnabled && this._document && !this._document.doctype) {\n            console.warn('Current document does not have a doctype. This may cause ' +\n                'some Angular Material components not to behave as expected.');\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _checkThemeIsPresent() {\n        // We need to assert that the `body` is defined, because these checks run very early\n        // and the `body` won't be defined if the consumer put their scripts in the `head`.\n        /** @type {?} */\n        const isDisabled = !this._checksAreEnabled() ||\n            (this._sanityChecks === false || !((/** @type {?} */ (this._sanityChecks))).theme);\n        if (isDisabled || !this._document || !this._document.body ||\n            typeof getComputedStyle !== 'function') {\n            return;\n        }\n        /** @type {?} */\n        const testElement = this._document.createElement('div');\n        testElement.classList.add('mat-theme-loaded-marker');\n        this._document.body.appendChild(testElement);\n        /** @type {?} */\n        const computedStyle = getComputedStyle(testElement);\n        // In some situations the computed style of the test element can be null. For example in\n        // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n        if (computedStyle && computedStyle.display !== 'none') {\n            console.warn('Could not find Angular Material core theme. Most Material ' +\n                'components may not work as expected. For more info refer ' +\n                'to the theming guide: https://material.angular.io/guide/theming');\n        }\n        this._document.body.removeChild(testElement);\n    }\n    /**\n     * Checks whether the material version matches the cdk version\n     * @private\n     * @return {?}\n     */\n    _checkCdkVersionMatch() {\n        /** @type {?} */\n        const isEnabled = this._checksAreEnabled() &&\n            (this._sanityChecks === true || ((/** @type {?} */ (this._sanityChecks))).version);\n        if (isEnabled && VERSION$1.full !== VERSION$2.full) {\n            console.warn('The Angular Material version (' + VERSION$1.full + ') does not match ' +\n                'the Angular CDK version (' + VERSION$2.full + ').\\n' +\n                'Please ensure the versions of these two packages exactly match.');\n        }\n    }\n}\nMatCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCommonModule });\nMatCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCommonModule_Factory(t) { return new (t || MatCommonModule)(ɵngcc0.ɵɵinject(ɵngcc1.HighContrastModeDetector), ɵngcc0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8)); }, imports: [[BidiModule],\n        BidiModule] });\n/** @nocollapse */\nMatCommonModule.ctorParameters = () => [\n    { type: HighContrastModeDetector },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MATERIAL_SANITY_CHECKS,] }] }\n];\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCommonModule, { imports: function () { return [BidiModule]; }, exports: function () { return [BidiModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCommonModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [BidiModule]\n            }]\n    }], function () { return [{ type: ɵngcc1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MATERIAL_SANITY_CHECKS]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype).\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._hasDoneGlobalChecks;\n    /**\n     * Reference to the global `document` object.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._document;\n    /**\n     * Reference to the global 'window' object.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._window;\n    /**\n     * Configured sanity checks.\n     * @type {?}\n     * @private\n     */\n    MatCommonModule.prototype._sanityChecks;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disabled.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisable() { }\nif (false) {\n    /**\n     * Whether the component is disabled.\n     * @type {?}\n     */\n    CanDisable.prototype.disabled;\n}\n/**\n * Mixin to augment a directive with a `disabled` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        /**\n         * @return {?}\n         */\n        get disabled() { return this._disabled; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/color.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanColor() { }\nif (false) {\n    /**\n     * Theme color palette for the component.\n     * @type {?}\n     */\n    CanColor.prototype.color;\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasElementRef() { }\nif (false) {\n    /** @type {?} */\n    HasElementRef.prototype._elementRef;\n}\n/**\n * Mixin to augment a directive with a `color` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultColor\n * @return {?}\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        /**\n         * @return {?}\n         */\n        get color() { return this._color; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set color(value) {\n            /** @type {?} */\n            const colorPalette = value || defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/disable-ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanDisableRipple() { }\nif (false) {\n    /**\n     * Whether ripples are disabled.\n     * @type {?}\n     */\n    CanDisableRipple.prototype.disableRipple;\n}\n/**\n * Mixin to augment a directive with a `disableRipple` property.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /**\n         * Whether the ripple effect is disabled or not.\n         * @return {?}\n         */\n        get disableRipple() { return this._disableRipple; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/tabindex.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction HasTabIndex() { }\nif (false) {\n    /**\n     * Tabindex of the component.\n     * @type {?}\n     */\n    HasTabIndex.prototype.tabIndex;\n}\n/**\n * Mixin to augment a directive with a `tabIndex` property.\n * @template T\n * @param {?} base\n * @param {?=} defaultTabIndex\n * @return {?}\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n        }\n        /**\n         * @return {?}\n         */\n        get tabIndex() { return this.disabled ? -1 : this._tabIndex; }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? value : defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/error-state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * \\@docs-private\n * @record\n */\nfunction CanUpdateErrorState() { }\nif (false) {\n    /** @type {?} */\n    CanUpdateErrorState.prototype.stateChanges;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorState;\n    /** @type {?} */\n    CanUpdateErrorState.prototype.errorStateMatcher;\n    /**\n     * @return {?}\n     */\n    CanUpdateErrorState.prototype.updateErrorState = function () { };\n}\n/**\n * \\@docs-private\n * @record\n */\nfunction HasErrorState() { }\nif (false) {\n    /** @type {?} */\n    HasErrorState.prototype._parentFormGroup;\n    /** @type {?} */\n    HasErrorState.prototype._parentForm;\n    /** @type {?} */\n    HasErrorState.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    HasErrorState.prototype.ngControl;\n}\n/**\n * Mixin to augment a directive with updateErrorState method.\n * For component with `errorState` and need to update `errorState`.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether the component is in an error state.\n             */\n            this.errorState = false;\n            /**\n             * Stream that emits whenever the state of the input changes such that the wrapping\n             * `MatFormField` needs to run change detection.\n             */\n            this.stateChanges = new Subject();\n        }\n        /**\n         * @return {?}\n         */\n        updateErrorState() {\n            /** @type {?} */\n            const oldState = this.errorState;\n            /** @type {?} */\n            const parent = this._parentFormGroup || this._parentForm;\n            /** @type {?} */\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            /** @type {?} */\n            const control = this.ngControl ? (/** @type {?} */ (this.ngControl.control)) : null;\n            /** @type {?} */\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/initialized.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\n * value once markInitialized has been called, which should be done during the ngOnInit function.\n * If the subscription is made after it has already been marked as initialized, then it will trigger\n * an emit immediately.\n * \\@docs-private\n * @record\n */\nfunction HasInitialized() { }\nif (false) {\n    /**\n     * Stream that emits once during the directive/component's ngOnInit.\n     * @type {?}\n     */\n    HasInitialized.prototype.initialized;\n    /**\n     * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\n     * the directive has been initialized.\n     * \\@docs-private\n     * @type {?}\n     */\n    HasInitialized.prototype._markInitialized;\n}\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @template T\n * @param {?} base\n * @return {?}\n */\nfunction mixinInitialized(base) {\n    return class extends base {\n        /**\n         * @param {...?} args\n         */\n        constructor(...args) {\n            super(...args);\n            /**\n             * Whether this directive has been marked as initialized.\n             */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable((/**\n             * @param {?} subscriber\n             * @return {?}\n             */\n            subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    (/** @type {?} */ (this._pendingSubscribers)).push(subscriber);\n                }\n            }));\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * \\@docs-private\n         * @return {?}\n         */\n        _markInitialized() {\n            if (this._isInitialized) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            (/** @type {?} */ (this._pendingSubscribers)).forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /**\n         * Emits and completes the subscriber stream (should only emit once).\n         * @param {?} subscriber\n         * @return {?}\n         */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/common-behaviors/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken for datepicker that can be used to override default locale code.\n * @type {?}\n */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/**\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\n * If you are importing and providing this in your code you can simply remove it.\n * @deprecated\n * \\@breaking-change 8.0.0\n * @type {?}\n */\nconst MAT_DATE_LOCALE_PROVIDER = { provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID };\n/**\n * Adapts type `D` to be usable as a date by cdk-based components that work with dates.\n * @abstract\n * @template D\n */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n    }\n    /**\n     * A stream that emits when the locale changes.\n     * @return {?}\n     */\n    get localeChanges() { return this._localeChanges; }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `\\@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param {?} value The value to be deserialized into a date object.\n     * @return {?} The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param {?} locale The new locale.\n     * @return {?}\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param {?} first The first date to compare.\n     * @param {?} second The second date to compare.\n     * @return {?} 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second);\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param {?} first The first date to check.\n     * @param {?} second The second date to check.\n     * @return {?} Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            /** @type {?} */\n            let firstValid = this.isValid(first);\n            /** @type {?} */\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param {?} date The date to clamp.\n     * @param {?=} min The minimum value to allow. If null or omitted no min is enforced.\n     * @param {?=} max The maximum value to allow. If null or omitted no max is enforced.\n     * @return {?} `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\nif (false) {\n    /**\n     * The locale to use for all dates.\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype.locale;\n    /**\n     * @type {?}\n     * @protected\n     */\n    DateAdapter.prototype._localeChanges;\n    /**\n     * Gets the year component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the year from.\n     * @return {?} The year component.\n     */\n    DateAdapter.prototype.getYear = function (date) { };\n    /**\n     * Gets the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the month from.\n     * @return {?} The month component (0-indexed, 0 = January).\n     */\n    DateAdapter.prototype.getMonth = function (date) { };\n    /**\n     * Gets the date of the month component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the date of the month from.\n     * @return {?} The month component (1-indexed, 1 = first of month).\n     */\n    DateAdapter.prototype.getDate = function (date) { };\n    /**\n     * Gets the day of the week component of the given date.\n     * @abstract\n     * @param {?} date The date to extract the day of the week from.\n     * @return {?} The month component (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getDayOfWeek = function (date) { };\n    /**\n     * Gets a list of names for the months.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\n     * @return {?} An ordered list of all month names, starting with January.\n     */\n    DateAdapter.prototype.getMonthNames = function (style) { };\n    /**\n     * Gets a list of names for the dates of the month.\n     * @abstract\n     * @return {?} An ordered list of all date of the month names, starting with '1'.\n     */\n    DateAdapter.prototype.getDateNames = function () { };\n    /**\n     * Gets a list of names for the days of the week.\n     * @abstract\n     * @param {?} style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\n     * @return {?} An ordered list of all weekday names, starting with Sunday.\n     */\n    DateAdapter.prototype.getDayOfWeekNames = function (style) { };\n    /**\n     * Gets the name for the year of the given date.\n     * @abstract\n     * @param {?} date The date to get the year name for.\n     * @return {?} The name of the given year (e.g. '2017').\n     */\n    DateAdapter.prototype.getYearName = function (date) { };\n    /**\n     * Gets the first day of the week.\n     * @abstract\n     * @return {?} The first day of the week (0-indexed, 0 = Sunday).\n     */\n    DateAdapter.prototype.getFirstDayOfWeek = function () { };\n    /**\n     * Gets the number of days in the month of the given date.\n     * @abstract\n     * @param {?} date The date whose month should be checked.\n     * @return {?} The number of days in the month of the given date.\n     */\n    DateAdapter.prototype.getNumDaysInMonth = function (date) { };\n    /**\n     * Clones the given date.\n     * @abstract\n     * @param {?} date The date to clone\n     * @return {?} A new date equal to the given date.\n     */\n    DateAdapter.prototype.clone = function (date) { };\n    /**\n     * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\n     * month and date.\n     * @abstract\n     * @param {?} year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\n     * @param {?} month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\n     * @param {?} date The date of month of the date. Must be an integer 1 - length of the given month.\n     * @return {?} The new date, or null if invalid.\n     */\n    DateAdapter.prototype.createDate = function (year, month, date) { };\n    /**\n     * Gets today's date.\n     * @abstract\n     * @return {?} Today's date.\n     */\n    DateAdapter.prototype.today = function () { };\n    /**\n     * Parses a date from a user-provided value.\n     * @abstract\n     * @param {?} value The value to parse.\n     * @param {?} parseFormat The expected format of the value being parsed\n     *     (type is implementation-dependent).\n     * @return {?} The parsed date.\n     */\n    DateAdapter.prototype.parse = function (value, parseFormat) { };\n    /**\n     * Formats a date as a string according to the given format.\n     * @abstract\n     * @param {?} date The value to format.\n     * @param {?} displayFormat The format to use to display the date as a string.\n     * @return {?} The formatted date string.\n     */\n    DateAdapter.prototype.format = function (date, displayFormat) { };\n    /**\n     * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\n     * calendar for each year and then finding the closest date in the new month. For example when\n     * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add years to.\n     * @param {?} years The number of years to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of years added.\n     */\n    DateAdapter.prototype.addCalendarYears = function (date, years) { };\n    /**\n     * Adds the given number of months to the date. Months are counted as if flipping a page on the\n     * calendar for each month and then finding the closest date in the new month. For example when\n     * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\n     * @abstract\n     * @param {?} date The date to add months to.\n     * @param {?} months The number of months to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of months added.\n     */\n    DateAdapter.prototype.addCalendarMonths = function (date, months) { };\n    /**\n     * Adds the given number of days to the date. Days are counted as if moving one cell on the\n     * calendar for each day.\n     * @abstract\n     * @param {?} date The date to add days to.\n     * @param {?} days The number of days to add (may be negative).\n     * @return {?} A new date equal to the given one with the specified number of days added.\n     */\n    DateAdapter.prototype.addCalendarDays = function (date, days) { };\n    /**\n     * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\n     * This method is used to generate date strings that are compatible with native HTML attributes\n     * such as the `min` or `max` attribute of an `<input>`.\n     * @abstract\n     * @param {?} date The date to get the ISO date string for.\n     * @return {?} The ISO date string date string.\n     */\n    DateAdapter.prototype.toIso8601 = function (date) { };\n    /**\n     * Checks whether the given object is considered a date instance by this DateAdapter.\n     * @abstract\n     * @param {?} obj The object to check\n     * @return {?} Whether the object is a date instance.\n     */\n    DateAdapter.prototype.isDateInstance = function (obj) { };\n    /**\n     * Checks whether the given date is valid.\n     * @abstract\n     * @param {?} date The date to check.\n     * @return {?} Whether the date is valid.\n     */\n    DateAdapter.prototype.isValid = function (date) { };\n    /**\n     * Gets date instance that is not valid.\n     * @abstract\n     * @return {?} An invalid date.\n     */\n    DateAdapter.prototype.invalid = function () { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// TODO(mmalerba): Remove when we no longer support safari 9.\n/**\n * Whether the browser supports the Intl API.\n * @type {?}\n */\nlet SUPPORTS_INTL_API;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    SUPPORTS_INTL_API = typeof Intl != 'undefined';\n}\ncatch (_a) {\n    SUPPORTS_INTL_API = false;\n}\n/**\n * The default month names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_MONTH_NAMES = {\n    'long': [\n        'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\n        'October', 'November', 'December'\n    ],\n    'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\n};\nconst ɵ0 = /**\n * @param {?} i\n * @return {?}\n */\ni => String(i + 1);\n/**\n * The default date names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DATE_NAMES = range(31, (ɵ0));\n/**\n * The default day of the week names to use if Intl API is not available.\n * @type {?}\n */\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\n    'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\n};\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n * @type {?}\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/**\n * Creates an array and fills it with values.\n * @template T\n * @param {?} length\n * @param {?} valueFunction\n * @return {?}\n */\nfunction range(length, valueFunction) {\n    /** @type {?} */\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/**\n * Adapts the native JS Date for use with cdk-based components that work with dates.\n */\nclass NativeDateAdapter extends DateAdapter {\n    /**\n     * @param {?} matDateLocale\n     * @param {?} platform\n     */\n    constructor(matDateLocale, platform) {\n        super();\n        /**\n         * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n         * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n         * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n         * will produce `'8/13/1800'`.\n         *\n         * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n         * getting the string representation of a Date object from its utc representation. We're keeping\n         * it here for sometime, just for precaution, in case we decide to revert some of these changes\n         * though.\n         */\n        this.useUtcForDisplay = true;\n        super.setLocale(matDateLocale);\n        // IE does its own time zone correction, so we disable this on IE.\n        this.useUtcForDisplay = !platform.TRIDENT;\n        this._clampDate = platform.TRIDENT || platform.EDGE;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYear(date) {\n        return date.getFullYear();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonth(date) {\n        return date.getMonth();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDate(date) {\n        return date.getDate();\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getMonthNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n            return range(12, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1)))));\n        }\n        return DEFAULT_MONTH_NAMES[style];\n    }\n    /**\n     * @return {?}\n     */\n    getDateNames() {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n            return range(31, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DATE_NAMES;\n    }\n    /**\n     * @param {?} style\n     * @return {?}\n     */\n    getDayOfWeekNames(style) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n            return range(7, (/**\n             * @param {?} i\n             * @return {?}\n             */\n            i => this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, 0, i + 1)))));\n        }\n        return DEFAULT_DAY_OF_WEEK_NAMES[style];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getYearName(date) {\n        if (SUPPORTS_INTL_API) {\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return String(this.getYear(date));\n    }\n    /**\n     * @return {?}\n     */\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    createDate(year, month, date) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n            throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n            throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n        /** @type {?} */\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    /**\n     * @return {?}\n     */\n    today() {\n        return new Date();\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    /**\n     * @param {?} date\n     * @param {?} displayFormat\n     * @return {?}\n     */\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        if (SUPPORTS_INTL_API) {\n            // On IE and Edge the i18n API will throw a hard error that can crash the entire app\n            // if we attempt to format a date whose year is less than 1 or greater than 9999.\n            if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\n                date = this.clone(date);\n                date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\n            }\n            displayFormat = Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' });\n            /** @type {?} */\n            const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\n            return this._stripDirectionalityCharacters(this._format(dtf, date));\n        }\n        return this._stripDirectionalityCharacters(date.toDateString());\n    }\n    /**\n     * @param {?} date\n     * @param {?} years\n     * @return {?}\n     */\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    /**\n     * @param {?} date\n     * @param {?} months\n     * @return {?}\n     */\n    addCalendarMonths(date, months) {\n        /** @type {?} */\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    /**\n     * @param {?} date\n     * @param {?} days\n     * @return {?}\n     */\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate())\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     * @param {?} value\n     * @return {?}\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                /** @type {?} */\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    /**\n     * @return {?}\n     */\n    invalid() {\n        return new Date(NaN);\n    }\n    /**\n     * Creates a date but allows the month and date to overflow.\n     * @private\n     * @param {?} year\n     * @param {?} month\n     * @param {?} date\n     * @return {?}\n     */\n    _createDateWithOverflow(year, month, date) {\n        /** @type {?} */\n        const result = new Date(year, month, date);\n        // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n        // abbreviations for 19xx.\n        if (year >= 0 && year < 100) {\n            result.setFullYear(this.getYear(result) - 1900);\n        }\n        return result;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @private\n     * @param {?} n The number to pad.\n     * @return {?} The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n     * other browsers do not. We remove them to make output consistent and because they interfere with\n     * date parsing.\n     * @private\n     * @param {?} str The string to strip direction characters from.\n     * @return {?} The stripped string.\n     */\n    _stripDirectionalityCharacters(str) {\n        return str.replace(/[\\u200e\\u200f]/g, '');\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @private\n     * @param {?} dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param {?} date Date from which we want to get the string representation according to dtf\n     * @return {?} A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        /** @type {?} */\n        const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = function NativeDateAdapter_Factory(t) { return new (t || NativeDateAdapter)(ɵngcc0.ɵɵinject(MAT_DATE_LOCALE, 8), ɵngcc0.ɵɵinject(ɵngcc2.Platform)); };\nNativeDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NativeDateAdapter, factory: NativeDateAdapter.ɵfac });\n/** @nocollapse */\nNativeDateAdapter.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [MAT_DATE_LOCALE,] }] },\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateAdapter, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_DATE_LOCALE]\n            }] }, { type: ɵngcc2.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors.\n     * @type {?}\n     * @private\n     */\n    NativeDateAdapter.prototype._clampDate;\n    /**\n     * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\n     * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\n     * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\n     * will produce `'8/13/1800'`.\n     *\n     * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\n     * getting the string representation of a Date object from its utc representation. We're keeping\n     * it here for sometime, just for precaution, in case we decide to revert some of these changes\n     * though.\n     * @type {?}\n     */\n    NativeDateAdapter.prototype.useUtcForDisplay;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/native-date-formats.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/datetime/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NativeDateModule });\nNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NativeDateModule_Factory(t) { return new (t || NativeDateModule)(); }, providers: [\n        { provide: DateAdapter, useClass: NativeDateAdapter },\n    ], imports: [[PlatformModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NativeDateModule, { imports: function () { return [PlatformModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [PlatformModule],\n                providers: [\n                    { provide: DateAdapter, useClass: NativeDateAdapter },\n                ]\n            }]\n    }], null, null); })();\nconst ɵ0$1 = MAT_NATIVE_DATE_FORMATS;\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatNativeDateModule });\nMatNativeDateModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatNativeDateModule_Factory(t) { return new (t || MatNativeDateModule)(); }, providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }], imports: [[NativeDateModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatNativeDateModule, { imports: [NativeDateModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNativeDateModule, [{\n        type: NgModule,\n        args: [{\n                imports: [NativeDateModule],\n                providers: [{ provide: MAT_DATE_FORMATS, useValue: ɵ0$1 }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/error/error-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Error state matcher that matches when a control is invalid and dirty.\n */\nclass ShowOnDirtyErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) { return new (t || ShowOnDirtyErrorStateMatcher)(); };\nShowOnDirtyErrorStateMatcher.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ShowOnDirtyErrorStateMatcher, factory: ShowOnDirtyErrorStateMatcher.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n        type: Injectable\n    }], null, null); })();\n/**\n * Provider that defines how form controls behave with regards to displaying error messages.\n */\nclass ErrorStateMatcher {\n    /**\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = function ErrorStateMatcher_Factory(t) { return new (t || ErrorStateMatcher)(); };\n/** @nocollapse */ ErrorStateMatcher.ɵprov = ɵɵdefineInjectable({ factory: function ErrorStateMatcher_Factory() { return new ErrorStateMatcher(); }, token: ErrorStateMatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ErrorStateMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-annotations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Stripped-down HammerJS annotations to be used within Material, which are necessary,\n * because HammerJS is an optional dependency. For the full annotations see:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/hammerjs/index.d.ts\n */\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInput() { }\nif (false) {\n    /** @type {?} */\n    HammerInput.prototype.preventDefault;\n    /** @type {?} */\n    HammerInput.prototype.deltaX;\n    /** @type {?} */\n    HammerInput.prototype.deltaY;\n    /** @type {?} */\n    HammerInput.prototype.center;\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerStatic() { }\nif (false) {\n    /** @type {?} */\n    HammerStatic.prototype.Pan;\n    /** @type {?} */\n    HammerStatic.prototype.Swipe;\n    /** @type {?} */\n    HammerStatic.prototype.Press;\n    /* Skipping unhandled member: new(element: HTMLElement | SVGElement, options?: any): HammerManager;*/\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction Recognizer() { }\nif (false) {\n    /* Skipping unhandled member: new(options?: any): Recognizer;*/\n    /**\n     * @param {?} otherRecognizer\n     * @return {?}\n     */\n    Recognizer.prototype.recognizeWith = function (otherRecognizer) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction RecognizerStatic() { }\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerInstance() { }\nif (false) {\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.on = function (eventName, callback) { };\n    /**\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    HammerInstance.prototype.off = function (eventName, callback) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerManager() { }\nif (false) {\n    /**\n     * @param {?} recogniser\n     * @return {?}\n     */\n    HammerManager.prototype.add = function (recogniser) { };\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    HammerManager.prototype.set = function (options) { };\n    /**\n     * @param {?} event\n     * @param {?} data\n     * @return {?}\n     */\n    HammerManager.prototype.emit = function (event, data) { };\n    /**\n     * @param {?} events\n     * @param {?=} handler\n     * @return {?}\n     */\n    HammerManager.prototype.off = function (events, handler) { };\n    /**\n     * @param {?} events\n     * @param {?} handler\n     * @return {?}\n     */\n    HammerManager.prototype.on = function (events, handler) { };\n}\n/**\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * \\@docs-private\n * @record\n */\nfunction HammerOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    HammerOptions.prototype.cssProps;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.domEvents;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.enable;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.preset;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.touchAction;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.recognizers;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputClass;\n    /** @type {?|undefined} */\n    HammerOptions.prototype.inputTarget;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/gestures/gesture-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that can be used to provide options to the Hammerjs instance.\n * More info at http://hammerjs.github.io/api/.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_HAMMER_OPTIONS = new InjectionToken('MAT_HAMMER_OPTIONS');\n/** @type {?} */\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\n    'longpress',\n    'slide',\n    'slidestart',\n    'slideend',\n    'slideright',\n    'slideleft'\n];\nconst ɵ0$2 = /**\n * @return {?}\n */\n() => { }, ɵ1 = /**\n * @return {?}\n */\n() => { };\n/**\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\n * been loaded on the page.\n * @type {?}\n */\nconst noopHammerInstance = {\n    on: (ɵ0$2),\n    off: (ɵ1),\n};\n/**\n * Adjusts configuration of our gesture library, Hammer.\n * @deprecated No longer being used. To be removed.\n * \\@breaking-change 10.0.0\n */\nclass GestureConfig extends HammerGestureConfig {\n    /**\n     * @param {?=} _hammerOptions\n     * @param {?=} _commonModule\n     */\n    constructor(_hammerOptions, _commonModule) {\n        super();\n        this._hammerOptions = _hammerOptions;\n        /**\n         * List of new event names to add to the gesture support list\n         */\n        this.events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\n    }\n    /**\n     * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\n     *\n     * Our gesture names come from the Material Design gestures spec:\n     * https://material.io/design/#gestures-touch-mechanics\n     *\n     * More information on default recognizers can be found in Hammer docs:\n     * http://hammerjs.github.io/recognizer-pan/\n     * http://hammerjs.github.io/recognizer-press/\n     *\n     * @param {?} element Element to which to assign the new HammerJS gestures.\n     * @return {?} Newly-created HammerJS instance.\n     */\n    buildHammer(element) {\n        /** @type {?} */\n        const hammer = typeof window !== 'undefined' ? ((/** @type {?} */ (window))).Hammer : null;\n        if (!hammer) {\n            // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\n            // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\n            // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\n            // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\n            // `this.events` to the set we support, instead of conditionally setting it to `[]` if\n            // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\n            // undefined).\n            // @breaking-change 8.0.0\n            return noopHammerInstance;\n        }\n        /** @type {?} */\n        const mc = new hammer(element, this._hammerOptions || undefined);\n        // Default Hammer Recognizers.\n        /** @type {?} */\n        const pan = new hammer.Pan();\n        /** @type {?} */\n        const swipe = new hammer.Swipe();\n        /** @type {?} */\n        const press = new hammer.Press();\n        // Notice that a HammerJS recognizer can only depend on one other recognizer once.\n        // Otherwise the previous `recognizeWith` will be dropped.\n        // TODO: Confirm threshold numbers with Material Design UX Team\n        /** @type {?} */\n        const slide = this._createRecognizer(pan, { event: 'slide', threshold: 0 }, swipe);\n        /** @type {?} */\n        const longpress = this._createRecognizer(press, { event: 'longpress', time: 500 });\n        // Overwrite the default `pan` event to use the swipe event.\n        pan.recognizeWith(swipe);\n        // Since the slide event threshold is set to zero, the slide recognizer can fire and\n        // accidentally reset the longpress recognizer. In order to make sure that the two\n        // recognizers can run simultaneously but don't affect each other, we allow the slide\n        // recognizer to recognize while a longpress is being processed.\n        // See: https://github.com/hammerjs/hammer.js/blob/master/src/manager.js#L123-L124\n        longpress.recognizeWith(slide);\n        // Add customized gestures to Hammer manager\n        mc.add([swipe, press, pan, slide, longpress]);\n        return (/** @type {?} */ (mc));\n    }\n    /**\n     * Creates a new recognizer, without affecting the default recognizers of HammerJS\n     * @private\n     * @param {?} base\n     * @param {?} options\n     * @param {...?} inheritances\n     * @return {?}\n     */\n    _createRecognizer(base, options, ...inheritances) {\n        /** @type {?} */\n        let recognizer = new ((/** @type {?} */ (base.constructor)))(options);\n        inheritances.push(base);\n        inheritances.forEach((/**\n         * @param {?} item\n         * @return {?}\n         */\n        item => recognizer.recognizeWith(item)));\n        return recognizer;\n    }\n}\nGestureConfig.ɵfac = function GestureConfig_Factory(t) { return new (t || GestureConfig)(ɵngcc0.ɵɵinject(MAT_HAMMER_OPTIONS, 8), ɵngcc0.ɵɵinject(MatCommonModule, 8)); };\nGestureConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: GestureConfig, factory: GestureConfig.ɵfac });\n/** @nocollapse */\nGestureConfig.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_HAMMER_OPTIONS,] }] },\n    { type: MatCommonModule, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GestureConfig, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_HAMMER_OPTIONS]\n            }] }, { type: MatCommonModule, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * List of new event names to add to the gesture support list\n     * @type {?}\n     */\n    GestureConfig.prototype.events;\n    /**\n     * @type {?}\n     * @private\n     */\n    GestureConfig.prototype._hammerOptions;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/line/line.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a \\@ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = function MatLine_Factory(t) { return new (t || MatLine)(); };\nMatLine.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLine, selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], hostAttrs: [1, \"mat-line\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLine, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-line], [matLine]',\n                host: { 'class': 'mat-line' }\n            }]\n    }], null, null); })();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @param {?} lines\n * @param {?} element\n * @return {?}\n */\nfunction setLines(lines, element) {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe((/**\n     * @param {?} __0\n     * @return {?}\n     */\n    ({ length }) => {\n        setClass(element, 'mat-2-line', false);\n        setClass(element, 'mat-3-line', false);\n        setClass(element, 'mat-multi-line', false);\n        if (length === 2 || length === 3) {\n            setClass(element, `mat-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `mat-multi-line`, true);\n        }\n    }));\n}\n/**\n * Adds or removes a class from an element.\n * @param {?} element\n * @param {?} className\n * @param {?} isAdd\n * @return {?}\n */\nfunction setClass(element, className, isAdd) {\n    /** @type {?} */\n    const classList = element.nativeElement.classList;\n    isAdd ? classList.add(className) : classList.remove(className);\n}\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * \\@docs-private\n * @deprecated Use `setLines` instead.\n * \\@breaking-change 8.0.0\n */\nclass MatLineSetter {\n    /**\n     * @param {?} lines\n     * @param {?} element\n     */\n    constructor(lines, element) {\n        setLines(lines, element);\n    }\n}\nclass MatLineModule {\n}\nMatLineModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatLineModule });\nMatLineModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatLineModule_Factory(t) { return new (t || MatLineModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatLineModule, { declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine,\n        MatCommonModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLineModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatLine, MatCommonModule],\n                declarations: [MatLine]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-ref.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RippleState = {\n    FADING_IN: 0, VISIBLE: 1, FADING_OUT: 2, HIDDEN: 3,\n};\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    /**\n     * @param {?} _renderer\n     * @param {?} element\n     * @param {?} config\n     */\n    constructor(_renderer, element, config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /**\n         * Current state of the ripple.\n         */\n        this.state = 3 /* HIDDEN */;\n    }\n    /**\n     * Fades out the ripple element.\n     * @return {?}\n     */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\nif (false) {\n    /**\n     * Current state of the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRef.prototype._renderer;\n    /**\n     * Reference to the ripple HTML element.\n     * @type {?}\n     */\n    RippleRef.prototype.element;\n    /**\n     * Ripple configuration used for the ripple.\n     * @type {?}\n     */\n    RippleRef.prototype.config;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple-renderer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface that describes the configuration for the animation of a ripple.\n * There are two animation phases with different durations for the ripples.\n * @record\n */\nfunction RippleAnimationConfig() { }\nif (false) {\n    /**\n     * Duration in milliseconds for the enter animation (expansion from point of contact).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.enterDuration;\n    /**\n     * Duration in milliseconds for the exit animation (fade-out).\n     * @type {?|undefined}\n     */\n    RippleAnimationConfig.prototype.exitDuration;\n}\n/**\n * Interface that describes the target for launching ripples.\n * It defines the ripple configuration and disabled state for interaction ripples.\n * \\@docs-private\n * @record\n */\nfunction RippleTarget() { }\nif (false) {\n    /**\n     * Configuration for ripples that are launched on pointer down.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleConfig;\n    /**\n     * Whether ripples on pointer down should be disabled.\n     * @type {?}\n     */\n    RippleTarget.prototype.rippleDisabled;\n}\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n * @type {?}\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 450,\n    exitDuration: 400\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n * @type {?}\n */\nconst ignoreMouseEventsTimeout = 800;\n/**\n * Options that apply to all the event listeners that are bound by the ripple renderer.\n * @type {?}\n */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * \\@docs-private\n */\nclass RippleRenderer {\n    /**\n     * @param {?} _target\n     * @param {?} _ngZone\n     * @param {?} elementOrElementRef\n     * @param {?} platform\n     */\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the pointer is currently down or not.\n         */\n        this._isPointerDown = false;\n        /**\n         * Events to be registered on the trigger element.\n         */\n        this._triggerEvents = new Map();\n        /**\n         * Set of currently active ripple references.\n         */\n        this._activeRipples = new Set();\n        /**\n         * Function being called whenever the trigger is being pressed using mouse.\n         */\n        this._onMousedown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            // Screen readers will fire fake mouse events for space/enter. Skip launching a\n            // ripple in this case for consistency with the non-screen-reader experience.\n            /** @type {?} */\n            const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n            /** @type {?} */\n            const isSyntheticEvent = this._lastTouchStartEvent &&\n                Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n            if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n                this._isPointerDown = true;\n                this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being pressed using touch.\n         */\n        this._onTouchStart = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (!this._target.rippleDisabled) {\n                // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n                // events will launch a second ripple if we don't ignore mouse events for a specific\n                // time after a touchstart event.\n                this._lastTouchStartEvent = Date.now();\n                this._isPointerDown = true;\n                // Use `changedTouches` so we skip any touches where the user put\n                // their finger down, but used another finger to tap the element again.\n                /** @type {?} */\n                const touches = event.changedTouches;\n                for (let i = 0; i < touches.length; i++) {\n                    this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n                }\n            }\n        });\n        /**\n         * Function being called whenever the trigger is being released.\n         */\n        this._onPointerUp = (/**\n         * @return {?}\n         */\n        () => {\n            if (!this._isPointerDown) {\n                return;\n            }\n            this._isPointerDown = false;\n            // Fade-out all ripples that are visible and not persistent.\n            this._activeRipples.forEach((/**\n             * @param {?} ripple\n             * @return {?}\n             */\n            ripple => {\n                // By default, only ripples that are completely visible will fade out on pointer release.\n                // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n                /** @type {?} */\n                const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                    ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */;\n                if (!ripple.config.persistent && isVisible) {\n                    ripple.fadeOut();\n                }\n            }));\n        });\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n            // Specify events which need to be registered on the trigger.\n            this._triggerEvents\n                .set('mousedown', this._onMousedown)\n                .set('mouseup', this._onPointerUp)\n                .set('mouseleave', this._onPointerUp)\n                .set('touchstart', this._onTouchStart)\n                .set('touchend', this._onPointerUp)\n                .set('touchcancel', this._onPointerUp);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param {?} x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param {?} y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param {?=} config Extra ripple options.\n     * @return {?}\n     */\n    fadeInRipple(x, y, config = {}) {\n        /** @type {?} */\n        const containerRect = this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect();\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        /** @type {?} */\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        /** @type {?} */\n        const offsetX = x - containerRect.left;\n        /** @type {?} */\n        const offsetY = y - containerRect.top;\n        /** @type {?} */\n        const duration = animationConfig.enterDuration;\n        /** @type {?} */\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        /** @type {?} */\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }), duration);\n        return rippleRef;\n    }\n    /**\n     * Fades out a ripple reference.\n     * @param {?} rippleRef\n     * @return {?}\n     */\n    fadeOutRipple(rippleRef) {\n        /** @type {?} */\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        /** @type {?} */\n        const rippleEl = rippleRef.element;\n        /** @type {?} */\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone((/**\n         * @return {?}\n         */\n        () => {\n            rippleRef.state = 3 /* HIDDEN */;\n            (/** @type {?} */ (rippleEl.parentNode)).removeChild(rippleEl);\n        }), animationConfig.exitDuration);\n    }\n    /**\n     * Fades out all currently active ripples.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._activeRipples.forEach((/**\n         * @param {?} ripple\n         * @return {?}\n         */\n        ripple => ripple.fadeOut()));\n    }\n    /**\n     * Sets up the trigger event listeners\n     * @param {?} elementOrElementRef\n     * @return {?}\n     */\n    setupTriggerEvents(elementOrElementRef) {\n        /** @type {?} */\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                element.addEventListener(type, fn, passiveEventOptions);\n            }));\n        }));\n        this._triggerElement = element;\n    }\n    /**\n     * Runs a timeout outside of the Angular zone to avoid triggering the change detection.\n     * @private\n     * @param {?} fn\n     * @param {?=} delay\n     * @return {?}\n     */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => setTimeout(fn, delay)));\n    }\n    /**\n     * Removes previously registered event listeners from the trigger element.\n     * @return {?}\n     */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            this._triggerEvents.forEach((/**\n             * @param {?} fn\n             * @param {?} type\n             * @return {?}\n             */\n            (fn, type) => {\n                (/** @type {?} */ (this._triggerElement)).removeEventListener(type, fn, passiveEventOptions);\n            }));\n        }\n    }\n}\nif (false) {\n    /**\n     * Element where the ripples are being added to.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerElement;\n    /**\n     * Element which triggers the ripple elements on mouse events.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerElement;\n    /**\n     * Whether the pointer is currently down or not.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._isPointerDown;\n    /**\n     * Events to be registered on the trigger element.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._triggerEvents;\n    /**\n     * Set of currently active ripple references.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._activeRipples;\n    /**\n     * Latest non-persistent ripple that was triggered.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._mostRecentTransientRipple;\n    /**\n     * Time in milliseconds when the last touchstart event happened.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._lastTouchStartEvent;\n    /**\n     * Cached dimensions of the ripple container. Set when the first\n     * ripple is shown and cleared once no more ripples are visible.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._containerRect;\n    /**\n     * Function being called whenever the trigger is being pressed using mouse.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onMousedown;\n    /**\n     * Function being called whenever the trigger is being pressed using touch.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onTouchStart;\n    /**\n     * Function being called whenever the trigger is being released.\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._onPointerUp;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._target;\n    /**\n     * @type {?}\n     * @private\n     */\n    RippleRenderer.prototype._ngZone;\n}\n/**\n * Enforces a style recalculation of a DOM element by computing its styles.\n * @param {?} element\n * @return {?}\n */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n * @param {?} x\n * @param {?} y\n * @param {?} rect\n * @return {?}\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    /** @type {?} */\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    /** @type {?} */\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/ripple.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Configurable options for `matRipple`.\n * @record\n */\nfunction RippleGlobalOptions() { }\nif (false) {\n    /**\n     * Whether ripples should be disabled. Ripples can be still launched manually by using\n     * the `launch()` method. Therefore focus indicators will still show up.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.disabled;\n    /**\n     * Configuration for the animation duration of the ripples. There are two phases with different\n     * durations for the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.animation;\n    /**\n     * Whether ripples should start fading out immediately after the mouse or touch is released. By\n     * default, ripples will wait for the enter animation to complete and for mouse or touch release.\n     * @type {?|undefined}\n     */\n    RippleGlobalOptions.prototype.terminateOnPointerUp;\n}\n/**\n * Injection token that can be used to specify the global ripple options.\n * @type {?}\n */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    /**\n     * @param {?} _elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} globalOptions\n     * @param {?=} animationMode\n     */\n    constructor(_elementRef, ngZone, platform, globalOptions, animationMode) {\n        this._elementRef = _elementRef;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /**\n         * Whether ripple directive is initialized and the input bindings are set.\n         */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n        if (animationMode === 'NoopAnimations') {\n            this._globalOptions.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     * @return {?}\n     */\n    get trigger() { return this._trigger || this._elementRef.nativeElement; }\n    /**\n     * @param {?} trigger\n     * @return {?}\n     */\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /**\n     * Fades out all currently showing ripple elements.\n     * @return {?}\n     */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign({}, this._globalOptions.animation), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * \\@docs-private Implemented as part of RippleTarget\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /**\n     * Sets up the trigger event listeners if ripples are enabled.\n     * @private\n     * @return {?}\n     */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /**\n     * Launches a manual ripple at the specified coordinated or just by the ripple config.\n     * @param {?} configOrX\n     * @param {?=} y\n     * @param {?=} config\n     * @return {?}\n     */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = function MatRipple_Factory(t) { return new (t || MatRipple)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatRipple.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRipple, selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]], hostAttrs: [1, \"mat-ripple\"], hostVars: 2, hostBindings: function MatRipple_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n    } }, inputs: { radius: [\"matRippleRadius\", \"radius\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"], color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], animation: [\"matRippleAnimation\", \"animation\"] }, exportAs: [\"matRipple\"] });\n/** @nocollapse */\nMatRipple.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatRipple.propDecorators = {\n    color: [{ type: Input, args: ['matRippleColor',] }],\n    unbounded: [{ type: Input, args: ['matRippleUnbounded',] }],\n    centered: [{ type: Input, args: ['matRippleCentered',] }],\n    radius: [{ type: Input, args: ['matRippleRadius',] }],\n    animation: [{ type: Input, args: ['matRippleAnimation',] }],\n    disabled: [{ type: Input, args: ['matRippleDisabled',] }],\n    trigger: [{ type: Input, args: ['matRippleTrigger',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRipple, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-ripple], [matRipple]',\n                exportAs: 'matRipple',\n                host: {\n                    'class': 'mat-ripple',\n                    '[class.mat-ripple-unbounded]': 'unbounded'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { radius: [{\n            type: Input,\n            args: ['matRippleRadius']\n        }], disabled: [{\n            type: Input,\n            args: ['matRippleDisabled']\n        }], trigger: [{\n            type: Input,\n            args: ['matRippleTrigger']\n        }], color: [{\n            type: Input,\n            args: ['matRippleColor']\n        }], unbounded: [{\n            type: Input,\n            args: ['matRippleUnbounded']\n        }], centered: [{\n            type: Input,\n            args: ['matRippleCentered']\n        }], animation: [{\n            type: Input,\n            args: ['matRippleAnimation']\n        }] }); })();\nif (false) {\n    /**\n     * Custom color for all ripples.\n     * @type {?}\n     */\n    MatRipple.prototype.color;\n    /**\n     * Whether the ripples should be visible outside the component's bounds.\n     * @type {?}\n     */\n    MatRipple.prototype.unbounded;\n    /**\n     * Whether the ripple always originates from the center of the host element's bounds, rather\n     * than originating from the location of the click event.\n     * @type {?}\n     */\n    MatRipple.prototype.centered;\n    /**\n     * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n     * will be the distance from the center of the ripple to the furthest corner of the host element's\n     * bounding rectangle.\n     * @type {?}\n     */\n    MatRipple.prototype.radius;\n    /**\n     * Configuration for the ripple animation. Allows modifying the enter and exit animation\n     * duration of the ripples. The animation durations will be overwritten if the\n     * `NoopAnimationsModule` is being used.\n     * @type {?}\n     */\n    MatRipple.prototype.animation;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._trigger;\n    /**\n     * Renderer for the ripple DOM manipulations.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._rippleRenderer;\n    /**\n     * Options that are set globally for all ripples.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._globalOptions;\n    /**\n     * Whether ripple directive is initialized and the input bindings are set.\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._isInitialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatRipple.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/ripple/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRippleModule });\nMatRippleModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRippleModule_Factory(t) { return new (t || MatRippleModule)(); }, imports: [[MatCommonModule, PlatformModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRippleModule, { declarations: function () { return [MatRipple]; }, imports: function () { return [MatCommonModule,\n        PlatformModule]; }, exports: function () { return [MatRipple,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRippleModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, PlatformModule],\n                exports: [MatRipple, MatCommonModule],\n                declarations: [MatRipple]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/pseudo-checkbox/pseudo-checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * \\@docs-private\n */\nclass MatPseudoCheckbox {\n    /**\n     * @param {?=} _animationMode\n     */\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /**\n         * Display state of the checkbox.\n         */\n        this.state = 'unchecked';\n        /**\n         * Whether the checkbox is disabled.\n         */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = function MatPseudoCheckbox_Factory(t) { return new (t || MatPseudoCheckbox)(ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPseudoCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPseudoCheckbox, selectors: [[\"mat-pseudo-checkbox\"]], hostAttrs: [1, \"mat-pseudo-checkbox\"], hostVars: 8, hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { state: \"state\", disabled: \"disabled\" }, decls: 0, vars: 0, template: function MatPseudoCheckbox_Template(rf, ctx) { }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPseudoCheckbox.ctorParameters = () => [\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPseudoCheckbox.propDecorators = {\n    state: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                selector: 'mat-pseudo-checkbox',\n                template: '',\n                host: {\n                    'class': 'mat-pseudo-checkbox',\n                    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"]\n            }]\n    }], function () { return [{ type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { state: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Display state of the checkbox.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.state;\n    /**\n     * Whether the checkbox is disabled.\n     * @type {?}\n     */\n    MatPseudoCheckbox.prototype.disabled;\n    /** @type {?} */\n    MatPseudoCheckbox.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/selection/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPseudoCheckboxModule });\nMatPseudoCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPseudoCheckboxModule_Factory(t) { return new (t || MatPseudoCheckboxModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPseudoCheckboxModule, { declarations: [MatPseudoCheckbox], exports: [MatPseudoCheckbox] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPseudoCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatPseudoCheckbox],\n                declarations: [MatPseudoCheckbox]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/optgroup.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatOptgroup.\n/**\n * \\@docs-private\n */\nclass MatOptgroupBase {\n}\n/** @type {?} */\nconst _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\n// Counter for unique group ids.\n/** @type {?} */\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupMixinBase {\n    constructor() {\n        super(...arguments);\n        /**\n         * Unique id for the underlying label.\n         */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n    }\n}\nMatOptgroup.ɵfac = function MatOptgroup_Factory(t) { return ɵMatOptgroup_BaseFactory(t || MatOptgroup); };\nMatOptgroup.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOptgroup, selectors: [[\"mat-optgroup\"]], hostAttrs: [\"role\", \"group\", 1, \"mat-optgroup\"], hostVars: 4, hostBindings: function MatOptgroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled.toString())(\"aria-labelledby\", ctx._labelId);\n        ɵngcc0.ɵɵclassProp(\"mat-optgroup-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", label: \"label\" }, exportAs: [\"matOptgroup\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 2, consts: [[1, \"mat-optgroup-label\", 3, \"id\"]], template: function MatOptgroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0);\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(3, 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"id\", ctx._labelId);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n    } }, styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatOptgroup.propDecorators = {\n    label: [{ type: Input }]\n};\nconst ɵMatOptgroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatOptgroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptgroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-optgroup',\n                exportAs: 'matOptgroup',\n                template: \"<label class=\\\"mat-optgroup-label\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></label>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-optgroup',\n                    'role': 'group',\n                    '[class.mat-optgroup-disabled]': 'disabled',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-labelledby]': '_labelId'\n                },\n                styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"]\n            }]\n    }], null, { label: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOptgroup.ngAcceptInputType_disabled;\n    /**\n     * Label for the option group.\n     * @type {?}\n     */\n    MatOptgroup.prototype.label;\n    /**\n     * Unique id for the underlying label.\n     * @type {?}\n     */\n    MatOptgroup.prototype._labelId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/option.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n * @type {?}\n */\nlet _uniqueIdCounter = 0;\n/**\n * Event object emitted by MatOption when selected or deselected.\n */\nclass MatOptionSelectionChange {\n    /**\n     * @param {?} source\n     * @param {?=} isUserInput\n     */\n    constructor(source, isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nif (false) {\n    /**\n     * Reference to the option that emitted the event.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.source;\n    /**\n     * Whether the change in the option's value was a result of a user action.\n     * @type {?}\n     */\n    MatOptionSelectionChange.prototype.isUserInput;\n}\n/**\n * Describes a parent component that manages a list of options.\n * Contains properties that the options can inherit.\n * \\@docs-private\n * @record\n */\nfunction MatOptionParentComponent() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.disableRipple;\n    /** @type {?|undefined} */\n    MatOptionParentComponent.prototype.multiple;\n}\n/**\n * Injection token used to provide the parent component to options.\n * @type {?}\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption {\n    /**\n     * @param {?} _element\n     * @param {?} _changeDetectorRef\n     * @param {?} _parent\n     * @param {?} group\n     */\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /**\n         * The unique ID of the option.\n         */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /**\n         * Event emitted when the option is selected or deselected.\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /**\n         * Emits when the state of the option changes and any parents have to be notified.\n         */\n        this._stateChanges = new Subject();\n    }\n    /**\n     * Whether the wrapping component is in multiple selection mode.\n     * @return {?}\n     */\n    get multiple() { return this._parent && this._parent.multiple; }\n    /**\n     * Whether or not the option is currently selected.\n     * @return {?}\n     */\n    get selected() { return this._selected; }\n    /**\n     * Whether the option is disabled.\n     * @return {?}\n     */\n    get disabled() { return (this.group && this.group.disabled) || this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /**\n     * Whether ripples for the option are disabled.\n     * @return {?}\n     */\n    get disableRipple() { return this._parent && this._parent.disableRipple; }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     * @return {?}\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     * @return {?}\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /**\n     * Selects the option.\n     * @return {?}\n     */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Deselects the option.\n     * @return {?}\n     */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /**\n     * Sets focus onto this option.\n     * @param {?=} _origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        /** @type {?} */\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     * @return {?}\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        return this.viewValue;\n    }\n    /**\n     * Ensures the option is selected when activated from the keyboard.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     * @return {?}\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     * @return {?}\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /**\n     * Returns the correct tabindex for the option depending on disabled state.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Gets the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            /** @type {?} */\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * Emits the selection change event.\n     * @private\n     * @param {?=} isUserInput\n     * @return {?}\n     */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\nMatOption.ɵfac = function MatOption_Factory(t) { return new (t || MatOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), ɵngcc0.ɵɵdirectiveInject(MatOptgroup, 8)); };\nMatOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatOption, selectors: [[\"mat-option\"]], hostAttrs: [\"role\", \"option\", 1, \"mat-option\", \"mat-focus-indicator\"], hostVars: 12, hostBindings: function MatOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler($event) { return ctx._selectViaInteraction(); })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-selected\", ctx._getAriaSelected())(\"aria-disabled\", ctx.disabled.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-selected\", ctx.selected)(\"mat-option-multiple\", ctx.multiple)(\"mat-active\", ctx.active)(\"mat-option-disabled\", ctx.disabled);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", value: \"value\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, exportAs: [\"matOption\"], ngContentSelectors: _c2, decls: 4, vars: 3, consts: [[\"class\", \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-option-text\"], [\"mat-ripple\", \"\", 1, \"mat-option-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\", \"disabled\"]], template: function MatOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatOption_mat_pseudo_checkbox_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n    } }, directives: [ɵngcc3.NgIf, MatRipple,\n        MatPseudoCheckbox], styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_OPTION_PARENT_COMPONENT,] }] },\n    { type: MatOptgroup, decorators: [{ type: Optional }] }\n];\nMatOption.propDecorators = {\n    value: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }],\n    onSelectionChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-option',\n                exportAs: 'matOption',\n                host: {\n                    'role': 'option',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[class.mat-selected]': 'selected',\n                    '[class.mat-option-multiple]': 'multiple',\n                    '[class.mat-active]': 'active',\n                    '[id]': 'id',\n                    '[attr.aria-selected]': '_getAriaSelected()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[class.mat-option-disabled]': 'disabled',\n                    '(click)': '_selectViaInteraction()',\n                    '(keydown)': '_handleKeydown($event)',\n                    'class': 'mat-option mat-focus-indicator'\n                },\n                template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.cdk-high-contrast-active .mat-option .mat-option-ripple{opacity:.5}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_OPTION_PARENT_COMPONENT]\n            }] }, { type: MatOptgroup, decorators: [{\n                type: Optional\n            }] }]; }, { id: [{\n            type: Input\n        }], onSelectionChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatOption.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._selected;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._active;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._mostRecentViewValue;\n    /**\n     * The form value of the option.\n     * @type {?}\n     */\n    MatOption.prototype.value;\n    /**\n     * The unique ID of the option.\n     * @type {?}\n     */\n    MatOption.prototype.id;\n    /**\n     * Event emitted when the option is selected or deselected.\n     * @type {?}\n     */\n    MatOption.prototype.onSelectionChange;\n    /**\n     * Emits when the state of the option changes and any parents have to be notified.\n     * @type {?}\n     */\n    MatOption.prototype._stateChanges;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatOption.prototype._parent;\n    /** @type {?} */\n    MatOption.prototype.group;\n}\n/**\n * Counts the amount of option group labels that precede the specified option.\n * \\@docs-private\n * @param {?} optionIndex Index of the option at which to start counting.\n * @param {?} options Flat list of all of the options.\n * @param {?} optionGroups Flat list of all of the option groups.\n * @return {?}\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        /** @type {?} */\n        let optionsArray = options.toArray();\n        /** @type {?} */\n        let groups = optionGroups.toArray();\n        /** @type {?} */\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * \\@docs-private\n * @param {?} optionIndex Index of the option to be scrolled into the view.\n * @param {?} optionHeight Height of the options.\n * @param {?} currentScrollPosition Current scroll position of the panel.\n * @param {?} panelHeight Height of the panel.\n * @return {?}\n */\nfunction _getOptionScrollPosition(optionIndex, optionHeight, currentScrollPosition, panelHeight) {\n    /** @type {?} */\n    const optionOffset = optionIndex * optionHeight;\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/option/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatOptionModule });\nMatOptionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatOptionModule_Factory(t) { return new (t || MatOptionModule)(); }, imports: [[MatRippleModule, CommonModule, MatPseudoCheckboxModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatOptionModule, { declarations: function () { return [MatOption,\n        MatOptgroup]; }, imports: function () { return [MatRippleModule,\n        CommonModule,\n        MatPseudoCheckboxModule]; }, exports: function () { return [MatOption,\n        MatOptgroup]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatOptionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\n                exports: [MatOption, MatOptgroup],\n                declarations: [MatOption, MatOptgroup]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/label/label-options.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * InjectionToken that can be used to specify the global label options.\n * @deprecated Use `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token from\n *     `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @type {?}\n */\nconst MAT_LABEL_GLOBAL_OPTIONS = new InjectionToken('mat-label-global-options');\n/**\n * Configurable options for floating labels.\n * @deprecated Use `MatFormFieldDefaultOptions` from `\\@angular/material/form-field` instead.\n * \\@breaking-change 11.0.0\n * @record\n */\nfunction LabelOptions() { }\nif (false) {\n    /**\n     * Whether the label should float `always`, `never`, or `auto` (only when necessary).\n     * Default behavior is assumed to be `auto`.\n     * @type {?|undefined}\n     */\n    LabelOptions.prototype.float;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/month-constants.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\n * \\@docs-private\n * \\@breaking-change 8.0.0 Remove this with V8 since it was only targeted for testing.\n * @type {?}\n */\nconst JAN = 0;\n/** @type {?} */\nconst FEB = 1;\n/** @type {?} */\nconst MAR = 2;\n/** @type {?} */\nconst APR = 3;\n/** @type {?} */\nconst MAY = 4;\n/** @type {?} */\nconst JUN = 5;\n/** @type {?} */\nconst JUL = 6;\n/** @type {?} */\nconst AUG = 7;\n/** @type {?} */\nconst SEP = 8;\n/** @type {?} */\nconst OCT = 9;\n/** @type {?} */\nconst NOV = 10;\n/** @type {?} */\nconst DEC = 11;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/core/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { APR, AUG, AnimationCurves, AnimationDurations, DEC, DateAdapter, ErrorStateMatcher, FEB, GestureConfig, JAN, JUL, JUN, MAR, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_DATE_LOCALE_PROVIDER, MAT_HAMMER_OPTIONS, MAT_LABEL_GLOBAL_OPTIONS, MAT_NATIVE_DATE_FORMATS, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MAY, MatCommonModule, MatLine, MatLineModule, MatLineSetter, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NOV, NativeDateAdapter, NativeDateModule, OCT, RippleRef, RippleRenderer, SEP, ShowOnDirtyErrorStateMatcher, VERSION, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines, MATERIAL_SANITY_CHECKS_FACTORY as ɵangular_material_src_material_core_core_a };\n\n//# sourceMappingURL=core.js.map","import { CommonModule } from '@angular/common';\nimport { Directive, Input, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Inject, NgZone, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { mixinColor, MAT_LABEL_GLOBAL_OPTIONS } from '@angular/material/core';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/error.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/cdk/platform';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/observers';\n\nconst _c0 = [\"underline\"];\nconst _c1 = [\"connectionContainer\"];\nconst _c2 = [\"inputContainer\"];\nconst _c3 = [\"label\"];\nfunction MatFormField_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 14);\n    ɵngcc0.ɵɵelement(2, \"div\", 15);\n    ɵngcc0.ɵɵelement(3, \"div\", 16);\n    ɵngcc0.ɵɵelement(4, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"div\", 18);\n    ɵngcc0.ɵɵelement(6, \"div\", 15);\n    ɵngcc0.ɵɵelement(7, \"div\", 16);\n    ɵngcc0.ɵɵelement(8, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction MatFormField_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵprojection(1, 1);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1, 2);\n    ɵngcc0.ɵɵelementStart(2, \"span\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r11._control.placeholder);\n} }\nfunction MatFormField_label_9_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 3, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatFormField_label_9_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 23);\n    ɵngcc0.ɵɵtext(1, \" *\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_label_9_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"label\", 20, 21);\n    ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatFormField_label_9_Template_label_cdkObserveContent_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.updateOutlineGap(); });\n    ɵngcc0.ɵɵtemplate(2, MatFormField_label_9_ng_container_2_Template, 4, 1, \"ng-container\", 12);\n    ɵngcc0.ɵɵtemplate(3, MatFormField_label_9_3_Template, 1, 0, undefined, 12);\n    ɵngcc0.ɵɵtemplate(4, MatFormField_label_9_span_4_Template, 2, 0, \"span\", 22);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-form-field-empty\", ctx_r5._control.empty && !ctx_r5._shouldAlwaysFloat)(\"mat-accent\", ctx_r5.color == \"accent\")(\"mat-warn\", ctx_r5.color == \"warn\");\n    ɵngcc0.ɵɵproperty(\"cdkObserveContentDisabled\", ctx_r5.appearance != \"outline\")(\"id\", ctx_r5._labelId)(\"ngSwitch\", ctx_r5._hasLabel());\n    ɵngcc0.ɵɵattribute(\"for\", ctx_r5._control.id)(\"aria-owns\", ctx_r5._control.id);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.hideRequiredMarker && ctx_r5._control.required && !ctx_r5._control.disabled);\n} }\nfunction MatFormField_div_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵprojection(1, 4);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction MatFormField_div_11_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25, 26);\n    ɵngcc0.ɵɵelement(2, \"span\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassProp(\"mat-accent\", ctx_r7.color == \"accent\")(\"mat-warn\", ctx_r7.color == \"warn\");\n} }\nfunction MatFormField_div_13_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵprojection(1, 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r8._subscriptAnimationState);\n} }\nfunction MatFormField_div_14_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 31);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r17._hintLabelId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r17.hintLabel);\n} }\nfunction MatFormField_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵtemplate(1, MatFormField_div_14_div_1_Template, 2, 2, \"div\", 29);\n    ɵngcc0.ɵɵprojection(2, 6);\n    ɵngcc0.ɵɵelement(3, \"div\", 30);\n    ɵngcc0.ɵɵprojection(4, 7);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transitionMessages\", ctx_r9._subscriptAnimationState);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r9.hintLabel);\n} }\nconst _c4 = [\"*\", [[\"\", \"matPrefix\", \"\"]], [[\"mat-placeholder\"]], [[\"mat-label\"]], [[\"\", \"matSuffix\", \"\"]], [[\"mat-error\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c5 = [\"*\", \"[matPrefix]\", \"mat-placeholder\", \"mat-label\", \"[matSuffix]\", \"mat-error\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nlet nextUniqueId = 0;\n/**\n * Single error message to be shown underneath the form field.\n */\nclass MatError {\n    constructor() {\n        this.id = `mat-error-${nextUniqueId++}`;\n    }\n}\nMatError.ɵfac = function MatError_Factory(t) { return new (t || MatError)(); };\nMatError.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatError, selectors: [[\"mat-error\"]], hostAttrs: [\"role\", \"alert\", 1, \"mat-error\"], hostVars: 1, hostBindings: function MatError_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\" } });\nMatError.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatError, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-error',\n                host: {\n                    'class': 'mat-error',\n                    'role': 'alert',\n                    '[attr.id]': 'id'\n                }\n            }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatError.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the MatFormField.\n * \\@docs-private\n * @type {?}\n */\nconst matFormFieldAnimations = {\n    /**\n     * Animation that transitions the form field's error and hint messages.\n     */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-100%)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-control.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An interface which allows a control to work inside of a `MatFormField`.\n * @abstract\n * @template T\n */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = function MatFormFieldControl_Factory(t) { return new (t || MatFormFieldControl)(); };\nMatFormFieldControl.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFormFieldControl });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldControl, [{\n        type: Directive\n    }], null, null); })();\nif (false) {\n    /**\n     * The value of the control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.value;\n    /**\n     * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n     * needs to run change detection.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.stateChanges;\n    /**\n     * The element ID for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.id;\n    /**\n     * The placeholder for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.placeholder;\n    /**\n     * Gets the NgControl for this control.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.ngControl;\n    /**\n     * Whether the control is focused.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.focused;\n    /**\n     * Whether the control is empty.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.empty;\n    /**\n     * Whether the `MatFormField` label should try to float.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.shouldLabelFloat;\n    /**\n     * Whether the control is required.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.required;\n    /**\n     * Whether the control is disabled.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.disabled;\n    /**\n     * Whether the control is in an error state.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.errorState;\n    /**\n     * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n     * based on their control type. The form field will add a class,\n     * `mat-form-field-type-{{controlType}}` to its root element.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.controlType;\n    /**\n     * Whether the input is currently in an autofilled state. If property is not present on the\n     * control it is assumed to be false.\n     * @type {?}\n     */\n    MatFormFieldControl.prototype.autofilled;\n    /**\n     * Sets the list of element IDs that currently describe this control.\n     * @abstract\n     * @param {?} ids\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.setDescribedByIds = function (ids) { };\n    /**\n     * Handles a click on the control's container.\n     * @abstract\n     * @param {?} event\n     * @return {?}\n     */\n    MatFormFieldControl.prototype.onContainerClick = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/**\n * \\@docs-private\n * @param {?} align\n * @return {?}\n */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/hint.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$1 = 0;\n/**\n * Hint text to be shown underneath the form field control.\n */\nclass MatHint {\n    constructor() {\n        /**\n         * Whether to align the hint label at the start or end of the line.\n         */\n        this.align = 'start';\n        /**\n         * Unique ID for the hint. Used for the aria-describedby on the form field control.\n         */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = function MatHint_Factory(t) { return new (t || MatHint)(); };\nMatHint.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHint, selectors: [[\"mat-hint\"]], hostAttrs: [1, \"mat-hint\"], hostVars: 4, hostBindings: function MatHint_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"align\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-right\", ctx.align == \"end\");\n    } }, inputs: { align: \"align\", id: \"id\" } });\nMatHint.propDecorators = {\n    align: [{ type: Input }],\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHint, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-hint',\n                host: {\n                    'class': 'mat-hint',\n                    '[class.mat-right]': 'align == \"end\"',\n                    '[attr.id]': 'id',\n                    // Remove align attribute to prevent it from interfering with layout.\n                    '[attr.align]': 'null'\n                }\n            }]\n    }], function () { return []; }, { align: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Whether to align the hint label at the start or end of the line.\n     * @type {?}\n     */\n    MatHint.prototype.align;\n    /**\n     * Unique ID for the hint. Used for the aria-describedby on the form field control.\n     * @type {?}\n     */\n    MatHint.prototype.id;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The floating label for a `mat-form-field`.\n */\nclass MatLabel {\n}\nMatLabel.ɵfac = function MatLabel_Factory(t) { return new (t || MatLabel)(); };\nMatLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatLabel, selectors: [[\"mat-label\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatLabel, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-label'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/placeholder.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * \\@breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = function MatPlaceholder_Factory(t) { return new (t || MatPlaceholder)(); };\nMatPlaceholder.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPlaceholder, selectors: [[\"mat-placeholder\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPlaceholder, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-placeholder'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/prefix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Prefix to be placed in front of the form field.\n */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = function MatPrefix_Factory(t) { return new (t || MatPrefix)(); };\nMatPrefix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatPrefix, selectors: [[\"\", \"matPrefix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPrefix, [{\n        type: Directive,\n        args: [{\n                selector: '[matPrefix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/suffix.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Suffix to be placed at the end of the form field.\n */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = function MatSuffix_Factory(t) { return new (t || MatSuffix)(); };\nMatSuffix.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSuffix, selectors: [[\"\", \"matSuffix\", \"\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSuffix, [{\n        type: Directive,\n        args: [{\n                selector: '[matSuffix]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId$2 = 0;\n/** @type {?} */\nconst floatingLabelScale = 0.75;\n/** @type {?} */\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * \\@docs-private\n */\nclass MatFormFieldBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatFormFieldBase.prototype._elementRef;\n}\n/**\n * Base class to which we're applying the form field mixins.\n * \\@docs-private\n * @type {?}\n */\nconst _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n * @record\n */\nfunction MatFormFieldDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.appearance;\n    /** @type {?|undefined} */\n    MatFormFieldDefaultOptions.prototype.hideRequiredMarker;\n    /**\n     * Whether the label for form-fields should by default float `always`,\n     * `never`, or `auto` (only when necessary).\n     * @type {?|undefined}\n     */\n    MatFormFieldDefaultOptions.prototype.floatLabel;\n}\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n * @type {?}\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Container for form controls that applies Material Design styling and behavior.\n */\nclass MatFormField extends _MatFormFieldMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} labelOptions\n     * @param {?} _dir\n     * @param {?} _defaults\n     * @param {?} _platform\n     * @param {?} _ngZone\n     * @param {?} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, labelOptions, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /**\n         * Whether the outline gap needs to be calculated next time the zone has stabilized.\n         */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /**\n         * Override for the logic that disables the label animation in certain cases.\n         */\n        this._showAlwaysAnimate = false;\n        /**\n         * State of the mat-hint and mat-error animations.\n         */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId$2++}`;\n        // Unique id for the internal form field label.\n        this._labelId = `mat-form-field-label-${nextUniqueId$2++}`;\n        this._labelOptions = labelOptions ? labelOptions : {};\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n            _defaults.hideRequiredMarker : false;\n    }\n    /**\n     * The form-field appearance style.\n     * @return {?}\n     */\n    get appearance() { return this._appearance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set appearance(value) {\n        /** @type {?} */\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /**\n     * Whether the required marker should be hidden.\n     * @return {?}\n     */\n    get hideRequiredMarker() { return this._hideRequiredMarker; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the floating label should always float or not.\n     * @return {?}\n     */\n    get _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /**\n     * Whether the label can float or not.\n     * @return {?}\n     */\n    get _canLabelFloat() { return this.floatLabel !== 'never'; }\n    /**\n     * Text for the form field hint.\n     * @return {?}\n     */\n    get hintLabel() { return this._hintLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     * @return {?}\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * @return {?}\n     */\n    get _labelChild() {\n        return this._labelChildNonStatic || this._labelChildStatic;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     * @return {?}\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._validateControlChild();\n        /** @type {?} */\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith((/** @type {?} */ (null)))).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._changeDetectorRef.markForCheck()));\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            }));\n        }));\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        }));\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        }));\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular((/**\n                     * @return {?}\n                     */\n                    () => {\n                        requestAnimationFrame((/**\n                         * @return {?}\n                         */\n                        () => this.updateOutlineGap()));\n                    }));\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Determines whether a class from the NgControl should be forwarded to the host element.\n     * @param {?} prop\n     * @return {?}\n     */\n    _shouldForward(prop) {\n        /** @type {?} */\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    /**\n     * @return {?}\n     */\n    _hasPlaceholder() {\n        return !!(this._control && this._control.placeholder || this._placeholderChild);\n    }\n    /**\n     * @return {?}\n     */\n    _hasLabel() {\n        return !!this._labelChild;\n    }\n    /**\n     * @return {?}\n     */\n    _shouldLabelFloat() {\n        return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n    }\n    /**\n     * @return {?}\n     */\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this.appearance === 'legacy' && !this._hasLabel() ||\n            this._hasLabel() && !this._shouldLabelFloat();\n    }\n    /**\n     * @return {?}\n     */\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n    }\n    /**\n     * Determines whether to display hints or errors.\n     * @return {?}\n     */\n    _getDisplayedMessages() {\n        return (this._errorChildren && this._errorChildren.length > 0 &&\n            this._control.errorState) ? 'error' : 'hint';\n    }\n    /**\n     * Animates the placeholder up and locks it in position.\n     * @return {?}\n     */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._showAlwaysAnimate = false;\n                }));\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     * @private\n     * @return {?}\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder && this._placeholderChild) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /**\n     * Does any extra processing that is required when handling the hints.\n     * @private\n     * @return {?}\n     */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     * @private\n     * @return {?}\n     */\n    _validateHints() {\n        if (this._hintChildren) {\n            /** @type {?} */\n            let startHint;\n            /** @type {?} */\n            let endHint;\n            this._hintChildren.forEach((/**\n             * @param {?} hint\n             * @return {?}\n             */\n            (hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            }));\n        }\n    }\n    /**\n     * Gets the default float label state.\n     * @private\n     * @return {?}\n     */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     * @private\n     * @return {?}\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            /** @type {?} */\n            let ids = [];\n            if (this._getDisplayedMessages() === 'hint') {\n                /** @type {?} */\n                const startHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'start')) : null;\n                /** @type {?} */\n                const endHint = this._hintChildren ?\n                    this._hintChildren.find((/**\n                     * @param {?} hint\n                     * @return {?}\n                     */\n                    hint => hint.align === 'end')) : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids = this._errorChildren.map((/**\n                 * @param {?} error\n                 * @return {?}\n                 */\n                error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /**\n     * Throws an error if the form field's control is missing.\n     * @protected\n     * @return {?}\n     */\n    _validateControlChild() {\n        if (!this._control) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     * @return {?}\n     */\n    updateOutlineGap() {\n        /** @type {?} */\n        const labelEl = this._label ? this._label.nativeElement : null;\n        if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n            !labelEl.textContent.trim()) {\n            return;\n        }\n        if (!this._platform.isBrowser) {\n            // getBoundingClientRect isn't available on the server.\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        /** @type {?} */\n        let startWidth = 0;\n        /** @type {?} */\n        let gapWidth = 0;\n        /** @type {?} */\n        const container = this._connectionContainerRef.nativeElement;\n        /** @type {?} */\n        const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n        /** @type {?} */\n        const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n        if (this._label && this._label.nativeElement.children.length) {\n            /** @type {?} */\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            /** @type {?} */\n            const containerStart = this._getStartEnd(containerRect);\n            /** @type {?} */\n            const labelStart = this._getStartEnd(labelEl.children[0].getBoundingClientRect());\n            /** @type {?} */\n            let labelWidth = 0;\n            for (const child of labelEl.children) {\n                labelWidth += child.offsetWidth;\n            }\n            startWidth = labelStart - containerStart - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable =\n            this._outlineGapCalculationNeededImmediately = false;\n    }\n    /**\n     * Gets the start end of the rect considering the current directionality.\n     * @private\n     * @param {?} rect\n     * @return {?}\n     */\n    _getStartEnd(rect) {\n        return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n    }\n    /**\n     * Checks whether the form field is attached to the DOM.\n     * @private\n     * @return {?}\n     */\n    _isAttachedToDOM() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            /** @type {?} */\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return (/** @type {?} */ (document.documentElement)).contains(element);\n    }\n}\nMatFormField.ɵfac = function MatFormField_Factory(t) { return new (t || MatFormField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_LABEL_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatFormField.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFormField, selectors: [[\"mat-form-field\"]], contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatFormFieldControl, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵstaticContentQuery(dirIndex, MatLabel, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPlaceholder, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatError, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatHint, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatPrefix, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSuffix, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._controlStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildNonStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._labelChildStatic = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._placeholderChild = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n    } }, viewQuery: function MatFormField_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵstaticViewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n        ɵngcc0.ɵɵviewQuery(_c3, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.underlineRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._connectionContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputContainerRef = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._label = _t.first);\n    } }, hostAttrs: [1, \"mat-form-field\"], hostVars: 44, hostBindings: function MatFormField_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-form-field-appearance-standard\", ctx.appearance == \"standard\")(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-appearance-legacy\", ctx.appearance == \"legacy\")(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-can-float\", ctx._canLabelFloat)(\"mat-form-field-should-float\", ctx._shouldLabelFloat())(\"mat-form-field-has-label\", ctx._hasFloatingLabel())(\"mat-form-field-hide-placeholder\", ctx._hideControlPlaceholder())(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-focused\", ctx._control.focused)(\"mat-accent\", ctx.color == \"accent\")(\"mat-warn\", ctx.color == \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"))(\"_mat-animation-noopable\", !ctx._animationsEnabled);\n    } }, inputs: { color: \"color\", floatLabel: \"floatLabel\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\" }, exportAs: [\"matFormField\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c5, decls: 15, vars: 8, consts: [[1, \"mat-form-field-wrapper\"], [1, \"mat-form-field-flex\", 3, \"click\"], [\"connectionContainer\", \"\"], [4, \"ngIf\"], [\"class\", \"mat-form-field-prefix\", 4, \"ngIf\"], [1, \"mat-form-field-infix\"], [\"inputContainer\", \"\"], [1, \"mat-form-field-label-wrapper\"], [\"class\", \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"mat-empty\", \"mat-form-field-empty\", \"mat-accent\", \"mat-warn\", \"ngSwitch\", \"cdkObserveContent\", 4, \"ngIf\"], [\"class\", \"mat-form-field-suffix\", 4, \"ngIf\"], [\"class\", \"mat-form-field-underline\", 4, \"ngIf\"], [1, \"mat-form-field-subscript-wrapper\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"mat-form-field-hint-wrapper\", 4, \"ngSwitchCase\"], [1, \"mat-form-field-outline\"], [1, \"mat-form-field-outline-start\"], [1, \"mat-form-field-outline-gap\"], [1, \"mat-form-field-outline-end\"], [1, \"mat-form-field-outline\", \"mat-form-field-outline-thick\"], [1, \"mat-form-field-prefix\"], [1, \"mat-form-field-label\", 3, \"cdkObserveContentDisabled\", \"id\", \"ngSwitch\", \"cdkObserveContent\"], [\"label\", \"\"], [\"class\", \"mat-placeholder-required mat-form-field-required-marker\", \"aria-hidden\", \"true\", 4, \"ngIf\"], [\"aria-hidden\", \"true\", 1, \"mat-placeholder-required\", \"mat-form-field-required-marker\"], [1, \"mat-form-field-suffix\"], [1, \"mat-form-field-underline\"], [\"underline\", \"\"], [1, \"mat-form-field-ripple\"], [1, \"mat-form-field-hint-wrapper\"], [\"class\", \"mat-hint\", 3, \"id\", 4, \"ngIf\"], [1, \"mat-form-field-hint-spacer\"], [1, \"mat-hint\", 3, \"id\"]], template: function MatFormField_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c4);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_1_listener($event) { return ctx._control.onContainerClick && ctx._control.onContainerClick($event); });\n        ɵngcc0.ɵɵtemplate(3, MatFormField_ng_container_3_Template, 9, 0, \"ng-container\", 3);\n        ɵngcc0.ɵɵtemplate(4, MatFormField_div_4_Template, 2, 0, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵprojection(7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatFormField_label_9_Template, 5, 16, \"label\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(10, MatFormField_div_10_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(11, MatFormField_div_11_Template, 3, 4, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(12, \"div\", 11);\n        ɵngcc0.ɵɵtemplate(13, MatFormField_div_13_Template, 2, 1, \"div\", 12);\n        ɵngcc0.ɵɵtemplate(14, MatFormField_div_14_Template, 5, 2, \"div\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance == \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._prefixChildren.length);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._hasFloatingLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._suffixChildren.length);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.appearance != \"outline\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx._getDisplayedMessages());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"hint\");\n    } }, directives: [ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc4.CdkObserveContent], styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], encapsulation: 2, data: { animation: [matFormFieldAnimations.transitionMessages] }, changeDetection: 0 });\n/** @nocollapse */\nMatFormField.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LABEL_GLOBAL_OPTIONS,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD_DEFAULT_OPTIONS,] }] },\n    { type: Platform },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatFormField.propDecorators = {\n    appearance: [{ type: Input }],\n    hideRequiredMarker: [{ type: Input }],\n    hintLabel: [{ type: Input }],\n    floatLabel: [{ type: Input }],\n    underlineRef: [{ type: ViewChild, args: ['underline',] }],\n    _connectionContainerRef: [{ type: ViewChild, args: ['connectionContainer', { static: true },] }],\n    _inputContainerRef: [{ type: ViewChild, args: ['inputContainer',] }],\n    _label: [{ type: ViewChild, args: ['label',] }],\n    _controlNonStatic: [{ type: ContentChild, args: [MatFormFieldControl,] }],\n    _controlStatic: [{ type: ContentChild, args: [MatFormFieldControl, { static: true },] }],\n    _labelChildNonStatic: [{ type: ContentChild, args: [MatLabel,] }],\n    _labelChildStatic: [{ type: ContentChild, args: [MatLabel, { static: true },] }],\n    _placeholderChild: [{ type: ContentChild, args: [MatPlaceholder,] }],\n    _errorChildren: [{ type: ContentChildren, args: [MatError, { descendants: true },] }],\n    _hintChildren: [{ type: ContentChildren, args: [MatHint, { descendants: true },] }],\n    _prefixChildren: [{ type: ContentChildren, args: [MatPrefix, { descendants: true },] }],\n    _suffixChildren: [{ type: ContentChildren, args: [MatSuffix, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormField, [{\n        type: Component,\n        args: [{\n                selector: 'mat-form-field',\n                exportAs: 'matFormField',\n                template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div class=\\\"mat-form-field-prefix\\\" *ngIf=\\\"_prefixChildren.length\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\" #underline\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\",\n                animations: [matFormFieldAnimations.transitionMessages],\n                host: {\n                    'class': 'mat-form-field',\n                    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                    '[class.mat-form-field-invalid]': '_control.errorState',\n                    '[class.mat-form-field-can-float]': '_canLabelFloat',\n                    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                    '[class.mat-form-field-disabled]': '_control.disabled',\n                    '[class.mat-form-field-autofilled]': '_control.autofilled',\n                    '[class.mat-focused]': '_control.focused',\n                    '[class.mat-accent]': 'color == \"accent\"',\n                    '[class.mat-warn]': 'color == \"warn\"',\n                    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                    '[class.ng-touched]': '_shouldForward(\"touched\")',\n                    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                    '[class.ng-valid]': '_shouldForward(\"valid\")',\n                    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                    '[class.ng-pending]': '_shouldForward(\"pending\")',\n                    '[class._mat-animation-noopable]': '!_animationsEnabled'\n                },\n                inputs: ['color'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:scaleX(1);transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element::-ms-clear,.mat-input-element::-ms-reveal{display:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder:-ms-input-placeholder{-ms-user-select:text}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-ms-expand{display:none}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}select.mat-input-element::-ms-value{color:inherit;background:none}.mat-focused .cdk-high-contrast-active select.mat-input-element::-ms-value{color:inherit}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px);-ms-transform:none}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LABEL_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n            }] }, { type: ɵngcc2.Platform }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { floatLabel: [{\n            type: Input\n        }], appearance: [{\n            type: Input\n        }], hideRequiredMarker: [{\n            type: Input\n        }], hintLabel: [{\n            type: Input\n        }], underlineRef: [{\n            type: ViewChild,\n            args: ['underline']\n        }], _connectionContainerRef: [{\n            type: ViewChild,\n            args: ['connectionContainer', { static: true }]\n        }], _inputContainerRef: [{\n            type: ViewChild,\n            args: ['inputContainer']\n        }], _label: [{\n            type: ViewChild,\n            args: ['label']\n        }], _controlNonStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl]\n        }], _controlStatic: [{\n            type: ContentChild,\n            args: [MatFormFieldControl, { static: true }]\n        }], _labelChildNonStatic: [{\n            type: ContentChild,\n            args: [MatLabel]\n        }], _labelChildStatic: [{\n            type: ContentChild,\n            args: [MatLabel, { static: true }]\n        }], _placeholderChild: [{\n            type: ContentChild,\n            args: [MatPlaceholder]\n        }], _errorChildren: [{\n            type: ContentChildren,\n            args: [MatError, { descendants: true }]\n        }], _hintChildren: [{\n            type: ContentChildren,\n            args: [MatHint, { descendants: true }]\n        }], _prefixChildren: [{\n            type: ContentChildren,\n            args: [MatPrefix, { descendants: true }]\n        }], _suffixChildren: [{\n            type: ContentChildren,\n            args: [MatSuffix, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatFormField.ngAcceptInputType_hideRequiredMarker;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._labelOptions;\n    /**\n     * Whether the outline gap needs to be calculated\n     * immediately on the next change detection run.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededImmediately;\n    /**\n     * Whether the outline gap needs to be calculated next time the zone has stabilized.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._outlineGapCalculationNeededOnStable;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._destroyed;\n    /** @type {?} */\n    MatFormField.prototype._appearance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hideRequiredMarker;\n    /**\n     * Override for the logic that disables the label animation in certain cases.\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._showAlwaysAnimate;\n    /**\n     * State of the mat-hint and mat-error animations.\n     * @type {?}\n     */\n    MatFormField.prototype._subscriptAnimationState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._hintLabel;\n    /** @type {?} */\n    MatFormField.prototype._hintLabelId;\n    /** @type {?} */\n    MatFormField.prototype._labelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._floatLabel;\n    /**\n     * Whether the Angular animations are enabled.\n     * @type {?}\n     */\n    MatFormField.prototype._animationsEnabled;\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatFormField.prototype.underlineRef;\n    /** @type {?} */\n    MatFormField.prototype._connectionContainerRef;\n    /** @type {?} */\n    MatFormField.prototype._inputContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._label;\n    /** @type {?} */\n    MatFormField.prototype._controlNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._controlStatic;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._explicitFormFieldControl;\n    /** @type {?} */\n    MatFormField.prototype._labelChildNonStatic;\n    /** @type {?} */\n    MatFormField.prototype._labelChildStatic;\n    /** @type {?} */\n    MatFormField.prototype._placeholderChild;\n    /** @type {?} */\n    MatFormField.prototype._errorChildren;\n    /** @type {?} */\n    MatFormField.prototype._hintChildren;\n    /** @type {?} */\n    MatFormField.prototype._prefixChildren;\n    /** @type {?} */\n    MatFormField.prototype._suffixChildren;\n    /** @type {?} */\n    MatFormField.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._defaults;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatFormField.prototype._ngZone;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/form-field-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatFormFieldModule });\nMatFormFieldModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatFormFieldModule_Factory(t) { return new (t || MatFormFieldModule)(); }, imports: [[\n            CommonModule,\n            ObserversModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatFormFieldModule, { declarations: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; }, imports: function () { return [CommonModule,\n        ObserversModule]; }, exports: function () { return [MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFormFieldModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ],\n                imports: [\n                    CommonModule,\n                    ObserversModule,\n                ],\n                exports: [\n                    MatError,\n                    MatFormField,\n                    MatHint,\n                    MatLabel,\n                    MatPlaceholder,\n                    MatPrefix,\n                    MatSuffix,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/form-field/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n\n//# sourceMappingURL=form-field.js.map","import { CdkTextareaAutosize, AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport { Directive, Input, InjectionToken, ElementRef, Optional, Self, Inject, NgZone, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { getSupportedInputTypes, Platform } from '@angular/cdk/platform';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/autosize.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to automatically resize a textarea to fit its content.\n * @deprecated Use `cdkTextareaAutosize` from `\\@angular/cdk/text-field` instead.\n * \\@breaking-change 8.0.0\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/text-field';\nclass MatTextareaAutosize extends CdkTextareaAutosize {\n    /**\n     * @return {?}\n     */\n    get matAutosizeMinRows() { return this.minRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMinRows(value) { this.minRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosizeMaxRows() { return this.maxRows; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosizeMaxRows(value) { this.maxRows = value; }\n    /**\n     * @return {?}\n     */\n    get matAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matAutosize(value) { this.enabled = value; }\n    /**\n     * @return {?}\n     */\n    get matTextareaAutosize() { return this.enabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set matTextareaAutosize(value) { this.enabled = value; }\n}\nMatTextareaAutosize.ɵfac = function MatTextareaAutosize_Factory(t) { return ɵMatTextareaAutosize_BaseFactory(t || MatTextareaAutosize); };\nMatTextareaAutosize.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTextareaAutosize, selectors: [[\"textarea\", \"mat-autosize\", \"\"], [\"textarea\", \"matTextareaAutosize\", \"\"]], hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\", \"mat-autosize\"], inputs: { cdkAutosizeMinRows: \"cdkAutosizeMinRows\", cdkAutosizeMaxRows: \"cdkAutosizeMaxRows\", matAutosizeMinRows: \"matAutosizeMinRows\", matAutosizeMaxRows: \"matAutosizeMaxRows\", matAutosize: [\"mat-autosize\", \"matAutosize\"], matTextareaAutosize: \"matTextareaAutosize\" }, exportAs: [\"matTextareaAutosize\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatTextareaAutosize.propDecorators = {\n    matAutosizeMinRows: [{ type: Input }],\n    matAutosizeMaxRows: [{ type: Input }],\n    matAutosize: [{ type: Input, args: ['mat-autosize',] }],\n    matTextareaAutosize: [{ type: Input }]\n};\nconst ɵMatTextareaAutosize_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextareaAutosize);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextareaAutosize, [{\n        type: Directive,\n        args: [{\n                selector: 'textarea[mat-autosize], textarea[matTextareaAutosize]',\n                exportAs: 'matTextareaAutosize',\n                inputs: ['cdkAutosizeMinRows', 'cdkAutosizeMaxRows'],\n                host: {\n                    'class': 'cdk-textarea-autosize mat-autosize',\n                    // Textarea elements that have the directive applied should have a single row by default.\n                    // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                    'rows': '1'\n                }\n            }]\n    }], null, { matAutosizeMinRows: [{\n            type: Input\n        }], matAutosizeMaxRows: [{\n            type: Input\n        }], matAutosize: [{\n            type: Input,\n            args: ['mat-autosize']\n        }], matTextareaAutosize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docs-private\n * @param {?} type\n * @return {?}\n */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-value-accessor.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n * @type {?}\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\n/** @type {?} */\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit'\n];\n/** @type {?} */\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/**\n * \\@docs-private\n */\nclass MatInputBase {\n    /**\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatInputBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatInputBase.prototype._parentForm;\n    /** @type {?} */\n    MatInputBase.prototype._parentFormGroup;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInputBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatInputMixinBase = mixinErrorState(MatInputBase);\n/**\n * Directive that allows a native input to work inside a `MatFormField`.\n */\nclass MatInput extends _MatInputMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _platform\n     * @param {?} ngControl\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} inputValueAccessor\n     * @param {?} _autofillMonitor\n     * @param {?} ngZone\n     */\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this.ngControl = ngControl;\n        this._autofillMonitor = _autofillMonitor;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Whether the component is being rendered on the server.\n         */\n        this._isServer = false;\n        /**\n         * Whether the component is a native html select.\n         */\n        this._isNativeSelect = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * \\@docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._required = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week'\n        ].filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        t => getSupportedInputTypes().has(t)));\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                _elementRef.nativeElement.addEventListener('keyup', (/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                (event) => {\n                    /** @type {?} */\n                    let el = (/** @type {?} */ (event.target));\n                    if (!el.value && !el.selectionStart && !el.selectionEnd) {\n                        // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                        // `1, 1` fixes it for the first time that you type text and\n                        // then hold delete. Toggling to `1, 1` and then back to\n                        // `0, 0` seems to completely fix it.\n                        el.setSelectionRange(1, 1);\n                        el.setSelectionRange(0, 0);\n                    }\n                }));\n            }));\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = element.nodeName.toLowerCase() === 'select';\n        if (this._isNativeSelect) {\n            this.controlType = ((/** @type {?} */ (element))).multiple ? 'mat-native-select-multiple' :\n                'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) { this._id = value || this._uid; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * Input type of the element.\n     * @return {?}\n     */\n    get type() { return this._type; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea() && getSupportedInputTypes().has(this._type)) {\n            ((/** @type {?} */ (this._elementRef.nativeElement))).type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get value() { return this._inputValueAccessor.value; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Whether the element is readonly.\n     * @return {?}\n     */\n    get readonly() { return this._readonly; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set readonly(value) { this._readonly = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe((/**\n             * @param {?} event\n             * @return {?}\n             */\n            event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n    }\n    /**\n     * Focuses the input.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Callback for the cases where the focused state of the input changes.\n     * @param {?} isFocused\n     * @return {?}\n     */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused && (!this.readonly || !isFocused)) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /**\n     * Determines if the component host is a textarea.\n     * @return {?}\n     */\n    _isTextarea() {\n        return this._elementRef.nativeElement.nodeName.toLowerCase() === 'textarea';\n    }\n    /**\n     * Does some manual dirty checking on the native input `value` property.\n     * @protected\n     * @return {?}\n     */\n    _dirtyCheckNativeValue() {\n        /** @type {?} */\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Make sure the input is a supported type.\n     * @protected\n     * @return {?}\n     */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /**\n     * Checks whether the input type is one of the types that are never empty.\n     * @protected\n     * @return {?}\n     */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /**\n     * Checks whether the input is invalid based on the native validation.\n     * @protected\n     * @return {?}\n     */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        /** @type {?} */\n        let validity = ((/** @type {?} */ (this._elementRef.nativeElement))).validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get empty() {\n        return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() &&\n            !this.autofilled;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            /** @type {?} */\n            const selectElement = (/** @type {?} */ (this._elementRef.nativeElement));\n            /** @type {?} */\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return this.focused || selectElement.multiple || !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n}\nMatInput.ɵfac = function MatInput_Factory(t) { return new (t || MatInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(MAT_INPUT_VALUE_ACCESSOR, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AutofillMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatInput, selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]], hostAttrs: [1, \"mat-input-element\", \"mat-form-field-autofill-control\"], hostVars: 10, hostBindings: function MatInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function MatInput_blur_HostBindingHandler($event) { return ctx._focusChanged(false); })(\"focus\", function MatInput_focus_HostBindingHandler($event) { return ctx._focusChanged(true); })(\"input\", function MatInput_input_HostBindingHandler($event) { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"placeholder\", ctx.placeholder)(\"readonly\", ctx.readonly && !ctx._isNativeSelect || null)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-invalid\", ctx.errorState)(\"aria-required\", ctx.required.toString());\n        ɵngcc0.ɵɵclassProp(\"mat-input-server\", ctx._isServer);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", required: \"required\", type: \"type\", value: \"value\", readonly: \"readonly\", placeholder: \"placeholder\", errorStateMatcher: \"errorStateMatcher\" }, exportAs: [\"matInput\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatInput }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()] });\n/** @nocollapse */\nMatInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: undefined, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [MAT_INPUT_VALUE_ACCESSOR,] }] },\n    { type: AutofillMonitor },\n    { type: NgZone }\n];\nMatInput.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    type: [{ type: Input }],\n    errorStateMatcher: [{ type: Input }],\n    value: [{ type: Input }],\n    readonly: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInput, [{\n        type: Directive,\n        args: [{\n                selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                exportAs: 'matInput',\n                host: {\n                    /**\n                     * \\@breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                     */\n                    'class': 'mat-input-element mat-form-field-autofill-control',\n                    '[class.mat-input-server]': '_isServer',\n                    // Native input properties that are overwritten by Angular inputs need to be synced with\n                    // the native input element. Otherwise property bindings for those don't work.\n                    '[attr.id]': 'id',\n                    '[attr.placeholder]': 'placeholder',\n                    '[disabled]': 'disabled',\n                    '[required]': 'required',\n                    '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-required]': 'required.toString()',\n                    '(blur)': '_focusChanged(false)',\n                    '(focus)': '_focusChanged(true)',\n                    '(input)': '_onInput()'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatInput }]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: ɵngcc2.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc2.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }, {\n                type: Inject,\n                args: [MAT_INPUT_VALUE_ACCESSOR]\n            }] }, { type: ɵngcc4.AutofillMonitor }, { type: ɵngcc0.NgZone }]; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatInput.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_readonly;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_required;\n    /** @type {?} */\n    MatInput.ngAcceptInputType_value;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._uid;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._previousNativeValue;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._inputValueAccessor;\n    /**\n     * The aria-describedby attribute on the input for improved a11y.\n     * @type {?}\n     */\n    MatInput.prototype._ariaDescribedby;\n    /**\n     * Whether the component is being rendered on the server.\n     * @type {?}\n     */\n    MatInput.prototype._isServer;\n    /**\n     * Whether the component is a native html select.\n     * @type {?}\n     */\n    MatInput.prototype._isNativeSelect;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.focused;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.stateChanges;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.controlType;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.autofilled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._disabled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._id;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.placeholder;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._required;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._type;\n    /**\n     * An object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatInput.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._readonly;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._neverEmptyInputTypes;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatInput.prototype._platform;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    MatInput.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInput.prototype._autofillMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/input-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatInputModule {\n}\nMatInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatInputModule });\nMatInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatInputModule_Factory(t) { return new (t || MatInputModule)(); }, providers: [ErrorStateMatcher], imports: [[\n            TextFieldModule,\n            MatFormFieldModule,\n        ],\n        TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatInputModule, { declarations: function () { return [MatInput,\n        MatTextareaAutosize]; }, imports: function () { return [TextFieldModule,\n        MatFormFieldModule]; }, exports: function () { return [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput,\n        MatTextareaAutosize]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatInputModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatInput, MatTextareaAutosize],\n                imports: [\n                    TextFieldModule,\n                    MatFormFieldModule,\n                ],\n                exports: [\n                    TextFieldModule,\n                    // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                    // be used together with `MatFormField`.\n                    MatFormFieldModule,\n                    MatInput,\n                    MatTextareaAutosize,\n                ],\n                providers: [ErrorStateMatcher]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/input/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, MatTextareaAutosize, getMatInputUnsupportedTypeError };\n\n//# sourceMappingURL=input.js.map","import { CommonModule } from '@angular/common';\nimport { Injectable, ɵɵdefineInjectable, Optional, SkipSelf, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef, Inject, Input, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { mixinDisabled, mixinInitialized } from '@angular/material/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/material/tooltip';\nimport * as ɵngcc4 from '@angular/material/form-field';\nimport * as ɵngcc5 from '@angular/material/select';\nimport * as ɵngcc6 from '@angular/material/core';\n\nfunction MatPaginator_div_2_mat_form_field_3_mat_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-option\", 19);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageSizeOption_r19 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"value\", pageSizeOption_r19);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", pageSizeOption_r19, \" \");\n} }\nfunction MatPaginator_div_2_mat_form_field_3_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-form-field\", 16);\n    ɵngcc0.ɵɵelementStart(1, \"mat-select\", 17);\n    ɵngcc0.ɵɵlistener(\"selectionChange\", function MatPaginator_div_2_mat_form_field_3_Template_mat_select_selectionChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20._changePageSize($event.value); });\n    ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_mat_form_field_3_mat_option_2_Template, 2, 2, \"mat-option\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"color\", ctx_r16.color);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r16.pageSize)(\"disabled\", ctx_r16.disabled)(\"aria-label\", ctx_r16._intl.itemsPerPageLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r16._displayedPageSizeOptions);\n} }\nfunction MatPaginator_div_2_div_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r17.pageSize);\n} }\nfunction MatPaginator_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, MatPaginator_div_2_mat_form_field_3_Template, 3, 5, \"mat-form-field\", 14);\n    ɵngcc0.ɵɵtemplate(4, MatPaginator_div_2_div_4_Template, 2, 1, \"div\", 15);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r13._intl.itemsPerPageLabel, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13._displayedPageSizeOptions.length > 1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r13._displayedPageSizeOptions.length <= 1);\n} }\nfunction MatPaginator_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_6_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.firstPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r14._intl.firstPageLabel)(\"matTooltipDisabled\", ctx_r14._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r14._previousButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r14._intl.firstPageLabel);\n} }\nfunction MatPaginator_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵnamespaceHTML();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_button_13_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); return ctx_r24.lastPage(); });\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 7);\n    ɵngcc0.ɵɵelement(2, \"path\", 24);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"matTooltip\", ctx_r15._intl.lastPageLabel)(\"matTooltipDisabled\", ctx_r15._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx_r15._nextButtonsDisabled());\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r15._intl.lastPageLabel);\n} }\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * A label for the page size selector.\n         */\n        this.itemsPerPageLabel = 'Items per page:';\n        /**\n         * A label for the button that increments the current page.\n         */\n        this.nextPageLabel = 'Next page';\n        /**\n         * A label for the button that decrements the current page.\n         */\n        this.previousPageLabel = 'Previous page';\n        /**\n         * A label for the button that moves to the first page.\n         */\n        this.firstPageLabel = 'First page';\n        /**\n         * A label for the button that moves to the last page.\n         */\n        this.lastPageLabel = 'Last page';\n        /**\n         * A label for the range of items within the current page and the length of the whole list.\n         */\n        this.getRangeLabel = (/**\n         * @param {?} page\n         * @param {?} pageSize\n         * @param {?} length\n         * @return {?}\n         */\n        (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            /** @type {?} */\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            /** @type {?} */\n            const endIndex = startIndex < length ?\n                Math.min(startIndex + pageSize, length) :\n                startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        });\n    }\n}\nMatPaginatorIntl.ɵfac = function MatPaginatorIntl_Factory(t) { return new (t || MatPaginatorIntl)(); };\n/** @nocollapse */ MatPaginatorIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatPaginatorIntl_Factory() { return new MatPaginatorIntl(); }, token: MatPaginatorIntl, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream to emit from when labels are changed. Use this to notify components when the labels have\n     * changed after initialization.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.changes;\n    /**\n     * A label for the page size selector.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.itemsPerPageLabel;\n    /**\n     * A label for the button that increments the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.nextPageLabel;\n    /**\n     * A label for the button that decrements the current page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.previousPageLabel;\n    /**\n     * A label for the button that moves to the first page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.firstPageLabel;\n    /**\n     * A label for the button that moves to the last page.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.lastPageLabel;\n    /**\n     * A label for the range of items within the current page and the length of the whole list.\n     * @type {?}\n     */\n    MatPaginatorIntl.prototype.getRangeLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The default page size if there is no page size and there are no provided page size options.\n * @type {?}\n */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\nif (false) {\n    /**\n     * The current page index.\n     * @type {?}\n     */\n    PageEvent.prototype.pageIndex;\n    /**\n     * Index of the page that was selected previously.\n     * \\@breaking-change 8.0.0 To be made into a required property.\n     * @type {?}\n     */\n    PageEvent.prototype.previousPageIndex;\n    /**\n     * The current page size\n     * @type {?}\n     */\n    PageEvent.prototype.pageSize;\n    /**\n     * The current total number of items being paged\n     * @type {?}\n     */\n    PageEvent.prototype.length;\n}\n/**\n * Object that can be used to configure the default options for the paginator module.\n * @record\n */\nfunction MatPaginatorDefaultOptions() { }\nif (false) {\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSize;\n    /**\n     * The set of provided page size options to display to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.pageSizeOptions;\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.hidePageSize;\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @type {?|undefined}\n     */\n    MatPaginatorDefaultOptions.prototype.showFirstLastButtons;\n}\n/**\n * Injection token that can be used to provide the default options for the paginator module.\n * @type {?}\n */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatPaginator.\n/**\n * \\@docs-private\n */\nclass MatPaginatorBase {\n}\n/** @type {?} */\nconst _MatPaginatorBase = mixinDisabled(mixinInitialized(MatPaginatorBase));\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    /**\n     * @param {?} _intl\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaults\n     */\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /**\n         * Event emitted when the paginator changes the page size or page index.\n         */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /**\n     * The zero-based page index of the displayed list of items. Defaulted to 0.\n     * @return {?}\n     */\n    get pageIndex() { return this._pageIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * The length of the total number of items that are being paginated. Defaulted to 0.\n     * @return {?}\n     */\n    get length() { return this._length; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Number of items to display on a page. By default set to 50.\n     * @return {?}\n     */\n    get pageSize() { return this._pageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * The set of provided page size options to display to the user.\n     * @return {?}\n     */\n    get pageSizeOptions() { return this._pageSizeOptions; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map((/**\n         * @param {?} p\n         * @return {?}\n         */\n        p => coerceNumberProperty(p)));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /**\n     * Whether to hide the page size selection UI from the user.\n     * @return {?}\n     */\n    get hidePageSize() { return this._hidePageSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to show the first/last buttons UI to the user.\n     * @return {?}\n     */\n    get showFirstLastButtons() { return this._showFirstLastButtons; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /**\n     * Advances to the next page if it exists.\n     * @return {?}\n     */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex++;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move back to the previous page if it exists.\n     * @return {?}\n     */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex--;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the first page if not already there.\n     * @return {?}\n     */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Move to the last page if not already there.\n     * @return {?}\n     */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Whether there is a previous page.\n     * @return {?}\n     */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /**\n     * Whether there is a next page.\n     * @return {?}\n     */\n    hasNextPage() {\n        /** @type {?} */\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /**\n     * Calculate the number of pages\n     * @return {?}\n     */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     * @param {?} pageSize\n     * @return {?}\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        /** @type {?} */\n        const startIndex = this.pageIndex * this.pageSize;\n        /** @type {?} */\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /**\n     * Checks whether the buttons for going forwards should be disabled.\n     * @return {?}\n     */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /**\n     * Checks whether the buttons for going backwards should be disabled.\n     * @return {?}\n     */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     * @private\n     * @return {?}\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize = this.pageSizeOptions.length != 0 ?\n                this.pageSizeOptions[0] :\n                DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((/**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        (a, b) => a - b));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Emits an event notifying that a change of the paginator's properties has been triggered.\n     * @private\n     * @param {?} previousPageIndex\n     * @return {?}\n     */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length\n        });\n    }\n}\nMatPaginator.ɵfac = function MatPaginator_Factory(t) { return new (t || MatPaginator)(ɵngcc0.ɵɵdirectiveInject(MatPaginatorIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_PAGINATOR_DEFAULT_OPTIONS, 8)); };\nMatPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatPaginator, selectors: [[\"mat-paginator\"]], hostAttrs: [1, \"mat-paginator\"], inputs: { disabled: \"disabled\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\", color: \"color\" }, outputs: { page: \"page\" }, exportAs: [\"matPaginator\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 14, vars: 14, consts: [[1, \"mat-paginator-outer-container\"], [1, \"mat-paginator-container\"], [\"class\", \"mat-paginator-page-size\", 4, \"ngIf\"], [1, \"mat-paginator-range-actions\"], [1, \"mat-paginator-range-label\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-previous\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"viewBox\", \"0 0 24 24\", \"focusable\", \"false\", 1, \"mat-paginator-icon\"], [\"d\", \"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-next\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", \"class\", \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\", 4, \"ngIf\"], [1, \"mat-paginator-page-size\"], [1, \"mat-paginator-page-size-label\"], [\"class\", \"mat-paginator-page-size-select\", 3, \"color\", 4, \"ngIf\"], [\"class\", \"mat-paginator-page-size-value\", 4, \"ngIf\"], [1, \"mat-paginator-page-size-select\", 3, \"color\"], [3, \"value\", \"disabled\", \"aria-label\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"mat-paginator-page-size-value\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-first\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"], [\"mat-icon-button\", \"\", \"type\", \"button\", 1, \"mat-paginator-navigation-last\", 3, \"matTooltip\", \"matTooltipDisabled\", \"matTooltipPosition\", \"disabled\", \"click\"], [\"d\", \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"]], template: function MatPaginator_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatPaginator_div_2_Template, 5, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n        ɵngcc0.ɵɵtext(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MatPaginator_button_6_Template, 3, 5, \"button\", 5);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 6);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_7_listener($event) { return ctx.previousPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(8, \"svg\", 7);\n        ɵngcc0.ɵɵelement(9, \"path\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelementStart(10, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MatPaginator_Template_button_click_10_listener($event) { return ctx.nextPage(); });\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(11, \"svg\", 7);\n        ɵngcc0.ɵɵelement(12, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, MatPaginator_button_13_Template, 3, 5, \"button\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.hidePageSize);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx._intl.getRangeLabel(ctx.pageIndex, ctx.pageSize, ctx.length), \" \");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.previousPageLabel)(\"matTooltipDisabled\", ctx._previousButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._previousButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.previousPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"matTooltip\", ctx._intl.nextPageLabel)(\"matTooltipDisabled\", ctx._nextButtonsDisabled())(\"matTooltipPosition\", \"above\")(\"disabled\", ctx._nextButtonsDisabled());\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx._intl.nextPageLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showFirstLastButtons);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton, ɵngcc3.MatTooltip, ɵngcc4.MatFormField, ɵngcc5.MatSelect, ɵngcc1.NgForOf, ɵngcc6.MatOption], styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatPaginator.ctorParameters = () => [\n    { type: MatPaginatorIntl },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_PAGINATOR_DEFAULT_OPTIONS,] }] }\n];\nMatPaginator.propDecorators = {\n    color: [{ type: Input }],\n    pageIndex: [{ type: Input }],\n    length: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageSizeOptions: [{ type: Input }],\n    hidePageSize: [{ type: Input }],\n    showFirstLastButtons: [{ type: Input }],\n    page: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginator, [{\n        type: Component,\n        args: [{\n                selector: 'mat-paginator',\n                exportAs: 'matPaginator',\n                template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled'],\n                host: {\n                    'class': 'mat-paginator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;min-height:56px;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}\\n\"]\n            }]\n    }], function () { return [{ type: MatPaginatorIntl }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n            }] }]; }, { page: [{\n            type: Output\n        }], pageIndex: [{\n            type: Input\n        }], length: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], pageSizeOptions: [{\n            type: Input\n        }], hidePageSize: [{\n            type: Input\n        }], showFirstLastButtons: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageIndex;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_length;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_pageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_hidePageSize;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_showFirstLastButtons;\n    /** @type {?} */\n    MatPaginator.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._initialized;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._intlChanges;\n    /**\n     * Theme color to be used for the underlying form controls.\n     * @type {?}\n     */\n    MatPaginator.prototype.color;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageIndex;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._length;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._pageSizeOptions;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._hidePageSize;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._showFirstLastButtons;\n    /**\n     * Event emitted when the paginator changes the page size or page index.\n     * @type {?}\n     */\n    MatPaginator.prototype.page;\n    /**\n     * Displayed set of page size options. Will be sorted and include current page size.\n     * @type {?}\n     */\n    MatPaginator.prototype._displayedPageSizeOptions;\n    /** @type {?} */\n    MatPaginator.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginator.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/paginator-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatPaginatorModule });\nMatPaginatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatPaginatorModule_Factory(t) { return new (t || MatPaginatorModule)(); }, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[\n            CommonModule,\n            MatButtonModule,\n            MatSelectModule,\n            MatTooltipModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatPaginatorModule, { declarations: function () { return [MatPaginator]; }, imports: function () { return [CommonModule,\n        MatButtonModule,\n        MatSelectModule,\n        MatTooltipModule]; }, exports: function () { return [MatPaginator]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatPaginatorModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatButtonModule,\n                    MatSelectModule,\n                    MatTooltipModule,\n                ],\n                exports: [MatPaginator],\n                declarations: [MatPaginator],\n                providers: [MAT_PAGINATOR_INTL_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/paginator/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent };\n\n//# sourceMappingURL=paginator.js.map","import { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, EventEmitter, isDevMode, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgZone, ElementRef, Optional, Self, Attribute, Inject, ViewChild, ContentChildren, Input, ContentChild, Output, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, ErrorStateMatcher, MatOption, MatOptgroup, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { MatFormFieldControl, MatFormField, MatFormFieldModule } from '@angular/material/form-field';\nimport { ActiveDescendantKeyManager, LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, HOME, END, A } from '@angular/cdk/keycodes';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/scrolling';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/material/form-field';\nimport * as ɵngcc6 from '@angular/cdk/a11y';\nimport * as ɵngcc7 from '@angular/cdk/overlay';\nimport * as ɵngcc8 from '@angular/common';\n\nconst _c0 = [\"trigger\"];\nconst _c1 = [\"panel\"];\nfunction MatSelect_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.placeholder || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.triggerValue || \"\\u00A0\");\n} }\nfunction MatSelect_span_5_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0, 0, [\"*ngSwitchCase\", \"true\"]);\n} }\nfunction MatSelect_span_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 9);\n    ɵngcc0.ɵɵtemplate(1, MatSelect_span_5_span_1_Template, 2, 1, \"span\", 10);\n    ɵngcc0.ɵɵtemplate(2, MatSelect_span_5_2_Template, 1, 0, undefined, 11);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx_r4.customTrigger);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n} }\nfunction MatSelect_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"@transformPanel.done\", function MatSelect_ng_template_8_Template_div_animation_transformPanel_done_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9._panelDoneAnimatingStream.next($event.toState); })(\"keydown\", function MatSelect_ng_template_8_Template_div_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._handleKeydown($event); });\n    ɵngcc0.ɵɵprojection(3, 1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@transformPanelWrap\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mat-select-panel \", ctx_r5._getPanelTheme(), \"\");\n    ɵngcc0.ɵɵstyleProp(\"transform-origin\", ctx_r5._transformOrigin)(\"font-size\", ctx_r5._triggerFontSize, \"px\");\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r5.panelClass)(\"@transformPanel\", ctx_r5.multiple ? \"showing-multiple\" : \"showing\");\n} }\nconst _c2 = [[[\"mat-select-trigger\"]], \"*\"];\nconst _c3 = [\"mat-select-trigger\", \"*\"];\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true }))\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            // 32px = 2 * 16px padding\n            transform: 'scaleY(1)'\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            // 64px = 48px padding on the left + 16px padding on the right\n            transform: 'scaleY(1)'\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n * @return {?}\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * The max height of the select's overlay panel\n * @type {?}\n */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/**\n * The panel's padding on the x-axis\n * @type {?}\n */\nconst SELECT_PANEL_PADDING_X = 16;\n/**\n * The panel's x axis padding if it is indented (e.g. there is an option group).\n * @type {?}\n */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/**\n * The height of the select items in `em` units.\n * @type {?}\n */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n * @type {?}\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n * @type {?}\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/**\n * Injection token that determines the scroll handling while a select is open.\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * Object that can be used to configure the default options for the select module.\n * @record\n */\nfunction MatSelectConfig() { }\nif (false) {\n    /**\n     * Whether option centering should be disabled.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.disableOptionCentering;\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @type {?|undefined}\n     */\n    MatSelectConfig.prototype.typeaheadDebounceInterval;\n}\n/**\n * Injection token that can be used to provide the default options the select module.\n * @type {?}\n */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/**\n * Change event object that is emitted when the select value has changed.\n */\nclass MatSelectChange {\n    /**\n     * @param {?} source\n     * @param {?} value\n     */\n    constructor(source, value) {\n        this.source = source;\n        this.value = value;\n    }\n}\nif (false) {\n    /**\n     * Reference to the select that emitted the change event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.source;\n    /**\n     * Current value of the select that emitted the event.\n     * @type {?}\n     */\n    MatSelectChange.prototype.value;\n}\n// Boilerplate for applying mixins to MatSelect.\n/**\n * \\@docs-private\n */\nclass MatSelectBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} ngControl\n     */\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatSelectBase.prototype._elementRef;\n    /** @type {?} */\n    MatSelectBase.prototype._defaultErrorStateMatcher;\n    /** @type {?} */\n    MatSelectBase.prototype._parentForm;\n    /** @type {?} */\n    MatSelectBase.prototype._parentFormGroup;\n    /** @type {?} */\n    MatSelectBase.prototype.ngControl;\n}\n/** @type {?} */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(MatSelectBase))));\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = function MatSelectTrigger_Factory(t) { return new (t || MatSelectTrigger)(); };\nMatSelectTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectTrigger, selectors: [[\"mat-select-trigger\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectTrigger, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-select-trigger'\n            }]\n    }], null, null); })();\nclass MatSelect extends _MatSelectMixinBase {\n    /**\n     * @param {?} _viewportRuler\n     * @param {?} _changeDetectorRef\n     * @param {?} _ngZone\n     * @param {?} _defaultErrorStateMatcher\n     * @param {?} elementRef\n     * @param {?} _dir\n     * @param {?} _parentForm\n     * @param {?} _parentFormGroup\n     * @param {?} _parentFormField\n     * @param {?} ngControl\n     * @param {?} tabIndex\n     * @param {?} scrollStrategyFactory\n     * @param {?} _liveAnnouncer\n     * @param {?=} defaults\n     */\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, defaults) {\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this.ngControl = ngControl;\n        this._liveAnnouncer = _liveAnnouncer;\n        /**\n         * Whether or not the overlay panel is open.\n         */\n        this._panelOpen = false;\n        /**\n         * Whether filling out the select is required in the form.\n         */\n        this._required = false;\n        /**\n         * The scroll position of the overlay panel, calculated to center the selected option.\n         */\n        this._scrollTop = 0;\n        /**\n         * Whether the component is in multiple selection mode.\n         */\n        this._multiple = false;\n        /**\n         * Comparison function to specify which option is displayed. Defaults to object equality.\n         */\n        this._compareWith = (/**\n         * @param {?} o1\n         * @param {?} o2\n         * @return {?}\n         */\n        (o1, o2) => o1 === o2);\n        /**\n         * Unique id for this input.\n         */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /**\n         * Emits whenever the component is destroyed.\n         */\n        this._destroy = new Subject();\n        /**\n         * The cached font-size of the trigger element.\n         */\n        this._triggerFontSize = 0;\n        /**\n         * `View -> model callback called when value changes`\n         */\n        this._onChange = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * `View -> model callback called when select has been touched`\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        /**\n         * The IDs of child options to be passed to the aria-owns attribute.\n         */\n        this._optionIds = '';\n        /**\n         * The value of the select panel's transform-origin property.\n         */\n        this._transformOrigin = 'top';\n        /**\n         * Emits when the panel element is finished transforming in.\n         */\n        this._panelDoneAnimatingStream = new Subject();\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        /**\n         * This position config ensures that the top \"start\" corner of the overlay\n         * is aligned with with the top \"start\" of the origin by default (overlapping\n         * the trigger completely). If the panel cannot fit below the trigger, it\n         * will fall back to a position above the trigger.\n         */\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n        /**\n         * Whether the component is disabling centering of the active option over the trigger.\n         */\n        this._disableOptionCentering = false;\n        this._focused = false;\n        /**\n         * A name for this control that can be used by `mat-form-field`.\n         */\n        this.controlType = 'mat-select';\n        /**\n         * Aria label of the select. If not specified, the placeholder will be used as label.\n         */\n        this.ariaLabel = '';\n        /**\n         * Combined stream of all of the child options' change events.\n         */\n        this.optionSelectionChanges = (/** @type {?} */ (defer((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap((/**\n                 * @return {?}\n                 */\n                () => merge(...options.map((/**\n                 * @param {?} option\n                 * @return {?}\n                 */\n                option => option.onSelectionChange))))));\n            }\n            return this._ngZone.onStable\n                .asObservable()\n                .pipe(take(1), switchMap((/**\n             * @return {?}\n             */\n            () => this.optionSelectionChanges)));\n        }))));\n        /**\n         * Event emitted when the select panel has been toggled.\n         */\n        this.openedChange = new EventEmitter();\n        /**\n         * Event emitted when the select has been opened.\n         */\n        this._openedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the select has been closed.\n         */\n        this._closedStream = this.openedChange.pipe(filter((/**\n         * @param {?} o\n         * @return {?}\n         */\n        o => !o)), map((/**\n         * @return {?}\n         */\n        () => { })));\n        /**\n         * Event emitted when the selected value has been changed by the user.\n         */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * \\@docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        if (defaults) {\n            if (defaults.disableOptionCentering != null) {\n                this.disableOptionCentering = defaults.disableOptionCentering;\n            }\n            if (defaults.typeaheadDebounceInterval != null) {\n                this.typeaheadDebounceInterval = defaults.typeaheadDebounceInterval;\n            }\n        }\n    }\n    /**\n     * Whether the select is focused.\n     * @return {?}\n     */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /**\n     * Placeholder to be shown if no value has been selected.\n     * @return {?}\n     */\n    get placeholder() { return this._placeholder; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the component is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Whether the user should be allowed to select multiple options.\n     * @return {?}\n     */\n    get multiple() { return this._multiple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set multiple(value) {\n        if (this._selectionModel) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether to center the active option over the trigger.\n     * @return {?}\n     */\n    get disableOptionCentering() { return this._disableOptionCentering; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     * @return {?}\n     */\n    get compareWith() { return this._compareWith; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set compareWith(fn) {\n        if (typeof fn !== 'function') {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Value of the select control.\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @param {?} newValue\n     * @return {?}\n     */\n    set value(newValue) {\n        if (newValue !== this._value) {\n            this.writeValue(newValue);\n            this._value = newValue;\n        }\n    }\n    /**\n     * Time to wait in milliseconds after the last keystroke before moving focus to an item.\n     * @return {?}\n     */\n    get typeaheadDebounceInterval() { return this._typeaheadDebounceInterval; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /**\n     * Unique id of the element.\n     * @return {?}\n     */\n    get id() { return this._id; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this.panelOpen) {\n                this._scrollTop = 0;\n                this.openedChange.emit(true);\n            }\n            else {\n                this.openedChange.emit(false);\n                this.overlayDir.offsetX = 0;\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n        this._viewportRuler.change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            event.added.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.select()));\n            event.removed.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.deselect()));\n        }));\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._resetOptions();\n            this._initializeSelection();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this.ngControl) {\n            this.updateErrorState();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /**\n     * Toggles the overlay panel open or closed.\n     * @return {?}\n     */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /**\n     * Opens the overlay panel.\n     * @return {?}\n     */\n    open() {\n        if (this.disabled || !this.options || !this.options.length || this._panelOpen) {\n            return;\n        }\n        this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n        // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n        // `parseInt` ignores the trailing 'px' and converts this to a number.\n        this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n        this._panelOpen = true;\n        this._keyManager.withHorizontalOrientation(null);\n        this._calculateOverlayPosition();\n        this._highlightCorrectOption();\n        this._changeDetectorRef.markForCheck();\n        // Set the font size on the panel element once it exists.\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._triggerFontSize && this.overlayDir.overlayRef &&\n                this.overlayDir.overlayRef.overlayElement) {\n                this.overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n            }\n        }));\n    }\n    /**\n     * Closes the overlay panel and focuses the host element.\n     * @return {?}\n     */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} value New value to be written to the model.\n     * @return {?}\n     */\n    writeValue(value) {\n        if (this.options) {\n            this._setSelectionByValue(value);\n        }\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the value changes.\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} fn Callback to be triggered when the component has been touched.\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param {?} isDisabled Sets whether the component is disabled.\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Whether or not the overlay panel is open.\n     * @return {?}\n     */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /**\n     * The currently selected option.\n     * @return {?}\n     */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /**\n     * The value displayed in the trigger.\n     * @return {?}\n     */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            /** @type {?} */\n            const selectedOptions = this._selectionModel.selected.map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.viewValue));\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /**\n     * Whether the element is in RTL mode.\n     * @return {?}\n     */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /**\n     * Handles all keydown events on the select.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /**\n     * Handles keyboard events while the select is closed.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClosedKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW;\n        /** @type {?} */\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        /** @type {?} */\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if (!manager.isTyping() && (isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            /** @type {?} */\n            const previouslySelectedOption = this.selected;\n            if (keyCode === HOME || keyCode === END) {\n                keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                event.preventDefault();\n            }\n            else {\n                manager.onKeydown(event);\n            }\n            /** @type {?} */\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(((/** @type {?} */ (selectedOption))).viewValue, 10000);\n            }\n        }\n    }\n    /**\n     * Handles keyboard events when the selected is open.\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    _handleOpenKeydown(event) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        /** @type {?} */\n        const isTyping = manager.isTyping();\n        if (keyCode === HOME || keyCode === END) {\n            event.preventDefault();\n            keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n        }\n        else if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping && (keyCode === ENTER || keyCode === SPACE) && manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            /** @type {?} */\n            const hasDeselectedOptions = this.options.some((/**\n             * @param {?} opt\n             * @return {?}\n             */\n            opt => !opt.disabled && !opt.selected));\n            this.options.forEach((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            }));\n        }\n        else {\n            /** @type {?} */\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple && isArrowKey && event.shiftKey && manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     * @return {?}\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     * @return {?}\n     */\n    _onAttached() {\n        this.overlayDir.positionChange.pipe(take(1)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.detectChanges();\n            this._calculateOverlayOffsetX();\n            this.panel.nativeElement.scrollTop = this._scrollTop;\n        }));\n    }\n    /**\n     * Returns the theme to be used on the panel.\n     * @return {?}\n     */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /**\n     * Whether the select has a value.\n     * @return {?}\n     */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value);\n            this.stateChanges.next();\n        }));\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _setSelectionByValue(value) {\n        if (this.multiple && value) {\n            if (!Array.isArray(value)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            this._selectionModel.clear();\n            value.forEach((/**\n             * @param {?} currentValue\n             * @return {?}\n             */\n            (currentValue) => this._selectValue(currentValue)));\n            this._sortValues();\n        }\n        else {\n            this._selectionModel.clear();\n            /** @type {?} */\n            const correspondingOption = this._selectValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.setActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.setActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @private\n     * @param {?} value\n     * @return {?} Option that has the corresponding value.\n     */\n    _selectValue(value) {\n        /** @type {?} */\n        const correspondingOption = this.options.find((/**\n         * @param {?} option\n         * @return {?}\n         */\n        (option) => {\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (isDevMode()) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        }));\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /**\n     * Sets up a key manager to listen to keyboard events on the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // Select the active item when tabbing away. This is consistent with how the native\n            // select behaves. Note that we only want to do this in single selection mode.\n            if (!this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n            // Restore focus to the trigger before closing. Ensures that the focus\n            // position won't be lost if the user got focus into the overlay.\n            this.focus();\n            this.close();\n        }));\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (this._panelOpen && this.panel) {\n                this._scrollActiveOptionIntoView();\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        }));\n    }\n    /**\n     * Drops current option subscriptions and IDs and resets from scratch.\n     * @private\n     * @return {?}\n     */\n    _resetOptions() {\n        /** @type {?} */\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        }));\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option._stateChanges)))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }));\n        this._setOptionIds();\n    }\n    /**\n     * Invoked when an option is clicked.\n     * @private\n     * @param {?} option\n     * @param {?} isUserInput\n     * @return {?}\n     */\n    _onSelect(option, isUserInput) {\n        /** @type {?} */\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            this._propagateChanges(option.value);\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected ? this._selectionModel.select(option) :\n                    this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the selected values in the selected based on their order in the panel.\n     * @private\n     * @return {?}\n     */\n    _sortValues() {\n        if (this.multiple) {\n            /** @type {?} */\n            const options = this.options.toArray();\n            this._selectionModel.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                return this.sortComparator ? this.sortComparator(a, b, options) :\n                    options.indexOf(a) - options.indexOf(b);\n            }));\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Emits change event to set the model value.\n     * @private\n     * @param {?=} fallbackValue\n     * @return {?}\n     */\n    _propagateChanges(fallbackValue) {\n        /** @type {?} */\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = ((/** @type {?} */ (this.selected))).map((/**\n             * @param {?} option\n             * @return {?}\n             */\n            option => option.value));\n        }\n        else {\n            valueToEmit = this.selected ? ((/** @type {?} */ (this.selected))).value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(new MatSelectChange(this, valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Records option IDs to pass to the aria-owns property.\n     * @private\n     * @return {?}\n     */\n    _setOptionIds() {\n        this._optionIds = this.options.map((/**\n         * @param {?} option\n         * @return {?}\n         */\n        option => option.id)).join(' ');\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     * @private\n     * @return {?}\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /**\n     * Scrolls the active option into view.\n     * @private\n     * @return {?}\n     */\n    _scrollActiveOptionIntoView() {\n        /** @type {?} */\n        const activeOptionIndex = this._keyManager.activeItemIndex || 0;\n        /** @type {?} */\n        const labelCount = _countGroupLabelsBeforeOption(activeOptionIndex, this.options, this.optionGroups);\n        this.panel.nativeElement.scrollTop = _getOptionScrollPosition(activeOptionIndex + labelCount, this._getItemHeight(), this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n    }\n    /**\n     * Focuses the select element.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /**\n     * Gets the index of the provided option in the option list.\n     * @private\n     * @param {?} option\n     * @return {?}\n     */\n    _getOptionIndex(option) {\n        return this.options.reduce((/**\n         * @param {?} result\n         * @param {?} current\n         * @param {?} index\n         * @return {?}\n         */\n        (result, current, index) => {\n            if (result !== undefined) {\n                return result;\n            }\n            return option === current ? index : undefined;\n        }), undefined);\n    }\n    /**\n     * Calculates the scroll position and x- and y-offsets of the overlay panel.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayPosition() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const items = this._getItemCount();\n        /** @type {?} */\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        /** @type {?} */\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        /** @type {?} */\n        let selectedOptionOffset = this.empty ? 0 : (/** @type {?} */ (this._getOptionIndex(this._selectionModel.selected[0])));\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        /** @type {?} */\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        /** @type {?} */\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        /** @type {?} */\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    /**\n     * Returns the aria-label of the select component.\n     * @return {?}\n     */\n    _getAriaLabel() {\n        // If an ariaLabelledby value has been set by the consumer, the select should not overwrite the\n        // `aria-labelledby` value by setting the ariaLabel to the placeholder.\n        return this.ariaLabelledby ? null : this.ariaLabel || this.placeholder;\n    }\n    /**\n     * Returns the aria-labelledby of the select component.\n     * @return {?}\n     */\n    _getAriaLabelledby() {\n        if (this.ariaLabelledby) {\n            return this.ariaLabelledby;\n        }\n        // Note: we use `_getAriaLabel` here, because we want to check whether there's a\n        // computed label. `this.ariaLabel` is only the user-specified label.\n        if (!this._parentFormField || !this._parentFormField._hasFloatingLabel() ||\n            this._getAriaLabel()) {\n            return null;\n        }\n        return this._parentFormField._labelId || null;\n    }\n    /**\n     * Determines the `aria-activedescendant` to be set on the host.\n     * @return {?}\n     */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     * @private\n     * @return {?}\n     */\n    _calculateOverlayOffsetX() {\n        /** @type {?} */\n        const overlayRect = this.overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const isRtl = this._isRtl();\n        /** @type {?} */\n        const paddingWidth = this.multiple ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X :\n            SELECT_PANEL_PADDING_X * 2;\n        /** @type {?} */\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else {\n            /** @type {?} */\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        /** @type {?} */\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        /** @type {?} */\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width\n            + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this.overlayDir.offsetX = Math.round(offsetX);\n        this.overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     * @private\n     * @param {?} selectedIndex\n     * @param {?} scrollBuffer\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        /** @type {?} */\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this._disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            /** @type {?} */\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            /** @type {?} */\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            /** @type {?} */\n            let partialItemHeight = itemHeight - (this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight;\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     * @private\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const viewportSize = this._viewportRuler.getViewportSize();\n        /** @type {?} */\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        /** @type {?} */\n        const panelHeightTop = Math.abs(this._offsetY);\n        /** @type {?} */\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        /** @type {?} */\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /**\n     * Adjusts the overlay panel up to fit in the viewport.\n     * @private\n     * @param {?} panelHeightBottom\n     * @param {?} bottomSpaceAvailable\n     * @return {?}\n     */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /**\n     * Adjusts the overlay panel down to fit in the viewport.\n     * @private\n     * @param {?} panelHeightTop\n     * @param {?} topSpaceAvailable\n     * @param {?} maxScroll\n     * @return {?}\n     */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        /** @type {?} */\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /**\n     * Sets the transform origin point based on the selected option.\n     * @private\n     * @return {?}\n     */\n    _getOriginBasedOnOption() {\n        /** @type {?} */\n        const itemHeight = this._getItemHeight();\n        /** @type {?} */\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        /** @type {?} */\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /**\n     * Calculates the amount of items in the select. This includes options and group labels.\n     * @private\n     * @return {?}\n     */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n    /**\n     * Calculates the height of the select's options.\n     * @private\n     * @return {?}\n     */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @param {?} ids\n     * @return {?}\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * \\@docs-private\n     * @return {?}\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty;\n    }\n}\nMatSelect.ɵfac = function MatSelect_Factory(t) { return new (t || MatSelect)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.MatFormField, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.NgControl, 10), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.LiveAnnouncer), ɵngcc0.ɵɵdirectiveInject(MAT_SELECT_CONFIG, 8)); };\nMatSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelect, selectors: [[\"mat-select\"]], contentQueries: function MatSelect_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatSelectTrigger, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOptgroup, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTrigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n    } }, viewQuery: function MatSelect_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(CdkConnectedOverlay, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trigger = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.overlayDir = _t.first);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-select\"], hostVars: 19, hostBindings: function MatSelect_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelect_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatSelect_focus_HostBindingHandler($event) { return ctx._onFocus(); })(\"blur\", function MatSelect_blur_HostBindingHandler($event) { return ctx._onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id)(\"tabindex\", ctx.tabIndex)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"aria-required\", ctx.required.toString())(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-owns\", ctx.panelOpen ? ctx._optionIds : null)(\"aria-multiselectable\", ctx.multiple)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-activedescendant\", ctx._getAriaActiveDescendant());\n        ɵngcc0.ɵɵclassProp(\"mat-select-disabled\", ctx.disabled)(\"mat-select-invalid\", ctx.errorState)(\"mat-select-required\", ctx.required)(\"mat-select-empty\", ctx.empty);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], id: \"id\", disableOptionCentering: \"disableOptionCentering\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", panelClass: \"panelClass\", ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", sortComparator: \"sortComparator\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, exportAs: [\"matSelect\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatFormFieldControl, useExisting: MatSelect },\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature()], ngContentSelectors: _c3, decls: 9, vars: 9, consts: [[\"cdk-overlay-origin\", \"\", \"aria-hidden\", \"true\", 1, \"mat-select-trigger\", 3, \"click\"], [\"origin\", \"cdkOverlayOrigin\", \"trigger\", \"\"], [1, \"mat-select-value\", 3, \"ngSwitch\"], [\"class\", \"mat-select-placeholder\", 4, \"ngSwitchCase\"], [\"class\", \"mat-select-value-text\", 3, \"ngSwitch\", 4, \"ngSwitchCase\"], [1, \"mat-select-arrow-wrapper\"], [1, \"mat-select-arrow\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayOffsetY\", \"backdropClick\", \"attach\", \"detach\"], [1, \"mat-select-placeholder\"], [1, \"mat-select-value-text\", 3, \"ngSwitch\"], [4, \"ngSwitchDefault\"], [4, \"ngSwitchCase\"], [1, \"mat-select-panel-wrap\"], [3, \"ngClass\", \"keydown\"], [\"panel\", \"\"]], template: function MatSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatSelect_Template_div_click_0_listener($event) { return ctx.toggle(); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatSelect_span_4_Template, 2, 1, \"span\", 3);\n        ɵngcc0.ɵɵtemplate(5, MatSelect_span_5_Template, 3, 2, \"span\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 5);\n        ɵngcc0.ɵɵelement(7, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(8, MatSelect_ng_template_8_Template, 4, 10, \"ng-template\", 7);\n        ɵngcc0.ɵɵlistener(\"backdropClick\", function MatSelect_Template_ng_template_backdropClick_8_listener($event) { return ctx.close(); })(\"attach\", function MatSelect_Template_ng_template_attach_8_listener($event) { return ctx._onAttached(); })(\"detach\", function MatSelect_Template_ng_template_detach_8_listener($event) { return ctx.close(); });\n    } if (rf & 2) {\n        const _r1 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.empty);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"cdkConnectedOverlayScrollStrategy\", ctx._scrollStrategy)(\"cdkConnectedOverlayOrigin\", _r1)(\"cdkConnectedOverlayOpen\", ctx.panelOpen)(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayMinWidth\", ctx._triggerRect == null ? null : ctx._triggerRect.width)(\"cdkConnectedOverlayOffsetY\", ctx._offsetY);\n    } }, directives: [ɵngcc7.CdkOverlayOrigin, ɵngcc8.NgSwitch, ɵngcc8.NgSwitchCase, ɵngcc7.CdkConnectedOverlay, ɵngcc8.NgSwitchDefault, ɵngcc8.NgClass], styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"], encapsulation: 2, data: { animation: [\n            matSelectAnimations.transformPanelWrap,\n            matSelectAnimations.transformPanel\n        ] }, changeDetection: 0 });\n/** @nocollapse */\nMatSelect.ctorParameters = () => [\n    { type: ViewportRuler },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: ErrorStateMatcher },\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }] },\n    { type: NgControl, decorators: [{ type: Self }, { type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SELECT_SCROLL_STRATEGY,] }] },\n    { type: LiveAnnouncer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_SELECT_CONFIG,] }] }\n];\nMatSelect.propDecorators = {\n    trigger: [{ type: ViewChild, args: ['trigger',] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    overlayDir: [{ type: ViewChild, args: [CdkConnectedOverlay,] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }],\n    optionGroups: [{ type: ContentChildren, args: [MatOptgroup, { descendants: true },] }],\n    panelClass: [{ type: Input }],\n    customTrigger: [{ type: ContentChild, args: [MatSelectTrigger,] }],\n    placeholder: [{ type: Input }],\n    required: [{ type: Input }],\n    multiple: [{ type: Input }],\n    disableOptionCentering: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    errorStateMatcher: [{ type: Input }],\n    typeaheadDebounceInterval: [{ type: Input }],\n    sortComparator: [{ type: Input }],\n    id: [{ type: Input }],\n    openedChange: [{ type: Output }],\n    _openedStream: [{ type: Output, args: ['opened',] }],\n    _closedStream: [{ type: Output, args: ['closed',] }],\n    selectionChange: [{ type: Output }],\n    valueChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelect, [{\n        type: Component,\n        args: [{\n                selector: 'mat-select',\n                exportAs: 'matSelect',\n                template: \"<div cdk-overlay-origin\\n     class=\\\"mat-select-trigger\\\"\\n     aria-hidden=\\\"true\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\">\\n    <span class=\\\"mat-select-placeholder\\\" *ngSwitchCase=\\\"true\\\">{{placeholder || '\\\\u00A0'}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span *ngSwitchDefault>{{triggerValue || '\\\\u00A0'}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'role': 'listbox',\n                    '[attr.id]': 'id',\n                    '[attr.tabindex]': 'tabIndex',\n                    '[attr.aria-label]': '_getAriaLabel()',\n                    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n                    '[attr.aria-required]': 'required.toString()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-owns]': 'panelOpen ? _optionIds : null',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                    '[class.mat-select-disabled]': 'disabled',\n                    '[class.mat-select-invalid]': 'errorState',\n                    '[class.mat-select-required]': 'required',\n                    '[class.mat-select-empty]': 'empty',\n                    'class': 'mat-select',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()'\n                },\n                animations: [\n                    matSelectAnimations.transformPanelWrap,\n                    matSelectAnimations.transformPanel\n                ],\n                providers: [\n                    { provide: MatFormFieldControl, useExisting: MatSelect },\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect }\n                ],\n                styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-table;cursor:pointer;position:relative;box-sizing:border-box}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:default}.mat-select-value{display:table-cell;max-width:0;width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{display:table-cell;vertical-align:middle}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc1.ViewportRuler }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ErrorStateMatcher }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.NgControl, decorators: [{\n                type: Self\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SELECT_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc6.LiveAnnouncer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_SELECT_CONFIG]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], openedChange: [{\n            type: Output\n        }], _openedStream: [{\n            type: Output,\n            args: ['opened']\n        }], _closedStream: [{\n            type: Output,\n            args: ['closed']\n        }], selectionChange: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], id: [{\n            type: Input\n        }], disableOptionCentering: [{\n            type: Input\n        }], typeaheadDebounceInterval: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], trigger: [{\n            type: ViewChild,\n            args: ['trigger']\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], overlayDir: [{\n            type: ViewChild,\n            args: [CdkConnectedOverlay]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }], optionGroups: [{\n            type: ContentChildren,\n            args: [MatOptgroup, { descendants: true }]\n        }], panelClass: [{\n            type: Input\n        }], customTrigger: [{\n            type: ContentChild,\n            args: [MatSelectTrigger]\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], errorStateMatcher: [{\n            type: Input\n        }], sortComparator: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_required;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_multiple;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableOptionCentering;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_typeaheadDebounceInterval;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatSelect.ngAcceptInputType_disableRipple;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollStrategyFactory;\n    /**\n     * Whether or not the overlay panel is open.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._panelOpen;\n    /**\n     * Whether filling out the select is required in the form.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._required;\n    /**\n     * The scroll position of the overlay panel, calculated to center the selected option.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._scrollTop;\n    /**\n     * The placeholder displayed in the trigger of the select.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._placeholder;\n    /**\n     * Whether the component is in multiple selection mode.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._multiple;\n    /**\n     * Comparison function to specify which option is displayed. Defaults to object equality.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._compareWith;\n    /**\n     * Unique id for this input.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._uid;\n    /**\n     * Emits whenever the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._destroy;\n    /**\n     * The last measured value for the trigger's client bounding rect.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerRect;\n    /**\n     * The aria-describedby attribute on the select for improved a11y.\n     * @type {?}\n     */\n    MatSelect.prototype._ariaDescribedby;\n    /**\n     * The cached font-size of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype._triggerFontSize;\n    /**\n     * Deals with the selection logic.\n     * @type {?}\n     */\n    MatSelect.prototype._selectionModel;\n    /**\n     * Manages keyboard events for options in the panel.\n     * @type {?}\n     */\n    MatSelect.prototype._keyManager;\n    /**\n     * `View -> model callback called when value changes`\n     * @type {?}\n     */\n    MatSelect.prototype._onChange;\n    /**\n     * `View -> model callback called when select has been touched`\n     * @type {?}\n     */\n    MatSelect.prototype._onTouched;\n    /**\n     * The IDs of child options to be passed to the aria-owns attribute.\n     * @type {?}\n     */\n    MatSelect.prototype._optionIds;\n    /**\n     * The value of the select panel's transform-origin property.\n     * @type {?}\n     */\n    MatSelect.prototype._transformOrigin;\n    /**\n     * Emits when the panel element is finished transforming in.\n     * @type {?}\n     */\n    MatSelect.prototype._panelDoneAnimatingStream;\n    /**\n     * Strategy that will be used to handle scrolling while the select panel is open.\n     * @type {?}\n     */\n    MatSelect.prototype._scrollStrategy;\n    /**\n     * The y-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text.\n     * when the panel opens. Will change based on the y-position of the selected option.\n     * @type {?}\n     */\n    MatSelect.prototype._offsetY;\n    /**\n     * This position config ensures that the top \"start\" corner of the overlay\n     * is aligned with with the top \"start\" of the origin by default (overlapping\n     * the trigger completely). If the panel cannot fit below the trigger, it\n     * will fall back to a position above the trigger.\n     * @type {?}\n     */\n    MatSelect.prototype._positions;\n    /**\n     * Whether the component is disabling centering of the active option over the trigger.\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._disableOptionCentering;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._focused;\n    /**\n     * A name for this control that can be used by `mat-form-field`.\n     * @type {?}\n     */\n    MatSelect.prototype.controlType;\n    /**\n     * Trigger that opens the select.\n     * @type {?}\n     */\n    MatSelect.prototype.trigger;\n    /**\n     * Panel containing the select options.\n     * @type {?}\n     */\n    MatSelect.prototype.panel;\n    /**\n     * Overlay pane containing the options.\n     * @deprecated To be turned into a private API.\n     * \\@breaking-change 10.0.0\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.overlayDir;\n    /**\n     * All of the defined select options.\n     * @type {?}\n     */\n    MatSelect.prototype.options;\n    /**\n     * All of the defined groups of options.\n     * @type {?}\n     */\n    MatSelect.prototype.optionGroups;\n    /**\n     * Classes to be passed to the select panel. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    MatSelect.prototype.panelClass;\n    /**\n     * User-supplied override of the trigger element.\n     * @type {?}\n     */\n    MatSelect.prototype.customTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._value;\n    /**\n     * Aria label of the select. If not specified, the placeholder will be used as label.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabel;\n    /**\n     * Input that can be used to specify the `aria-labelledby` attribute.\n     * @type {?}\n     */\n    MatSelect.prototype.ariaLabelledby;\n    /**\n     * Object used to control when error messages are shown.\n     * @type {?}\n     */\n    MatSelect.prototype.errorStateMatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._typeaheadDebounceInterval;\n    /**\n     * Function used to sort the values in a select in multiple mode.\n     * Follows the same logic as `Array.prototype.sort`.\n     * @type {?}\n     */\n    MatSelect.prototype.sortComparator;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._id;\n    /**\n     * Combined stream of all of the child options' change events.\n     * @type {?}\n     */\n    MatSelect.prototype.optionSelectionChanges;\n    /**\n     * Event emitted when the select panel has been toggled.\n     * @type {?}\n     */\n    MatSelect.prototype.openedChange;\n    /**\n     * Event emitted when the select has been opened.\n     * @type {?}\n     */\n    MatSelect.prototype._openedStream;\n    /**\n     * Event emitted when the select has been closed.\n     * @type {?}\n     */\n    MatSelect.prototype._closedStream;\n    /**\n     * Event emitted when the selected value has been changed by the user.\n     * @type {?}\n     */\n    MatSelect.prototype.selectionChange;\n    /**\n     * Event that emits whenever the raw value of the select changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatSelect.prototype.valueChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._parentFormField;\n    /** @type {?} */\n    MatSelect.prototype.ngControl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatSelect.prototype._liveAnnouncer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/select-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectModule });\nMatSelectModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectModule_Factory(t) { return new (t || MatSelectModule)(); }, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[\n            CommonModule,\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n        ],\n        MatFormFieldModule, MatOptionModule, MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectModule, { declarations: function () { return [MatSelect,\n        MatSelectTrigger]; }, imports: function () { return [CommonModule,\n        OverlayModule,\n        MatOptionModule,\n        MatCommonModule]; }, exports: function () { return [MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                exports: [MatFormFieldModule, MatSelect, MatSelectTrigger, MatOptionModule, MatCommonModule],\n                declarations: [MatSelect, MatSelectTrigger],\n                providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/select/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, SELECT_ITEM_HEIGHT_EM, SELECT_MULTIPLE_PANEL_PADDING_X, SELECT_PANEL_INDENT_PADDING_X, SELECT_PANEL_MAX_HEIGHT, SELECT_PANEL_PADDING_X, SELECT_PANEL_VIEWPORT_PADDING, matSelectAnimations };\n\n//# sourceMappingURL=select.js.map","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Directive, Input, ElementRef, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, Subscription, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Wrapper for the CdkTable with Material design styles.\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/table';\n\nconst _c0 = [[[\"caption\"]]];\nconst _c1 = [\"caption\"];\nfunction MatTextColumn_th_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r10 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r10.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r10.headerText, \" \");\n} }\nfunction MatTextColumn_td_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"td\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const data_r12 = ctx.$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"text-align\", ctx_r11.justify);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r11.dataAccessor(data_r12, ctx_r11.name), \" \");\n} }\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /**\n         * Overrides the sticky CSS class set by the `CdkTable`.\n         */\n        this.stickyCssClass = 'mat-table-sticky';\n    }\n}\nMatTable.ɵfac = function MatTable_Factory(t) { return ɵMatTable_BaseFactory(t || MatTable); };\nMatTable.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTable, selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]], hostAttrs: [1, \"mat-table\"], exportAs: [\"matTable\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkTable, useExisting: MatTable }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 0, consts: [[\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]], template: function MatTable_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementContainer(1, 0);\n        ɵngcc0.ɵɵelementContainer(2, 1);\n        ɵngcc0.ɵɵelementContainer(3, 2);\n    } }, directives: [ɵngcc1.HeaderRowOutlet, ɵngcc1.DataRowOutlet, ɵngcc1.FooterRowOutlet], styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"], encapsulation: 2 });\nconst ɵMatTable_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTable);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTable, [{\n        type: Component,\n        args: [{\n                selector: 'mat-table, table[mat-table]',\n                exportAs: 'matTable',\n                template: CDK_TABLE_TEMPLATE,\n                host: {\n                    'class': 'mat-table'\n                },\n                providers: [{ provide: CdkTable, useExisting: MatTable }],\n                encapsulation: ViewEncapsulation.None,\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\\\"\\\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type,[dir=rtl] mat-header-cell:first-of-type,[dir=rtl] mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type,[dir=rtl] mat-header-cell:last-of-type,[dir=rtl] mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type,[dir=rtl] td.mat-cell:first-of-type,[dir=rtl] td.mat-footer-cell:first-of-type{padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type,[dir=rtl] td.mat-cell:last-of-type,[dir=rtl] td.mat-footer-cell:last-of-type{padding-right:0;padding-left:24px}\\n\"]\n            }]\n    }], null, null); })();\nif (false) {\n    /**\n     * Overrides the sticky CSS class set by the `CdkTable`.\n     * @type {?}\n     * @protected\n     */\n    MatTable.prototype.stickyCssClass;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/cell.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = function MatCellDef_Factory(t) { return ɵMatCellDef_BaseFactory(t || MatCellDef); };\nMatCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCellDef, selectors: [[\"\", \"matCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkCellDef, useExisting: MatCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matCellDef]',\n                providers: [{ provide: CdkCellDef, useExisting: MatCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) { return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef); };\nMatHeaderCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCellDef, selectors: [[\"\", \"matHeaderCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderCellDef]',\n                providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) { return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef); };\nMatFooterCellDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCellDef, selectors: [[\"\", \"matFooterCellDef\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterCellDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterCellDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCellDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterCellDef]',\n                providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }]\n            }]\n    }], null, null); })();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n}\nMatColumnDef.ɵfac = function MatColumnDef_Factory(t) { return ɵMatColumnDef_BaseFactory(t || MatColumnDef); };\nMatColumnDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatColumnDef, selectors: [[\"\", \"matColumnDef\", \"\"]], inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatColumnDef.propDecorators = {\n    name: [{ type: Input, args: ['matColumnDef',] }]\n};\nconst ɵMatColumnDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatColumnDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatColumnDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matColumnDef]',\n                inputs: ['sticky'],\n                providers: [\n                    { provide: CdkColumnDef, useExisting: MatColumnDef },\n                    { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef }\n                ]\n            }]\n    }], null, { name: [{\n            type: Input,\n            args: ['matColumnDef']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatColumnDef.ngAcceptInputType_sticky;\n    /**\n     * Unique name for this column.\n     * @type {?}\n     */\n    MatColumnDef.prototype.name;\n}\n/**\n * Header cell template container that adds the right classes and role.\n */\nclass MatHeaderCell extends CdkHeaderCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) { return new (t || MatHeaderCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatHeaderCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderCell, selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]], hostAttrs: [\"role\", \"columnheader\", 1, \"mat-header-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatHeaderCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-header-cell, th[mat-header-cell]',\n                host: {\n                    'class': 'mat-header-cell',\n                    'role': 'columnheader'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Footer cell template container that adds the right classes and role.\n */\nclass MatFooterCell extends CdkFooterCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatFooterCell.ɵfac = function MatFooterCell_Factory(t) { return new (t || MatFooterCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatFooterCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterCell, selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-footer-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatFooterCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-footer-cell, td[mat-footer-cell]',\n                host: {\n                    'class': 'mat-footer-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Cell template container that adds the right classes and role.\n */\nclass MatCell extends CdkCell {\n    /**\n     * @param {?} columnDef\n     * @param {?} elementRef\n     */\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        elementRef.nativeElement.classList.add(`mat-column-${columnDef.cssClassFriendlyName}`);\n    }\n}\nMatCell.ɵfac = function MatCell_Factory(t) { return new (t || MatCell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CdkColumnDef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatCell.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCell, selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]], hostAttrs: [\"role\", \"gridcell\", 1, \"mat-cell\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatCell.ctorParameters = () => [\n    { type: CdkColumnDef },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCell, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-cell, td[mat-cell]',\n                host: {\n                    'class': 'mat-cell',\n                    'role': 'gridcell'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc1.CdkColumnDef }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/row.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) { return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef); };\nMatHeaderRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatHeaderRowDef, selectors: [[\"\", \"matHeaderRowDef\", \"\"]], inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatHeaderRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matHeaderRowDef]',\n                providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatHeaderRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) { return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef); };\nMatFooterRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatFooterRowDef, selectors: [[\"\", \"matFooterRowDef\", \"\"]], inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatFooterRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matFooterRowDef]',\n                providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']\n            }]\n    }], null, null); })();\nif (false) {\n    /** @type {?} */\n    MatFooterRowDef.ngAcceptInputType_sticky;\n}\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n * @template T\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = function MatRowDef_Factory(t) { return ɵMatRowDef_BaseFactory(t || MatRowDef); };\nMatRowDef.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRowDef, selectors: [[\"\", \"matRowDef\", \"\"]], inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRowDef, useExisting: MatRowDef }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatRowDef_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRowDef);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRowDef, [{\n        type: Directive,\n        args: [{\n                selector: '[matRowDef]',\n                providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) { return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow); };\nMatHeaderRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatHeaderRow, selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-header-row\"], exportAs: [\"matHeaderRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatHeaderRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatHeaderRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHeaderRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatHeaderRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-header-row, tr[mat-header-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-header-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matHeaderRow',\n                providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }]\n            }]\n    }], null, null); })();\n/**\n * Footer template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = function MatFooterRow_Factory(t) { return ɵMatFooterRow_BaseFactory(t || MatFooterRow); };\nMatFooterRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatFooterRow, selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-footer-row\"], exportAs: [\"matFooterRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkFooterRow, useExisting: MatFooterRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatFooterRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatFooterRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatFooterRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatFooterRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-footer-row, tr[mat-footer-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-footer-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matFooterRow',\n                providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }]\n            }]\n    }], null, null); })();\n/**\n * Data row template container that contains the cell outlet. Adds the right class and role.\n */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = function MatRow_Factory(t) { return ɵMatRow_BaseFactory(t || MatRow); };\nMatRow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRow, selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]], hostAttrs: [\"role\", \"row\", 1, \"mat-row\"], exportAs: [\"matRow\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkRow, useExisting: MatRow }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkCellOutlet\", \"\"]], template: function MatRow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainer(0, 0);\n    } }, directives: [ɵngcc1.CdkCellOutlet], encapsulation: 2 });\nconst ɵMatRow_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRow);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRow, [{\n        type: Component,\n        args: [{\n                selector: 'mat-row, tr[mat-row]',\n                template: CDK_ROW_TEMPLATE,\n                host: {\n                    'class': 'mat-row',\n                    'role': 'row'\n                },\n                // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRow',\n                providers: [{ provide: CdkRow, useExisting: MatRow }]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/text-column.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n * @template T\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = function MatTextColumn_Factory(t) { return ɵMatTextColumn_BaseFactory(t || MatTextColumn); };\nMatTextColumn.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatTextColumn, selectors: [[\"mat-text-column\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 0, consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]], template: function MatTextColumn_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementContainerStart(0, 0);\n        ɵngcc0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n        ɵngcc0.ɵɵelementContainerEnd();\n    } }, directives: [MatColumnDef,\n        MatHeaderCellDef,\n        MatCellDef,\n        MatHeaderCell,\n        MatCell], encapsulation: 2 });\nconst ɵMatTextColumn_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTextColumn);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTextColumn, [{\n        type: Component,\n        args: [{\n                selector: 'mat-text-column',\n                template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                encapsulation: ViewEncapsulation.None,\n                // Change detection is intentionally not set to OnPush. This component's template will be provided\n                // to the table to be inserted into its view. This is problematic when change detection runs since\n                // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                // mean's the template in the table's view will not have the updated value (and in fact will cause\n                // an ExpressionChangedAfterItHasBeenCheckedError).\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTableModule });\nMatTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTableModule_Factory(t) { return new (t || MatTableModule)(); }, imports: [[\n            CdkTableModule,\n            MatCommonModule,\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTableModule, { declarations: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; }, imports: function () { return [CdkTableModule,\n        MatCommonModule]; }, exports: function () { return [MatTable,\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatTextColumn]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTableModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CdkTableModule,\n                    MatCommonModule,\n                ],\n                exports: EXPORTED_DECLARATIONS,\n                declarations: EXPORTED_DECLARATIONS\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/table-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n * @type {?}\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n * @template T\n */\nclass MatTableDataSource extends DataSource {\n    /**\n     * @param {?=} initialData\n     */\n    constructor(initialData = []) {\n        super();\n        /**\n         * Stream emitting render data to the table (depends on ordered data changes).\n         */\n        this._renderData = new BehaviorSubject([]);\n        /**\n         * Stream that emits when a new filter string is set on the data source.\n         */\n        this._filter = new BehaviorSubject('');\n        /**\n         * Used to react to internal changes of the paginator that are made by the data source itself.\n         */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = Subscription.EMPTY;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (/**\n         * @param {?} data\n         * @param {?} sortHeaderId\n         * @return {?}\n         */\n        (data, sortHeaderId) => {\n            /** @type {?} */\n            const value = ((/** @type {?} */ (data)))[sortHeaderId];\n            if (_isNumberValue(value)) {\n                /** @type {?} */\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        });\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (/**\n         * @param {?} data\n         * @param {?} sort\n         * @return {?}\n         */\n        (data, sort) => {\n            /** @type {?} */\n            const active = sort.active;\n            /** @type {?} */\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((/**\n             * @param {?} a\n             * @param {?} b\n             * @return {?}\n             */\n            (a, b) => {\n                /** @type {?} */\n                let valueA = this.sortingDataAccessor(a, active);\n                /** @type {?} */\n                let valueB = this.sortingDataAccessor(b, active);\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                /** @type {?} */\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            }));\n        });\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @return Whether the filter matches against the data\n         */\n        this.filterPredicate = (/**\n         * @param {?} data\n         * @param {?} filter\n         * @return {?}\n         */\n        (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            /** @type {?} */\n            const dataStr = Object.keys(data).reduce((/**\n             * @param {?} currentTerm\n             * @param {?} key\n             * @return {?}\n             */\n            (currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + ((/** @type {?} */ (data)))[key] + '◬';\n            }), '').toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            /** @type {?} */\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        });\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Array of data that should be rendered by the table, where each object represents one row.\n     * @return {?}\n     */\n    get data() { return this._data.value; }\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    set data(data) { this._data.next(data); }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     * @return {?}\n     */\n    get filter() { return this._filter.value; }\n    /**\n     * @param {?} filter\n     * @return {?}\n     */\n    set filter(filter) { this._filter.next(filter); }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     * @return {?}\n     */\n    get sort() { return this._sort; }\n    /**\n     * @param {?} sort\n     * @return {?}\n     */\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     * @return {?}\n     */\n    get paginator() { return this._paginator; }\n    /**\n     * @param {?} paginator\n     * @return {?}\n     */\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     * @return {?}\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        /** @type {?} */\n        const sortChange = this._sort ?\n            (/** @type {?} */ (merge(this._sort.sortChange, this._sort.initialized))) :\n            of(null);\n        /** @type {?} */\n        const pageChange = this._paginator ?\n            (/** @type {?} */ (merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized))) :\n            of(null);\n        /** @type {?} */\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        /** @type {?} */\n        const filteredData = combineLatest([dataStream, this._filter])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._filterData(data))));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        /** @type {?} */\n        const orderedData = combineLatest([filteredData, sortChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._orderData(data))));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        /** @type {?} */\n        const paginatedData = combineLatest([orderedData, pageChange])\n            .pipe(map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([data]) => this._pageData(data))));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => this._renderData.next(data)));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            !this.filter ? data : data.filter((/**\n             * @param {?} obj\n             * @return {?}\n             */\n            obj => this.filterPredicate(obj, this.filter)));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     * @param {?} data\n     * @return {?}\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     * @param {?} data\n     * @return {?}\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        /** @type {?} */\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     * @param {?} filteredDataLength\n     * @return {?}\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                /** @type {?} */\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                /** @type {?} */\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        }));\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * \\@docs-private\n     * @return {?}\n     */\n    connect() { return this._renderData; }\n    /**\n     * Used by the MatTable. Called when it is destroyed. No-op.\n     * \\@docs-private\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * Stream that emits when a new data array is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._data;\n    /**\n     * Stream emitting render data to the table (depends on ordered data changes).\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._renderData;\n    /**\n     * Stream that emits when a new filter string is set on the data source.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._filter;\n    /**\n     * Used to react to internal changes of the paginator that are made by the data source itself.\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._internalPageChanges;\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     * @type {?}\n     */\n    MatTableDataSource.prototype._renderChangesSubscription;\n    /**\n     * The filtered set of data that has been matched by the filter string, or all the data if there\n     * is no filter. Useful for knowing the set of data the table represents.\n     * For example, a 'selectAll()' function would likely want to select the set of filtered data\n     * shown to the user rather than all the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filteredData;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._sort;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTableDataSource.prototype._paginator;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * \\@param data Data object that is being accessed.\n     * \\@param sortHeaderId The name of the column that represents the data.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortingDataAccessor;\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * \\@param data The array of data that should be sorted.\n     * \\@param sort The connected MatSort that holds the current sort state.\n     * @type {?}\n     */\n    MatTableDataSource.prototype.sortData;\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * \\@param data Data object used to check against the filter.\n     * \\@param filter Filter string that has been set on the data source.\n     * \\@return Whether the filter matches against the data\n     * @type {?}\n     */\n    MatTableDataSource.prototype.filterPredicate;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/table/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n\n//# sourceMappingURL=table.js.map","import { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { AriaDescriber, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, ViewContainerRef, NgZone, Inject, Optional, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ScrollDispatcher } from '@angular/cdk/scrolling';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by MatTooltip.\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/overlay';\nimport * as ɵngcc2 from '@angular/cdk/scrolling';\nimport * as ɵngcc3 from '@angular/cdk/platform';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nimport * as ɵngcc6 from '@angular/cdk/layout';\nimport * as ɵngcc7 from '@angular/common';\nconst matTooltipAnimations = {\n    /**\n     * Animation that transitions a tooltip in and out.\n     */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 })\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle repositioning after scroll events.\n * @type {?}\n */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @type {?}\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n/**\n * Options used to bind passive event listeners.\n * @type {?}\n */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n * @type {?}\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * \\@docs-private\n * @param {?} position\n * @return {?}\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/**\n * Injection token that determines the scroll handling while a tooltip is visible.\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS }));\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default `matTooltip` options that can be overridden.\n * @record\n */\nfunction MatTooltipDefaultOptions() { }\nif (false) {\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.showDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.hideDelay;\n    /** @type {?} */\n    MatTooltipDefaultOptions.prototype.touchendHideDelay;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.touchGestures;\n    /** @type {?|undefined} */\n    MatTooltipDefaultOptions.prototype.position;\n}\n/**\n * Injection token to be used to override the default options for `matTooltip`.\n * @type {?}\n */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip {\n    /**\n     * @param {?} _overlay\n     * @param {?} _elementRef\n     * @param {?} _scrollDispatcher\n     * @param {?} _viewContainerRef\n     * @param {?} _ngZone\n     * @param {?} _platform\n     * @param {?} _ariaDescriber\n     * @param {?} _focusMonitor\n     * @param {?} scrollStrategy\n     * @param {?} _dir\n     * @param {?} _defaultOptions\n     * @param {?=} _hammerLoader\n     */\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, \n    /**\n     * @deprecated _hammerLoader parameter to be removed.\n     * @breaking-change 9.0.0\n     */\n    // Note that we need to give Angular something to inject here so it doesn't throw.\n    _hammerLoader) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        /**\n         * The default delay in ms before showing the tooltip after show is called\n         */\n        this.showDelay = this._defaultOptions.showDelay;\n        /**\n         * The default delay in ms before hiding the tooltip after hide is called\n         */\n        this.hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /**\n         * Manually-bound passive event listeners.\n         */\n        this._passiveListeners = new Map();\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Handles the keydown events on the host element.\n         * Needs to be an arrow function so that we can use it in addEventListener.\n         */\n        this._handleKeydown = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n        });\n        this._scrollStrategy = scrollStrategy;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _focusMonitor.monitor(_elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} origin\n         * @return {?}\n         */\n        origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.hide(0)));\n            }\n            else if (origin === 'keyboard') {\n                _ngZone.run((/**\n                 * @return {?}\n                 */\n                () => this.show()));\n            }\n        }));\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            _elementRef.nativeElement.addEventListener('keydown', this._handleKeydown);\n        }));\n    }\n    /**\n     * Allows the user to define the position of the tooltip relative to the parent element\n     * @return {?}\n     */\n    get position() { return this._position; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set position(value) {\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition();\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._tooltipInstance)).show(0);\n                }\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /**\n     * Disables the display of the tooltip.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n    }\n    /**\n     * The message to be displayed in the tooltip\n     * @return {?}\n     */\n    get message() { return this._message; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        this._message = value != null ? `${value}`.trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n                }));\n            }));\n        }\n    }\n    /**\n     * Classes to be passed to the tooltip. Supports the same syntax as `ngClass`.\n     * @return {?}\n     */\n    get tooltipClass() { return this._tooltipClass; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    /**\n     * Setup styling-specific things\n     * @return {?}\n     */\n    ngOnInit() {\n        // This needs to happen in `ngOnInit` so the initial values for all inputs have been set.\n        this._setupPointerEvents();\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        nativeElement.removeEventListener('keydown', this._handleKeydown);\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        }));\n        this._passiveListeners.clear();\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message);\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /**\n     * Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    show(delay = this.showDelay) {\n        if (this.disabled || !this.message || (this._isTooltipVisible() &&\n            !(/** @type {?} */ (this._tooltipInstance))._showTimeoutId && !(/** @type {?} */ (this._tooltipInstance))._hideTimeoutId)) {\n            return;\n        }\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\n        this._tooltipInstance = overlayRef.attach(this._portal).instance;\n        this._tooltipInstance.afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        (/** @type {?} */ (this._tooltipInstance)).show(delay);\n    }\n    /**\n     * Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input\n     * @param {?=} delay\n     * @return {?}\n     */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /**\n     * Shows/hides the tooltip\n     * @return {?}\n     */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /**\n     * Returns true if the tooltip is currently visible to the user\n     * @return {?}\n     */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /**\n     * Create the overlay config and position strategy\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        /** @type {?} */\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        /** @type {?} */\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn('.mat-tooltip')\n            .withFlexibleDimensions(false)\n            .withViewportMargin(8)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} change\n         * @return {?}\n         */\n        change => {\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run((/**\n                     * @return {?}\n                     */\n                    () => this.hide(0)));\n                }\n            }\n        }));\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: TOOLTIP_PANEL_CLASS,\n            scrollStrategy: this._scrollStrategy()\n        });\n        this._updatePosition();\n        this._overlayRef.detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._detach()));\n        return this._overlayRef;\n    }\n    /**\n     * Detaches the currently-attached tooltip.\n     * @private\n     * @return {?}\n     */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /**\n     * Updates the position of the current tooltip.\n     * @private\n     * @return {?}\n     */\n    _updatePosition() {\n        /** @type {?} */\n        const position = (/** @type {?} */ ((/** @type {?} */ (this._overlayRef)).getConfig().positionStrategy));\n        /** @type {?} */\n        const origin = this._getOrigin();\n        /** @type {?} */\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            Object.assign(Object.assign({}, origin.main), overlay.main),\n            Object.assign(Object.assign({}, origin.fallback), overlay.fallback)\n        ]);\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     * @return {?}\n     */\n    _getOrigin() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y }\n        };\n    }\n    /**\n     * Returns the overlay position and a fallback position based on the user's preference\n     * @return {?}\n     */\n    _getOverlayPosition() {\n        /** @type {?} */\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        /** @type {?} */\n        const position = this.position;\n        /** @type {?} */\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y }\n        };\n    }\n    /**\n     * Updates the tooltip message and repositions the overlay according to the new message length\n     * @private\n     * @return {?}\n     */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1), takeUntil(this._destroyed)).subscribe((/**\n             * @return {?}\n             */\n            () => {\n                if (this._tooltipInstance) {\n                    (/** @type {?} */ (this._overlayRef)).updatePosition();\n                }\n            }));\n        }\n    }\n    /**\n     * Updates the tooltip class\n     * @private\n     * @param {?} tooltipClass\n     * @return {?}\n     */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /**\n     * Inverts an overlay position.\n     * @private\n     * @param {?} x\n     * @param {?} y\n     * @return {?}\n     */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /**\n     * Binds the pointer events to the tooltip trigger.\n     * @private\n     * @return {?}\n     */\n    _setupPointerEvents() {\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (!this._platform.IOS && !this._platform.ANDROID) {\n            this._passiveListeners\n                .set('mouseenter', (/**\n             * @return {?}\n             */\n            () => this.show()))\n                .set('mouseleave', (/**\n             * @return {?}\n             */\n            () => this.hide()));\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            /** @type {?} */\n            const touchendListener = (/**\n             * @return {?}\n             */\n            () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            });\n            this._passiveListeners\n                .set('touchend', touchendListener)\n                .set('touchcancel', touchendListener)\n                .set('touchstart', (/**\n             * @return {?}\n             */\n            () => {\n                // Note that it's important that we don't `preventDefault` here,\n                // because it can prevent click events from firing on the element.\n                clearTimeout(this._touchstartTimeout);\n                this._touchstartTimeout = setTimeout((/**\n                 * @return {?}\n                 */\n                () => this.show()), LONGPRESS_DELAY);\n            }));\n        }\n        this._passiveListeners.forEach((/**\n         * @param {?} listener\n         * @param {?} event\n         * @return {?}\n         */\n        (listener, event) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        }));\n    }\n    /**\n     * Disables the native browser gestures, based on how the tooltip has been configured.\n     * @private\n     * @return {?}\n     */\n    _disableNativeGesturesIfNecessary() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const style = element.style;\n        /** @type {?} */\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect = style.msUserSelect = style.webkitUserSelect =\n                    ((/** @type {?} */ (style))).MozUserSelect = 'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                ((/** @type {?} */ (style))).webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\nMatTooltip.ɵfac = function MatTooltip_Factory(t) { return new (t || MatTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Platform), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nMatTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatTooltip, selectors: [[\"\", \"matTooltip\", \"\"]], inputs: { showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, exportAs: [\"matTooltip\"] });\n/** @nocollapse */\nMatTooltip.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: AriaDescriber },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TOOLTIP_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TOOLTIP_DEFAULT_OPTIONS,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ElementRef,] }] }\n];\nMatTooltip.propDecorators = {\n    position: [{ type: Input, args: ['matTooltipPosition',] }],\n    disabled: [{ type: Input, args: ['matTooltipDisabled',] }],\n    showDelay: [{ type: Input, args: ['matTooltipShowDelay',] }],\n    hideDelay: [{ type: Input, args: ['matTooltipHideDelay',] }],\n    touchGestures: [{ type: Input, args: ['matTooltipTouchGestures',] }],\n    message: [{ type: Input, args: ['matTooltip',] }],\n    tooltipClass: [{ type: Input, args: ['matTooltipClass',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltip, [{\n        type: Directive,\n        args: [{\n                selector: '[matTooltip]',\n                exportAs: 'matTooltip'\n            }]\n    }], function () { return [{ type: ɵngcc1.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc2.ScrollDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc3.Platform }, { type: ɵngcc4.AriaDescriber }, { type: ɵngcc4.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }]; }, { showDelay: [{\n            type: Input,\n            args: ['matTooltipShowDelay']\n        }], hideDelay: [{\n            type: Input,\n            args: ['matTooltipHideDelay']\n        }], touchGestures: [{\n            type: Input,\n            args: ['matTooltipTouchGestures']\n        }], position: [{\n            type: Input,\n            args: ['matTooltipPosition']\n        }], disabled: [{\n            type: Input,\n            args: ['matTooltipDisabled']\n        }], message: [{\n            type: Input,\n            args: ['matTooltip']\n        }], tooltipClass: [{\n            type: Input,\n            args: ['matTooltipClass']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_hideDelay;\n    /** @type {?} */\n    MatTooltip.ngAcceptInputType_showDelay;\n    /** @type {?} */\n    MatTooltip.prototype._overlayRef;\n    /** @type {?} */\n    MatTooltip.prototype._tooltipInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._position;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._tooltipClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollStrategy;\n    /**\n     * The default delay in ms before showing the tooltip after show is called\n     * @type {?}\n     */\n    MatTooltip.prototype.showDelay;\n    /**\n     * The default delay in ms before hiding the tooltip after hide is called\n     * @type {?}\n     */\n    MatTooltip.prototype.hideDelay;\n    /**\n     * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n     * uses a long press gesture to show and hide, however it can conflict with the native browser\n     * gestures. To work around the conflict, Angular Material disables native gestures on the\n     * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n     * elements). The different values for this option configure the touch event handling as follows:\n     * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n     *   browser gestures on particular elements. In particular, it allows text selection on inputs\n     *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n     * - `on` - Enables touch gestures for all elements and disables native\n     *   browser gestures with no exceptions.\n     * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n     *   showing on touch devices.\n     * @type {?}\n     */\n    MatTooltip.prototype.touchGestures;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._message;\n    /**\n     * Manually-bound passive event listeners.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._passiveListeners;\n    /**\n     * Timer started at the last `touchstart` event.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._touchstartTimeout;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._destroyed;\n    /**\n     * Handles the keydown events on the host element.\n     * Needs to be an arrow function so that we can use it in addEventListener.\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._handleKeydown;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._scrollDispatcher;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._platform;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._ariaDescriber;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTooltip.prototype._defaultOptions;\n}\n/**\n * Internal component that wraps the tooltip's content.\n * \\@docs-private\n */\nclass TooltipComponent {\n    /**\n     * @param {?} _changeDetectorRef\n     * @param {?} _breakpointObserver\n     */\n    constructor(_changeDetectorRef, _breakpointObserver) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this._breakpointObserver = _breakpointObserver;\n        /**\n         * Property watched by the animation framework to show or hide the tooltip\n         */\n        this._visibility = 'initial';\n        /**\n         * Whether interactions on the page should close the tooltip\n         */\n        this._closeOnInteraction = false;\n        /**\n         * Subject for notifying that the tooltip has been hidden from the view\n         */\n        this._onHide = new Subject();\n        /**\n         * Stream that emits whether the user has a handset-sized display.\n         */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param {?} delay Amount of milliseconds to the delay showing the tooltip.\n     * @return {?}\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        if (this._hideTimeoutId) {\n            clearTimeout(this._hideTimeoutId);\n            this._hideTimeoutId = null;\n        }\n        // Body interactions should cancel the tooltip if there is a delay in showing.\n        this._closeOnInteraction = true;\n        this._showTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'visible';\n            this._showTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param {?} delay Amount of milliseconds to delay showing the tooltip.\n     * @return {?}\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        if (this._showTimeoutId) {\n            clearTimeout(this._showTimeoutId);\n            this._showTimeoutId = null;\n        }\n        this._hideTimeoutId = setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._visibility = 'hidden';\n            this._hideTimeoutId = null;\n            // Mark for check so if any parent component has set the\n            // ChangeDetectionStrategy to OnPush it will be checked anyways\n            this._markForCheck();\n        }), delay);\n    }\n    /**\n     * Returns an observable that notifies when the tooltip has been hidden from view.\n     * @return {?}\n     */\n    afterHidden() {\n        return this._onHide.asObservable();\n    }\n    /**\n     * Whether the tooltip is being displayed.\n     * @return {?}\n     */\n    isVisible() {\n        return this._visibility === 'visible';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._onHide.complete();\n    }\n    /**\n     * @return {?}\n     */\n    _animationStart() {\n        this._closeOnInteraction = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _animationDone(event) {\n        /** @type {?} */\n        const toState = (/** @type {?} */ (event.toState));\n        if (toState === 'hidden' && !this.isVisible()) {\n            this._onHide.next();\n        }\n        if (toState === 'visible' || toState === 'hidden') {\n            this._closeOnInteraction = true;\n        }\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     * @return {?}\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     * @return {?}\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n}\nTooltipComponent.ɵfac = function TooltipComponent_Factory(t) { return new (t || TooltipComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BreakpointObserver)); };\nTooltipComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: TooltipComponent, selectors: [[\"mat-tooltip-component\"]], hostAttrs: [\"aria-hidden\", \"true\"], hostVars: 2, hostBindings: function TooltipComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function TooltipComponent_click_HostBindingHandler($event) { return ctx._handleBodyInteraction(); }, false, ɵngcc0.ɵɵresolveBody);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"zoom\", ctx._visibility === \"visible\" ? 1 : null);\n    } }, decls: 3, vars: 7, consts: [[1, \"mat-tooltip\", 3, \"ngClass\"]], template: function TooltipComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"@state.start\", function TooltipComponent_Template_div_animation_state_start_0_listener($event) { return ctx._animationStart(); })(\"@state.done\", function TooltipComponent_Template_div_animation_state_done_0_listener($event) { return ctx._animationDone($event); });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵtext(2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var tmp_0_0 = null;\n        const currVal_0 = (tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 5, ctx._isHandset)) == null ? null : tmp_0_0.matches;\n        ɵngcc0.ɵɵclassProp(\"mat-tooltip-handset\", currVal_0);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.tooltipClass)(\"@state\", ctx._visibility);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate(ctx.message);\n    } }, directives: [ɵngcc7.NgClass], pipes: [ɵngcc7.AsyncPipe], styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"], encapsulation: 2, data: { animation: [matTooltipAnimations.tooltipState] }, changeDetection: 0 });\n/** @nocollapse */\nTooltipComponent.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: BreakpointObserver }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TooltipComponent, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tooltip-component',\n                template: \"<div class=\\\"mat-tooltip\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\"\\n     [@state]=\\\"_visibility\\\"\\n     (@state.start)=\\\"_animationStart()\\\"\\n     (@state.done)=\\\"_animationDone($event)\\\">{{message}}</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [matTooltipAnimations.tooltipState],\n                host: {\n                    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n                    '(body:click)': 'this._handleBodyInteraction()',\n                    'aria-hidden': 'true'\n                },\n                styles: [\".mat-tooltip-panel{pointer-events:none !important}.mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.BreakpointObserver }]; }, null); })();\nif (false) {\n    /**\n     * Message to display in the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype.message;\n    /**\n     * Classes to be added to the tooltip. Supports the same syntax as `ngClass`.\n     * @type {?}\n     */\n    TooltipComponent.prototype.tooltipClass;\n    /**\n     * The timeout ID of any current timer set to show the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._showTimeoutId;\n    /**\n     * The timeout ID of any current timer set to hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._hideTimeoutId;\n    /**\n     * Property watched by the animation framework to show or hide the tooltip\n     * @type {?}\n     */\n    TooltipComponent.prototype._visibility;\n    /**\n     * Whether interactions on the page should close the tooltip\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._closeOnInteraction;\n    /**\n     * Subject for notifying that the tooltip has been hidden from the view\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._onHide;\n    /**\n     * Stream that emits whether the user has a handset-sized display.\n     * @type {?}\n     */\n    TooltipComponent.prototype._isHandset;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    TooltipComponent.prototype._breakpointObserver;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/tooltip-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatTooltipModule });\nMatTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatTooltipModule_Factory(t) { return new (t || MatTooltipModule)(); }, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            A11yModule,\n            CommonModule,\n            OverlayModule,\n            MatCommonModule,\n        ],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTooltipModule, { declarations: function () { return [MatTooltip,\n        TooltipComponent]; }, imports: function () { return [A11yModule,\n        CommonModule,\n        OverlayModule,\n        MatCommonModule]; }, exports: function () { return [MatTooltip,\n        TooltipComponent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatTooltipModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    CommonModule,\n                    OverlayModule,\n                    MatCommonModule,\n                ],\n                exports: [MatTooltip, TooltipComponent, MatCommonModule],\n                declarations: [MatTooltip, TooltipComponent],\n                entryComponents: [TooltipComponent],\n                providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tooltip/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n\n//# sourceMappingURL=tooltip.js.map"]}